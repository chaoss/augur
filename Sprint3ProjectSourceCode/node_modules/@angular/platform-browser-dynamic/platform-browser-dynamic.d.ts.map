{"version":3,"file":"platform-browser-dynamic.d.ts","sources":["platform-browser-dynamic.d.ts"],"names":[],"mappingssourcesContent":["/**\n * @license Angular v10.0.4\n * (c) 2010-2020 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { CompileMetadataResolver } from '@angular/compiler';\r\nimport { Compiler } from '@angular/core';\r\nimport { CompilerConfig } from '@angular/compiler';\r\nimport { CompileReflector } from '@angular/compiler';\r\nimport { CompilerFactory } from '@angular/core';\r\nimport { CompilerOptions } from '@angular/core';\r\nimport { ComponentFactory } from '@angular/core';\r\nimport { Injector } from '@angular/core';\r\nimport { JitEvaluator } from '@angular/compiler';\r\nimport { ModuleWithComponentFactories } from '@angular/core';\r\nimport { NgModuleCompiler } from '@angular/compiler';\r\nimport { NgModuleFactory } from '@angular/core';\r\nimport { PlatformRef } from '@angular/core';\r\nimport { Provider } from '@angular/core';\r\nimport { ResourceLoader } from '@angular/compiler';\r\nimport { StaticProvider } from '@angular/core';\r\nimport { StyleCompiler } from '@angular/compiler';\r\nimport { SummaryResolver } from '@angular/compiler';\r\nimport { TemplateParser } from '@angular/compiler';\r\nimport { Type } from '@angular/core';\r\nimport { Version } from '@angular/core';\r\nimport { ViewCompiler } from '@angular/compiler';\r\nimport { ɵConsole } from '@angular/core';\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport declare class JitCompilerFactory implements CompilerFactory {\r\n    private _defaultOptions;\r\n    createCompiler(options?: CompilerOptions[]): Compiler;\r\n}\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport declare const platformBrowserDynamic: (extraProviders?: StaticProvider[] | undefined) => PlatformRef;\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport declare const RESOURCE_CACHE_PROVIDER: Provider[];\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport declare const VERSION: Version;\r\n\r\n/**\r\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\r\n * ResourceLoader.\r\n *\r\n * The template cache needs to be built and loaded into window.$templateCache\r\n * via a separate mechanism.\r\n *\r\n * @publicApi\r\n */\r\nexport declare class ɵangular_packages_platform_browser_dynamic_platform_browser_dynamic_a extends ResourceLoader {\r\n    private _cache;\r\n    constructor();\r\n    get(url: string): Promise<string>;\r\n}\r\n\r\nexport declare const ɵCOMPILER_PROVIDERS__POST_R3__: StaticProvider[];\r\n\r\nexport declare class ɵCompilerImpl implements Compiler {\r\n    private _metadataResolver;\r\n    private _delegate;\r\n    readonly injector: Injector;\r\n    constructor(injector: Injector, _metadataResolver: CompileMetadataResolver, templateParser: TemplateParser, styleCompiler: StyleCompiler, viewCompiler: ViewCompiler, ngModuleCompiler: NgModuleCompiler, summaryResolver: SummaryResolver<Type<any>>, compileReflector: CompileReflector, jitEvaluator: JitEvaluator, compilerConfig: CompilerConfig, console: ɵConsole);\r\n    private getExtraNgModuleProviders;\r\n    compileModuleSync<T>(moduleType: Type<T>): NgModuleFactory<T>;\r\n    compileModuleAsync<T>(moduleType: Type<T>): Promise<NgModuleFactory<T>>;\r\n    compileModuleAndAllComponentsSync<T>(moduleType: Type<T>): ModuleWithComponentFactories<T>;\r\n    compileModuleAndAllComponentsAsync<T>(moduleType: Type<T>): Promise<ModuleWithComponentFactories<T>>;\r\n    loadAotSummaries(summaries: () => any[]): void;\r\n    hasAotSummary(ref: Type<any>): boolean;\r\n    getComponentFactory<T>(component: Type<T>): ComponentFactory<T>;\r\n    clearCache(): void;\r\n    clearCacheFor(type: Type<any>): void;\r\n    getModuleId(moduleType: Type<any>): string | undefined;\r\n}\r\n\r\n/**\r\n * @publicApi\r\n */\r\nexport declare const ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS: StaticProvider[];\r\n\r\n/**\r\n * A platform that included corePlatform and the compiler.\r\n *\r\n * @publicApi\r\n */\r\nexport declare const ɵplatformCoreDynamic: (extraProviders?: StaticProvider[] | undefined) => PlatformRef;\r\n\r\nexport declare class ɵResourceLoaderImpl extends ResourceLoader {\r\n    get(url: string): Promise<string>;\r\n}\r\n\r\nexport { }\r\n"]}