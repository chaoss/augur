(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@angular/compiler-cli/ngcc/src/migrations/migration", ["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlncmF0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tcGlsZXItY2xpL25nY2Mvc3JjL21pZ3JhdGlvbnMvbWlncmF0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cbmltcG9ydCAqIGFzIHRzIGZyb20gJ3R5cGVzY3JpcHQnO1xuXG5pbXBvcnQge01ldGFkYXRhUmVhZGVyfSBmcm9tICcuLi8uLi8uLi9zcmMvbmd0c2MvbWV0YWRhdGEnO1xuaW1wb3J0IHtQYXJ0aWFsRXZhbHVhdG9yfSBmcm9tICcuLi8uLi8uLi9zcmMvbmd0c2MvcGFydGlhbF9ldmFsdWF0b3InO1xuaW1wb3J0IHtDbGFzc0RlY2xhcmF0aW9uLCBEZWNvcmF0b3J9IGZyb20gJy4uLy4uLy4uL3NyYy9uZ3RzYy9yZWZsZWN0aW9uJztcbmltcG9ydCB7SGFuZGxlckZsYWdzfSBmcm9tICcuLi8uLi8uLi9zcmMvbmd0c2MvdHJhbnNmb3JtJztcbmltcG9ydCB7TmdjY1JlZmxlY3Rpb25Ib3N0fSBmcm9tICcuLi9ob3N0L25nY2NfaG9zdCc7XG5cblxuLyoqXG4gKiBJbXBsZW1lbnQgdGhpcyBpbnRlcmZhY2UgYW5kIGFkZCBpdCB0byB0aGUgYERlY29yYXRpb25BbmFseXplci5taWdyYXRpb25zYCBjb2xsZWN0aW9uIHRvIGdldCBuZ2NjXG4gKiB0byBtb2RpZnkgdGhlIGFuYWx5c2lzIG9mIHRoZSBkZWNvcmF0b3JzIGluIHRoZSBwcm9ncmFtIGluIG9yZGVyIHRvIG1pZ3JhdGUgb2xkZXIgY29kZSB0byB3b3JrXG4gKiB3aXRoIEl2eS5cbiAqXG4gKiBgTWlncmF0aW9uLmFwcGx5KClgIGlzIGNhbGxlZCBmb3IgZXZlcnkgY2xhc3MgaW4gdGhlIHByb2dyYW0gYmVpbmcgY29tcGlsZWQgYnkgbmdjYy5cbiAqXG4gKiBOb3RlIHRoYXQgdGhlIHVuZGVybHlpbmcgcHJvZ3JhbSBjb3VsZCBiZSBpbiBhIHZhcmlldHkgb2YgZGlmZmVyZW50IGZvcm1hdHMsIGUuZy4gRVMyMDE1LCBFUzUsXG4gKiBVTUQsIENvbW1vbkpTIGV0Yy4gVGhpcyBtZWFucyB0aGF0IGFuIGF1dGhvciBvZiBhIGBNaWdyYXRpb25gIHNob3VsZCBub3QgYXR0ZW1wdCB0byBuYXZpZ2F0ZSBhbmRcbiAqIG1hbmlwdWxhdGUgdGhlIEFTVCBub2RlcyBkaXJlY3RseS4gSW5zdGVhZCwgdGhlIGBNaWdyYXRpb25Ib3N0YCBpbnRlcmZhY2UsIHBhc3NlZCB0byB0aGVcbiAqIGBNaWdyYXRpb25gLCBwcm92aWRlcyBhY2Nlc3MgdG8gYSBgTWV0YWRhdGFSZWFkZXJgLCBgUmVmbGVjdGlvbkhvc3RgIGFuZCBgUGFydGlhbEV2YWx1YXRvcmBcbiAqIGludGVyZmFjZXMsIHdoaWNoIHNob3VsZCBiZSB1c2VkLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIE1pZ3JhdGlvbiB7XG4gIGFwcGx5KGNsYXp6OiBDbGFzc0RlY2xhcmF0aW9uLCBob3N0OiBNaWdyYXRpb25Ib3N0KTogdHMuRGlhZ25vc3RpY3xudWxsO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIE1pZ3JhdGlvbkhvc3Qge1xuICAvKiogUHJvdmlkZXMgYWNjZXNzIHRvIHRoZSBkZWNvcmF0b3IgaW5mb3JtYXRpb24gYXNzb2NpYXRlZCB3aXRoIGNsYXNzZXMuICovXG4gIHJlYWRvbmx5IG1ldGFkYXRhOiBNZXRhZGF0YVJlYWRlcjtcbiAgLyoqIFByb3ZpZGVzIGFjY2VzcyB0byBuYXZpZ2F0ZSB0aGUgQVNUIGluIGEgZm9ybWF0LWFnbm9zdGljIG1hbm5lci4gKi9cbiAgcmVhZG9ubHkgcmVmbGVjdGlvbkhvc3Q6IE5nY2NSZWZsZWN0aW9uSG9zdDtcbiAgLyoqIEVuYWJsZXMgZXhwcmVzc2lvbnMgdG8gYmUgc3RhdGljYWxseSBldmFsdWF0ZWQgaW4gdGhlIGNvbnRleHQgb2YgdGhlIHByb2dyYW0uICovXG4gIHJlYWRvbmx5IGV2YWx1YXRvcjogUGFydGlhbEV2YWx1YXRvcjtcbiAgLyoqXG4gICAqIEFzc29jaWF0ZSBhIG5ldyBzeW50aGVzaXplZCBkZWNvcmF0b3IsIHdoaWNoIGRpZCBub3QgYXBwZWFyIGluIHRoZSBvcmlnaW5hbCBzb3VyY2UsIHdpdGggYVxuICAgKiBnaXZlbiBjbGFzcy5cbiAgICogQHBhcmFtIGNsYXp6IHRoZSBjbGFzcyB0byByZWNlaXZlIHRoZSBuZXcgZGVjb3JhdG9yLlxuICAgKiBAcGFyYW0gZGVjb3JhdG9yIHRoZSBkZWNvcmF0b3IgdG8gaW5qZWN0LlxuICAgKiBAcGFyYW0gZmxhZ3Mgb3B0aW9uYWwgYml0d2lzZSBmbGFnIHRvIGluZmx1ZW5jZSB0aGUgY29tcGlsYXRpb24gb2YgdGhlIGRlY29yYXRvci5cbiAgICovXG4gIGluamVjdFN5bnRoZXRpY0RlY29yYXRvcihjbGF6ejogQ2xhc3NEZWNsYXJhdGlvbiwgZGVjb3JhdG9yOiBEZWNvcmF0b3IsIGZsYWdzPzogSGFuZGxlckZsYWdzKTpcbiAgICAgIHZvaWQ7XG5cbiAgLyoqXG4gICAqIFJldHJpZXZlcyBhbGwgZGVjb3JhdG9ycyB0aGF0IGFyZSBhc3NvY2lhdGVkIHdpdGggdGhlIGNsYXNzLCBpbmNsdWRpbmcgc3ludGhldGljIGRlY29yYXRvcnNcbiAgICogdGhhdCBoYXZlIGJlZW4gaW5qZWN0ZWQgYmVmb3JlLlxuICAgKiBAcGFyYW0gY2xhenogdGhlIGNsYXNzIGZvciB3aGljaCBhbGwgZGVjb3JhdG9ycyBhcmUgcmV0cmlldmVkLlxuICAgKiBAcmV0dXJucyB0aGUgbGlzdCBvZiB0aGUgZGVjb3JhdG9ycywgb3IgbnVsbCBpZiB0aGUgY2xhc3Mgd2FzIG5vdCBkZWNvcmF0ZWQuXG4gICAqL1xuICBnZXRBbGxEZWNvcmF0b3JzKGNsYXp6OiBDbGFzc0RlY2xhcmF0aW9uKTogRGVjb3JhdG9yW118bnVsbDtcblxuICAvKipcbiAgICogRGV0ZXJtaW5lcyB3aGV0aGVyIHRoZSBwcm92aWRlZCBjbGFzcyBpbiB3aXRoaW4gc2NvcGUgb2YgdGhlIGVudHJ5LXBvaW50IHRoYXQgaXMgY3VycmVudGx5XG4gICAqIGJlaW5nIGNvbXBpbGVkLlxuICAgKiBAcGFyYW0gY2xhenogdGhlIGNsYXNzIGZvciB3aGljaCB0byBkZXRlcm1pbmUgd2hldGhlciBpdCBpcyB3aXRoaW4gdGhlIGN1cnJlbnQgZW50cnktcG9pbnQuXG4gICAqIEByZXR1cm5zIHRydWUgaWYgdGhlIGZpbGUgaXMgcGFydCBvZiB0aGUgY29tcGlsZWQgZW50cnktcG9pbnQsIGZhbHNlIG90aGVyd2lzZS5cbiAgICovXG4gIGlzSW5TY29wZShjbGF6ejogQ2xhc3NEZWNsYXJhdGlvbik6IGJvb2xlYW47XG59XG4iXX0=