name: Build Docker images
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  release:
    types:
      - published
  workflow_dispatch:

permissions: {}

jobs:
  build:
    name: Build image
    permissions:
      contents: read #  to fetch code (actions/checkout)
      packages: write #  to push docker image
    strategy:
      matrix:
        image:
          - backend
          - database
          - rabbitmq
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: setup-buildx

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set container metadata
        uses: docker/metadata-action@v5
        id: meta
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: index,manifest
        with:
          annotations: |
            org.opencontainers.image.title=augur_${{ matrix.image}}
          labels: |
            org.opencontainers.image.title=augur_${{ matrix.image}}
          images: ghcr.io/${{ github.repository_owner }}/augur_${{ matrix.image }}
          # Pushes to the dev branch update the *:devel-latest tag
          # Releases update the *:latest tag and the *:<version> tag
          tags: |
            type=raw,value=devel-latest,enable=${{ (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/dev' }}
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            type=raw,value=${{ github.event.release.tag_name }},enable=${{ github.event_name == 'release' }}

      - name: Build and push
        id: push
        uses: docker/build-push-action@v6
        with:
          annotations: ${{ steps.meta.outputs.annotations }}
          context: .
          file: ./docker/${{ matrix.image }}/Dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          # Only push if we've tagged the image in the metadata step
          push: ${{ github.event_name != 'pull_request' && steps.meta.outputs.tags != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha,scope=container-${{ matrix.image }}
          cache-to: type=gha,scope=container-${{ matrix.image }},mode=max
