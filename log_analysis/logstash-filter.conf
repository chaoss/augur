# input { stdin { } }

input {
  file {
    path => "${ROOT_AUGUR_DIRECTORY}/logs/workers/**/*.*"
    start_position => beginning
    # sincedb_path => "/dev/null"
    # ignore_older => 0
    codec => multiline {
      pattern => "(^ \[INFO\])|(^ \[ERROR\])|(\n\n)|(\n\[)|(\n[0-9]{2,4}-[0-9]{2}-[0-9]{2,4})"
      negate => "true"
      what => "next"
      auto_flush_interval => 1
    }
  }
}

filter {
  grok {
    patterns_dir => ["${ROOT_AUGUR_DIRECTORY}/log_analysis/patterns"]
    match => { "message" => "%{ERROR_MESSAGE:error}" }
  }
  date {
    match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
  }
}

output {
  elasticsearch { hosts => ["localhost:9200"] }
  # stdout { codec => rubydebug }
  # if [error] {
  #   file {
  #     path => "${ROOT_AUGUR_DIRECTORY}/log_analysis/tmp.json"
  #     create_if_deleted => true
  #     write_behavior => append
  #   }
  # }
  if [error] {
    http {
      url => "http://localhost:8003"
      http_method => "post"
    }
  }
}