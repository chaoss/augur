1691707	\N	That was quick.	2019-10-18 18:53:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691708	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-15 23:34:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691709	\N	Congrats on merging your first pull request! üéâ \nWe here at Augur are proud of you and we can't wait see what you'll do next!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-16 15:39:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691710	\N	@gabe-heim : I confirmed that this is an issue on both Chrome and Firefox. 	2019-10-14 14:21:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691711	\N	@Nebrethar : Can you let @gabe-heim and @michaelwoodruffdev know if this is an issue you are aware of, or if there is possibly a need to rerun the risk stuff, `augur-sbom` on this instance because the sbom functionality was developed after we deployed this instance? 	2019-10-14 14:15:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691712	\N	@germonprez I cannot reproduce this issue. This is working for me on chrome and firefox. I think I need more context i.e. browser logs.\r\n\r\nPlease note that when you click the SBOM button, it pushes a download to your browser. There is no middle interaction.	2019-10-18 18:51:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691713	\N	@Nebrethar : This may be a result of the instance being deployed prior to this functionality being developed. Please advise. I do have the latest augur version as of Friday deployed here, but we may need to rerun the risk analysis with `augur-sbom`. 	2019-10-14 14:17:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691714	\N	We discussed on the CHAOSS call today that we may need to change this from TLDR to SPDX. Would it be a problem/confusing if we provided both links, since they have different information available? @Nebrethar @germonprez  	2019-10-15 17:33:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691715	\N	That's a good idea	2019-10-15 17:48:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691716	\N	Sorry for the late reply. I am looking now into how we can migrate this to SPDX links	2019-10-18 18:12:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691717	\N	SPDX provides a "see here" link for every single license.\r\n\r\nI have created a pull request to change to these links.\r\n\r\nPlease note that some nomos tags possess some ambiguity and cannot be linked out.	2019-10-18 18:49:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691718	\N	@gabe-heim : does this fail travis because of the pull request travis issue? @ccarterlandis ? 	2019-10-13 15:02:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691719	\N	We took notes as @andyl @vinodkahuja and @GeorgLink tried to go through the installation. We also recorded the session in the CHAOSS Zoom channel. Maybe @germonprez can share the link.\r\n\r\nI suggest someone from the augur team look through the notes and watch the video to see what roadblocks we faced, what didn't make sense, and from all that to make improvements to the installation instructions.\r\n\r\nHere are the notes we jotted down:\r\n\r\n*   Local Desktop Ubuntu 18.04\r\n*   Postgres installed\r\n*   Python 2 and 3 installed\r\n*   $ git clone https://github.com/chaoss/augur.git\r\n*   $ cd augur\r\n*   $ git checkout osd-2019\r\n*   Check python, pip, and postges version\r\n*   Q? Why install through the osd-2019 branch and not master?\r\n*   $ python3 -m venv ~/.virtualenvs/augur_env\r\n*   $ ls ~/.virtualenvs/augur_env\r\n*   change the python symlink to python3.6 (was python 2.7 before)\r\n    *   cd /usr/bin\r\n    *   sudo ln -s python3 python\r\n*   Q? The make install script asks yes/no questions but requires numbers to be typed.\r\n*   The virtual environment was created, but the install instructions do not say how to switch into it.\r\n*   $ source ~/.virtualenvs/augur_env/bin/activate\r\n*   Q: what is ‚Äúkey‚Äù in the installation of postgres\r\n*   skipped key\r\n*   skipped GitHub API key\r\n*   Q: Link to the Augur schema is not broken -- https://github.com/chaoss/augur/issues/412\r\n*   The ./augur/persistence_schema instructions contain an old file name and do not provide instructions for how to import the files into Postgres\r\n*   Manually created the database\r\n    *   Start psql with "psql -U <youruser>"\r\n    *   "CREATE DATABASE <YOURDB>"\r\n    *   "\\q" to exit\r\n*   $ psql -U postgres testdb < 0-all.sql\r\n*   Q: all links in README for ‚ÄúFrontend‚Äù are broken.\r\n\r\n	2019-10-11 22:30:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691720	\N	I will watch the video ASAP, but in the meantime I hope I can answer some of your questions here. \r\n\r\n\r\n> Q? Why install through the osd-2019 branch and not master?\r\n\r\nThe `master` branch is not exactly ready for widespread use or distribution. We have been in a **very** rapid development mode and are working on a formal stabilization release. The instruction to use the `osd-2019` branch was intended to be used for the Open Source Day at Grace Hopper last week: the fact that had not been changed is a simple oversight. I understand that this probably had adverse affects on the rest of the installation: my apologies for the confusion.\r\n\r\n\r\n> Q? The make install script asks yes/no questions but requires numbers to be typed.\r\n\r\nThis functionality is determined by my use of the `select` statement in `bash`. It automatically handles much of the logic for accepting user input for us in a very clean way, which is why I chose to use it. The prompt for the user's input should read \r\n```\r\nPlease type the number corresponding to your selection and then press the Enter/Return key.\r\nYour choice: \r\n```\r\nI understand you were on the `osd-2019` branch, which might not have this prompt; in that case I understand the confusion. If the prompt is not clear enough I can look into alternative options.\r\n\r\n\r\n> The virtual environment was created, but the install instructions do not say how to switch into it.\r\n\r\nImmediately after the virtual environment, you should see two lines that look like this: \r\n```\r\n*** Your environment was installed to $HOME/.virtualenvs/augur_env/. Please activate and restart the installation using your shell's appropriate command. ***\r\n*** For example, if you're using bash, run 'source $HOME/.virtualenvs/augur_env/bin/activate'. ***\r\n```\r\nThese instructions detail how to activate the virtual environment. Please let me know if you did not see these instructions and I will pay extra attention to the video to see what might have happened.\r\n\r\n\r\n> change the python symlink to python3.6 (was python 2.7 before)\r\n    cd /usr/bin\r\n    sudo ln -s python3 python\r\n\r\nI'm not sure we should include this process in the installation instructions. I don't want to mess with a user's installation of python if we don't have to: so long as they have Python 3.6 or later installed, I think creating a virtual environment (which should automatically link the `python` alias to Python 3.6, given it was created correctly) should suffice in most cases.\r\n\r\n\r\n> Q: what is ‚Äúkey‚Äù in the installation of postgres?\r\n\r\nThis I am not sure about, @gabe-heim might have a better idea: I believe it is needed. We definitely need more documentation explaining what this part is my apologies for the confusion here. I have made a note to address this in our next release.\r\n\r\n\r\n> skipped GitHub API key\r\n\r\nWas this on purpose? This is necessary for Augur to work.\r\n\r\n\r\n> Q: Link to the Augur schema is not broken -- #412\r\n\r\nThis has been on my radar, but I completely forgot about it - thank you for reminding me. I will make sure to fix it in the next release.\r\n\r\n\r\n> The ./augur/persistence_schema instructions contain an old file name and do not provide instructions for how to import the files into Postgres\r\n\r\nI believe those instructions are old; however, the installation script should take care of creating the database in most cases. Regardless, to cover the cases where it does not, I will update those instructions.\r\n\r\n\r\n> Q: all links in README for ‚ÄúFrontend‚Äù are broken.\r\nThank you for bringing this to our attention, as I had no idea this was the case. I will make sure to fix it in the next release.\r\n\r\nThank you for your detailed feedback @GeorgLink @vinodkahuja! I understand it was not a smooth process, but we are in the middle of a major stability update and are in the process of getting a lot of changes deployed that will make the installation experience much better. \r\n\r\nI do wish myself or some other members of the Augur team could have been on the call to assist, as I'm not sure we are really ready for a "formal" installation test given that we are still in the middle of stabilizing the process. Regardless, your feedback is **_very_** helpful as for most of these bugs I had no idea they were happening, so I sincerely appreciate your dedication to documenting the process in order to help us. Your notes and your video will help us make sure the next release is as well-organized as possible.\r\n\r\nI hope you understand our current state of affairs and I hope it does not negatively color your view of Augur. We are working very hard to make it as painless as possible! Thanks again!	2019-10-11 23:46:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691721	\N	> I hope you understand our current state of affairs and I hope it does not negatively color your view of Augur. We are working very hard to make it as painless as possible! Thanks again!\r\n\r\nYes of course. Thank you for all the work you already put into this. Thank you for the quick response.\r\n\r\n\r\n\r\n> > Q? The make install script asks yes/no questions but requires numbers to be typed.\r\n> \r\n> This functionality is determined by my use of the `select` statement in `bash`. It automatically handles much of the logic for accepting user input for us in a very clean way, which is why I chose to use it. The prompt for the user's input should read\r\n> \r\n> ```\r\n> Please type the number corresponding to your selection and then press the Enter/Return key.\r\n> Your choice: \r\n> ```\r\n> \r\n> I understand you were on the `osd-2019` branch, which might not have this prompt; in that case I understand the confusion. If the prompt is not clear enough I can look into alternative options.\r\n\r\nIt did say that.\r\nThe second prompt was very similar to the first and we repeatedly did not think that the script correctly accepted our answer. You'll see when you watch the video that we started the script multiple times.\r\n\r\n\r\n> > The virtual environment was created, but the install instructions do not say how to switch into it.\r\n> \r\n> Immediately after the virtual environment, you should see two lines that look like this:\r\n> \r\n> ```\r\n> *** Your environment was installed to $HOME/.virtualenvs/augur_env/. Please activate and restart the installation using your shell's appropriate command. ***\r\n> *** For example, if you're using bash, run 'source $HOME/.virtualenvs/augur_env/bin/activate'. ***\r\n> ```\r\n> \r\n> These instructions detail how to activate the virtual environment. Please let me know if you did not see these instructions and I will pay extra attention to the video to see what might have happened.\r\n\r\nI'm talking about the instruction in the README. They only say to create the virtual environment. We did. But the README did not say to activate the virtual environment, and so the install script complained.\r\n\r\n\r\n\r\n> > change the python symlink to python3.6 (was python 2.7 before)\r\n> > cd /usr/bin\r\n> > sudo ln -s python3 python\r\n> \r\n> I'm not sure we should include this process in the installation instructions. I don't want to mess with a user's installation of python if we don't have to: so long as they have Python 3.6 or later installed, I think creating a virtual environment (which should automatically link the `python` alias to Python 3.6, given it was created correctly) should suffice in most cases.\r\n\r\nYes, it should not be part of the instructions. We simply documented what we did.\r\n\r\n\r\n\r\n> > skipped GitHub API key\r\n> \r\n> Was this on purpose? This is necessary for Augur to work.\r\n\r\nWe just wanted to get through the installation. We didn't have the API key at hand and were planning to add it later.\r\n\r\n\r\n\r\n> > The ./augur/persistence_schema instructions contain an old file name and do not provide instructions for how to import the files into Postgres\r\n> \r\n> I believe those instructions are old; however, the installation script should take care of creating the database in most cases. Regardless, to cover the cases where it does not, I will update those instructions.\r\n\r\nThe README says that we need to do this as a prerequisite for `make install`. It would be great if the instructions in the README were clarified.\r\n\r\n	2019-10-12 00:06:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691722	\N	@GeorgLink sounds good, it seems a lot of the confusion was the `README` and the installation script being out of sync with each other...I will absolutely make sure they have parity when we release to avoid most of these "conflicting instruction" errors. Truth be told I didn't even think to update the `README` when I was updating the installation script. üòÖ I will definitely watch the video later this weekend!	2019-10-12 00:09:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691741	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-09 09:24:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1692891	\N	Superseded by #8.	2017-10-14 10:27:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1691723	\N	@ccarterlandis thanks for your extensive reply\r\n\r\n> I hope you understand our current state of affairs and I hope it does not negatively color your view of Augur. We are working very hard to make it as painless as possible!\r\n\r\nI'm in this for the long haul & understand how it is working with new software.  I very much like your  energy and dedication.  Here are some general points of feedback...\r\n\r\nSimplify:\r\n- the DB schema is large and hard to grok\r\n- could it be cut way back?  \r\n- could JSON fields be used to handle edge-cases?\r\n- would a reduced scope help to improve quality and reliability?\r\n\r\nDecouple:\r\n- the main components (DbSchema, Workers, Runner, API, UI) are interwoven\r\n- could they be separated into standalone components?\r\n- could the workers or job runner interoperate with Perceval? (mix and match)\r\n\r\nMarket Research:\r\n- who are the target users?\r\n- which metrics are *most* important for the key users?\r\n- focus on narrow set of use cases might be a path to simplification\r\n\r\nPackage:\r\n- could the components be delivered in Docker containers (for end-users)?\r\n- could you reduce the number of host architectures (for developers)?\r\n\r\nAlternate Delivery Models:\r\n- right now the only developer option is local installation\r\n- could you give developers access to read-only database instance? \r\n- eliminate the need for local installation could simplify things a great deal\r\n\r\nInteroperate:\r\n- many Augur functions are duplicate code built for Grimoire\r\n- is there opportunity to share components? (workers, job runners)	2019-10-12 00:42:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277140
1691724	\N	Here is the link: https://youtu.be/eingC53wdvg	2019-10-12 11:24:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691725	\N	Thanks Matt!\n	2019-10-13 13:36:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691726	\N	@andyl A few responses; \r\n```\r\nSimplify:\r\n\r\n    the DB schema is large and hard to grok\r\n    could it be cut way back?\r\n    could JSON fields be used to handle edge-cases?\r\n    would a reduced scope help to improve quality and reliability?\r\n```\r\nThis is not really a question of simplification, but a question of where the work of making sense of the data will take place, and the value placed on cross-platform metric consistency architecturally traded off against speed of collection. \r\n\r\nWhen data is collected but not groked at that time, it has to be groked piece by piece in the implementation of metrics. Under these circumstances if one uses JSON collected "as is" from multiple sources, there cannot be a contract ensuring that a metric from one platform is equivalent to the same metric culled from a different platform. \r\n\r\nIts not a question of whether or not the domain is complex; it is. The question is where do we ask developers to deal with that complexity. \r\n\r\nAugur handles the complexity for you, and provides a contract ensuring consistency across platforms that is not possible with JSON focused collections. \r\n\r\nWhat we CAN do is build out the API endpoints so that the schema has a layer of indirection against it. \r\n\r\n```\r\nDecouple:\r\n\r\n    the main components (DbSchema, Workers, Runner, API, UI) are interwoven\r\n    could they be separated into standalone components?\r\n    could the workers or job runner interoperate with Perceval? (mix and match)\r\n```\r\nThe workers are designed to feed the schema. There is no coupling between the API and the workers. \r\n\r\nInteracting with Perceval is something we welcome a pull request on, but perceval's contract is only to collect data, not to structure it, organize it or ensure cross platform consistency. That work is postponed to the panel construction phase in other parts of Grimoirelab. \r\n\r\n```\r\nMarket Research:\r\n\r\n    who are the target users?\r\n    which metrics are most important for the key users?\r\n    focus on narrow set of use cases might be a path to simplification\r\n```\r\nWe are focused on the community manager, and our advances recently in ease of installation make the kind of useful feedback provided by this session possible. Where we were six weeks ago would not have allowed a session like this to run without Augur developers in the call. \r\n\r\n\r\n```\r\nPackage:\r\n\r\n    could the components be delivered in Docker containers (for end-users)?\r\n    could you reduce the number of host architectures (for developers)?\r\n\r\n````\r\n\r\nYes. That is on our roadmap. \r\n\r\n```\r\nAlternate Delivery Models:\r\n\r\n    right now the only developer option is local installation\r\n    could you give developers access to read-only database instance?\r\n    eliminate the need for local installation could simplify things a great deal\r\n```\r\nwe do this through the API for a number of folks already. \r\n\r\n```\r\nInteroperate:\r\n\r\n    many Augur functions are duplicate code built for Grimoire\r\n    is there opportunity to share components? (workers, job runners)\r\n```\r\n\r\nHere again, I think the difference between grimoire and augur is the architectural choice about when and where to ensure data consistency across platforms. I think the perceived simplicity of a bucket of JSON files dissipates as one goes beyond the first few implementations of metrics based on that bucket of JSON. An API and consistent relational schema is an architectural choice that we made so that the relationship between parts of the world, and decentralized source data for different kinds of data (issues, commits, mailing lists) is reconciled for the developer one time for all sources. Its a question of who does the work: The implementation developer or the platform. Augur takes more responsibility for data organization. \r\n\r\nCould Grimoire build panels off of our API's? I am not sure. My impression is that the panels are tightly coupled with the JSON structure. 	2019-10-13 14:36:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691727	\N	> Here is the link: https://youtu.be/eingC53wdvg\r\n\r\nAt 9:20 in the video Andy states that we are assuming that "python is python3, but for me it is python 2". If the instructions to create a virtual enviornment are followed, and the environment is activated, then this is moot. In a python3 virtualenv, "python" is "python3".  \r\n\r\nThe same instructions apply to grimoirelab as well. It is good python practice to use virtualenv's. to some extent we are 'over documenting' here to enable any newcomer with, or without, familiarity with Python to install augur. 	2019-10-13 14:49:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691728	\N	> Here is the link: https://youtu.be/eingC53wdvg\r\n\r\nAt 14:20 Georg and Andy realize the virtualenv needs to be activated. This is in the instructions after the creation of the virtualenv. This is also a fundamental practice for Python development. We are working to emphasize this process for people who are unfamiliar with working in Python in the setup instructions based on it being missed on this video. 	2019-10-13 14:56:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691729	\N	> Here is the link: https://youtu.be/eingC53wdvg\r\n\r\nThe issues related to `bdist_wheel` at 15:45 are a function of the `wheel` package not being installed. \r\n\r\nThis is a common package, and we are going to change the way we recommend creating virtual enviornments. The `virtualenv` package installs essential python packages by default in new virtual environments, including `wheel`. \r\n\r\n`pip3 install virtualenv` or `pip install virtualenv`\r\n\r\n`virtualenv --python=python3 augur_env` will remove this roadblock for people new to Python. \r\n\r\n```\r\nsean@augurlabs:~$ virtualenv --python=python3 augur-env\r\nAlready using interpreter /usr/bin/python3\r\nUsing base prefix '/usr'\r\nNew python executable in /home/sean/augur-env/bin/python3\r\nAlso creating executable in /home/sean/augur-env/bin/python\r\nInstalling setuptools, pkg_resources, pip, wheel...done.\r\n```	2019-10-13 15:39:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691730	\N	> Here is the link: https://youtu.be/eingC53wdvg\r\n\r\nAt 17:30, @vinodkahuja is referencing Anaconda, which is from a previous version of the README file.  This instruction no longer exists. Augur does not use Anaconda by default anymore (and has not for six months). \r\n\r\n	2019-10-13 15:42:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691731	\N	> Here is the link: https://youtu.be/eingC53wdvg\r\n\r\nThe prompting for a key at 21:00 is a defect in the installer. This is the GitHub API key, and we do prompt you for it again in the next step. We are changing the installer so that this key prompt is clearly labeled "Github API Key", and we only ask you for it once. 	2019-10-13 15:48:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691732	\N	> All the links of front end dependencies are broken.\r\n> Frontend\r\n> Vue.js\r\n> vue-cli\r\n> npm\r\n\r\n@vinodkahuja : can you clarify what you mean. Are you saying that it does not compile the frontend on your computer? What is the OS? Do you have NPM installed? 	2019-10-14 14:36:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691733	\N	@sgoggins on the readme page when I follow the instructions to install front end dependencies, readme page provides me link to those dependencies installation. When I click any of the link I get an error message. That is where I raised this issue that all the provided links are broken.\r\n	2019-10-14 14:47:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277139
1691734	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-11 22:05:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691735	\N	It would be advisable to use a relative path to /augur/persistence_schema folder ... \r\n\r\nIn that folder, it would be great to add information on how to import the SQL files to Postgres	2019-10-11 22:13:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691736	\N	@vinodkahuja : What link are you referrign to? 	2019-10-14 14:01:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691737	\N	![Capture](https://user-images.githubusercontent.com/25468243/66758486-fcaed500-ee63-11e9-8137-b9f5a0f2df34.JPG)\r\n	2019-10-14 14:22:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277139
1691738	\N	Is Issue #406 fixed yet? The issues says the problem is on dev, and looks pretty critical.	2019-10-10 23:53:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691739	\N	This PR now includes the Grace Hopper contributions. 	2019-10-11 13:08:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691740	\N	Production build of the front end no longer has any of these errors, if different behavior occurs on the deployed instances please let me know and reopen @sgoggins 	2019-10-13 21:51:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691742	\N	Congrats on merging your first pull request! üéâ \nWe here at Augur are proud of you and we can't wait see what you'll do next!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-09 18:35:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691810	\N	This branch has a default CII panel now that mentions that there is no CII data available.	2019-09-03 18:36:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691743	\N	@parthsharma2 : Wonder if you can take a look at this; I believe its on the server you have access to where I am finding this error. I will send you some of the log. 	2019-10-07 19:44:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691744	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-03 19:16:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691745	\N	I forgot that I also had to edit the Makefile slightly.  \r\n\r\n[Makefile ,txt](https://github.com/chaoss/augur/files/3687748/Makefile.txt)\r\n\r\n	2019-10-03 19:35:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277141
1691746	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-03 17:30:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691747	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-03 15:29:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691748	\N	There's no expectation that we should be able to compare repo groups, as at that point the information would be so diffused that it would be meaningless. @gabe-heim @michaelwoodruffdev can you take a look into what's causing this?	2019-10-15 18:03:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691749	\N	@sgoggins Just tested this PR and I don't see any errors or issues. Works as expected.	2019-10-02 14:58:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691750	\N	It looks like the repo group [Seniate](http://augur.osshealth.io/group/Senaite/overview) is empty too.	2019-10-01 16:09:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691751	\N	We are okay with this for now, as these are supposed to be empty. We know it's not ideal but we have a long term solution in place to target this.	2019-10-15 18:08:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691752	\N	Closing because this PR is obsolete now	2019-09-30 14:16:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691753	\N	Just tried this on localhost: I'm not sure why but it loads all repo groups and repos when i go to the risk page. \r\nIt also does not look like it is attempting to load risk data at all.	2019-09-24 16:25:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691754	\N	@Nebrethar fixed in 37731cf1cd5af61445064d10c8108c30f5413bf3 . It loads the repo groups and repos occasionally if the page it is on needs a repo id (usually for re-setting the baseRepo in the vuex state, this logic can be found in frontend/src/Augur.ts) and if that data is not already cached. Jsyk the fix for this included changing some of your old implementation by moving some of the risk endpoint calls to inside of the chart files, if anything looks confusing, dont hesitate to reach out!	2019-09-25 04:14:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691755	\N	@Nebrethar I'm unable to recreate this error on the latest version of `dev`. What is the output of `git log -n 1 dev`?	2019-09-23 19:58:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691756	\N	@ccarterlandis \r\n```\r\ncommit b4e9f8303ea2db721c041d1e5c8c74adcba0781c (HEAD -> dev, origin/dev)\r\nAuthor: Carter Landis <ccarterlandis@gmail.com>\r\nDate:   Mon Sep 23 15:42:16 2019 -0500\r\n\r\n    Remove runtime/ from version control\r\n\r\n    Due to another .gitignore change, the runtime/ folder\r\n    was getting checked into version control by accident.\r\n    This commit removes it from version control, and a previous\r\n    change has already removed it from the .gitignore.\r\n\r\n    Signed-off-by: Carter Landis <ccarterlandis@gmail.com>\r\n```	2019-09-23 20:50:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691757	\N	Okay, you're on the right commit, which is good (not that I expected you weren't)! Can you do a `make clean` and then `augur run` again? I have been trying and I'm still unable to recreate the error at this time	2019-09-23 20:52:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691758	\N	I'm thinking it may be an older version of `augur` that's being run somehow, running `make clean` should remove all the built files. You also may have to do `python setup.py install` again, sorry I forgot to mention that 	2019-09-23 20:53:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691759	\N	I fixed it (in the `augur run` directory) with:\r\n```\r\nmake clean; sudo pip3 install -e .; python setup.py install; augur run\r\n```\r\nThis should be documented somewhere, probably in `installing-augur.md`. I will make a PR	2019-09-24 16:04:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691760	\N	Also @ccarterlandis thanks for your help. I was stuck on this one,	2019-09-24 16:21:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691761	\N	usually `make install` takes care of things on the dev branch these days ... 	2019-09-24 16:21:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691762	\N	@sgoggins either way, I've been working on the new architecture since it was instantiated and I never knew how to update after a pull. However it's done, it should be documented and easy to find.	2019-09-24 16:38:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691763	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-09-20 08:17:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691764	\N	@ccarterlandis @ElitaNelson @gabe-heim \r\n\r\nCan you please explain the goal here? I'm not sure how, or if, I can help.	2019-10-01 16:47:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691765	\N	Style changes to this page solved the problems being referred to here (if this isn't the case please reopen)	2019-10-13 21:41:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691766	\N	Closing because I realized this is no longer a necessary development. It looks like this problem has already been taken care of	2019-09-11 16:18:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691767	\N	Fixed in f66077577549e5b386f385a33f3eb9b41fd91f46 and 583d786934b43219410a0aa6d1933aa3cada2263 . It should be noted that if you have a housekeeper task for the github worker in your augur.config.json, then you will need to update the `given` to be `github_url`. Example:\r\n```\r\n{\r\n                "delay": 1000000,\r\n                "given": ["github_url"],\r\n                "model": "issues",\r\n                "repo_id": 21000,\r\n                "all_focused": 1\r\n            }, ```	2019-09-30 20:42:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691768	\N	I will work on it.	2019-09-05 15:27:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1691769	\N	Definitely I will work on this.	2019-09-06 08:34:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277145
1691770	\N	https://github.com/chaoss/augur/blob/94bdf850b07ef06074a54007b0dfb835ed87cf9e/frontend/src/store/modules/common/actions.ts#L191-L207\r\n\r\n@sgoggins : The reason  Comparison broke is @gabe-heim comment out this code, so that we cannot commit repo_group data to cache.  Uncomment it  can fix the bug. Do you want me to fix it now because I didn't know why gabe comment out it? 	2019-09-08 03:47:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1691771	\N	@sgoggins: @gabe-heim has fixed it. 	2019-09-09 18:53:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1691772	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-09-04 23:08:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691773	\N	Hi @andyl : We are really focused on making the new developer experience accessible to everyone. Virtualbox has proven kind of unstable with Augur. I think the Docker container could possibly work for some, but we are not sure about abandoning instructions for Fedora and Mac.  Windows is super hard. It is so completely different in every way. Even their Ubuntu distro/VM/Shell systems do things differently and do not support ordinary commands we rely on ... If you have ideas for windows that would help. They are the one community that has proven too expensive in terms of time to actively support. 	2019-09-06 19:19:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691774	\N	@sgoggins: fair enough and thanks for the clarification.  That being the case: would you be open to segregating the install instructions into separate platform-specific sections?  In this way a potential author (like me) could focus on a specific platform.  In this case, I'm thinking that a 'platform' is a combination of hostOS plus a virtualization layer.  It's an interesting organization challenge because there are many possible combinations of host OS and virtualization.\r\n\r\nThere could be a high-level README showing which platforms are supported:\r\n\r\n| Platform Name | Target Use | HostOS | Virtualization Platform | Lead |\r\n| --- | --- | --- | --- | --- |\r\n| UbuntuCore | Development | Ubuntu18.04 | NA | andyl |\r\n| UbuntuDocker | Production | Ubuntu18.04 | Docker | sgoggins |\r\n| UbuntuVbox | Production |  Ubuntu18.04 | VirtualBox | ccarterlandis |\r\n| MacDev | Development | MacOS 10 | NA | gabe-heim |\r\n\r\nAnd the docco with support files could be organized under separate directories:\r\n\r\n```\r\ninstall-docs\\\r\n|- README.md\r\n|- MacDev\\\r\n    |- Install_Mac_Dev.md\r\n    |- mac_sample_config_file.ini\r\n|- UbuntuCore\\\r\n    |- Install_Ubuntu_Core.md\r\n    |- bin\\\r\n        |- install_database.sh\r\n        |- setup_python.sh\r\n```\r\n\r\nLet me know if you find this appealing or not.	2019-09-06 20:09:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277140
1691775	\N	Closing.	2019-09-11 19:00:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277140
1691776	\N	@parthsharma2 and @gabe-heim : The issue does not insert "bad data", but there is a potential that we will miss data collection windows. I think the logic around waiting that's in the git_hub_worker for issues appears sound. If @parthsharma2 is able to look at that and refactor the repo_info_worker it could be beneficial.	2019-09-04 07:50:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691777	\N	I'm also noting the the repo_info_worker is hitting the graphql (API v4) endpoints. It *may* be the case that the data types returned are not the same for the v3 and v4 GitHub API implementations of date or timestamp, as that's the error being specifically thrown. 	2019-09-04 07:51:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691778	\N	@parthsharma2 : Update: While bad data is not inserted, the way the current endpoint is constructed for summaries by repo_group, by collecting only on a subset of repositories, the repo_group summary for the most recent collection is thrown off. @gabe-heim : That's the root cause.  I deleted the 42 records of 112 gathered in one instance most recently before we hit the rate limit and this fixed the issue. Temporarily.  Its still important that we get the worker logic sorted out. 	2019-09-04 09:19:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691779	\N	@sgoggins I think this is most probably happening because the v3 & v4 GitHub API have different rate limits.\r\n\r\nRefer: https://developer.github.com/v3/rate_limit/\r\n\r\nI think one solution is to only use the v4 API for gathering all data. The worker uses the v3 API for getting the `commit_count` and `commiters_count`. We could probably get `commit_count` from the v4 API but as far as I know, getting `commiters_count` from the v4 API is not possible yet.\r\n\r\nAnother solution could be to have the worker identify & maintain the rate limits of both the v3 & v4 APIs and go to sleep whenever any of the rate limits dips below 1.	2019-09-05 07:32:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1691780	\N	IMO we should maintain both rate limits, otherwise the worker will skip past the v4 data we need while still thinking it completed the task	2019-09-05 13:13:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691781	\N	It works!	2019-09-10 16:08:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691782	\N	I think @gabe-heim fixed this.  Can you confirm @Nebrethar ? 	2019-09-04 14:01:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691783	\N	It is not fixed on my computer with a clean install, but It seems to be fixed elsewhere. I will close this now.	2019-09-04 14:33:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691784	\N	LGTM! Thanks again Parth!	2019-09-03 18:15:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691785	\N	Super helpful for the NDE, thanks Parth!	2019-09-03 17:44:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691786	\N	Confirmed on a fresh checkout of dev	2019-09-03 15:43:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691853	\N	My only reservations on Go is its current use. I know it's on the upswing for internet programming but so was Ruby a while back. That said, I don't think that is enough to argue against a switch. \r\n\r\n@howderek, what would the Python library look like? What's in it? 	2017-03-11 12:32:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691787	\N	@gabe-heim : This is related it appears to our removal of the `cms_id` column as you were doing insights work? Can we fix the API quick? \r\n\r\n```sql\r\nLINE 3:                 ri_date AS date, cms_id AS rating, ri_fresh ...\r\n```\r\n\r\n```sql\r\n[SQL:\r\n            SELECT rg_name, repo.repo_group_id, repo_insights.repo_id, repo_git, ri_metric, ri_value AS value,\r\n                ri_date AS date, cms_id AS rating, ri_fresh AS discovered\r\n            FROM repo_insights JOIN repo ON repo.repo_id = repo_insights.repo_id JOIN repo_groups ON repo.repo_group_id = repo_groups.repo_group_id\r\n            WHERE repo_insights.repo_id IN (\r\n                SELECT repo_id\r\n                FROM repo\r\n                WHERE repo_group_id = %(repo_group_id)s\r\n                AND repo_id IN (SELECT repo_id FROM repo_insights WHERE data_collection_date > CURRENT_DATE - INTERVAL '10' DAY GROUP BY repo_id, ri_id HAVING 304 > count(repo_insights.repo_id) ORDER BY ri_id desc)\r\n                LIMIT %(num_repos)s\r\n            )\r\n        ]\r\n\r\n```	2019-09-03 16:07:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691788	\N	@sgoggins there is an api change that is needed as well as some frontend logic that references that column, I am fixing it now	2019-09-03 17:50:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691789	\N	Fixed in 2e8e05f. 	2019-09-03 18:06:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691790	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-09-02 06:41:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691791	\N	I think you would need to define "privatization" a little more, but if you have credentials to clone a .git repository from .gitlab, which you can configure within the shell that you run our commit collection 'facade_worker' on, then you can get commits. Do you also have issues and the GitLab equivalent of Pull Requests that you want to track? 	2019-09-04 14:03:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691792	\N	It is happening to my dashboard for more than just zephyr. Confirmed on a clean pull of dev.\r\n**Dashboard:**\r\nhttps://imgur.com/a/hm2YHB2\r\n\r\n**Terminals (No signs of issues):**\r\nhttps://imgur.com/a/W8E1Gls\r\n\r\n	2019-09-03 15:48:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691793	\N	I can't find any changes related to the issue itself, but it seems to be that some vue files (such as tickchart and horizontalbarchart) can't find window.vegaEmbed\r\n\r\n@gabe-heim inviting you to this one because it seems that you've worked the most on these files.\r\n\r\n@sgoggins I can't move forward until we get **this** and **pr #365** taken care of.	2019-09-03 16:29:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691794	\N	This should be fixed in 1719c45, let me know if you are still having issues @Nebrethar \r\n	2019-09-03 20:03:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691795	\N	The metrics page still looks like this:\r\nhttps://i.imgur.com/CGdTMcN.png\r\n\r\nText for "lines of code" is very small and the visualization for it does not load.\r\n\r\nHere is a copy of my console from the page. It looks like it is rejecting something in "lines of code" with the yellow text.\r\n![image](https://user-images.githubusercontent.com/34951354/64212366-bc286880-ce6e-11e9-9ea7-089648714e9a.png)	2019-09-03 22:17:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691796	\N	I am checking with @gabe-heim about where we have the fix deployed. Primarily to make sure I do useful things. :) 	2019-09-03 23:30:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691797	\N	Second discussion moved to #376	2019-09-03 23:54:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691798	\N	This issue was solved by configuration changes in the Housekeeper in commit : https://github.com/chaoss/augur/commit/435de1e9c77e161a5b699f863910cf1edeb3a0ea . 	2019-09-10 16:11:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691799	\N	@ElitaNelson @ortonpaul Hey guys this may be a good thing for one or both of you to work on that helps give you a sense of how the endpoints and data handling works on the frontend. Looking at `Repos.vue` would be a great reference for how to do this, as that component essentially does the same thing but for repos, I'm always available on slack if you have questions	2019-08-31 16:59:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691800	\N	I'll work on this	2019-09-01 05:59:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1691801	\N	Defaults added in #373 	2019-09-03 17:45:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691802	\N	@ccarterlandis : Can you look into why the Travis-CI build is failing on this. @Nebrethar : Probably helpful if you look at the build log as well. I think this might be an issue where PR's always fail but I am not sure. 	2019-08-31 02:10:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691803	\N	@ccarterlandis : Its the API tests that are failing .. I remember you mentioning an issue there earlier this week. I want @gabe-heim  to look at this, but its important for the Risk group so if there's stuff we need to ask @Nebrethar to change I would like to get that info to him ASAP. 	2019-08-31 02:13:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691804	\N	Closing this because it needs to include more augur repositories to prevent stalling issues.	2019-08-31 15:01:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691805	\N	Will reopen at a more mature stage of development	2019-08-31 15:02:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691806	\N	@Nebrethar What do you mean "needs to include more augur repositories"? What does? Regardless of that, the current changes proposed in this PR are beneficial and I'd be happy to merge if you are wanting to reopen, but if not just reopen when you are happy with the changes	2019-08-31 16:35:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691807	\N	My apologies, I was going to add context here but I forgot.\r\n\r\n@gabe-heim I am currently working on some fixes to bugs this update would introduce. The one I haven't fixed yet is that CII metrics present on the page will prevent the page from loading if there is no CII data returned. I didn't want to put that on dev until it's fixed..	2019-09-01 03:03:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691808	\N	I reopened this because the loading issues have been fixed. The page will not fail to load; Instead, it will load everything but the CII panel.\r\n\r\nI can also make it so that the CII panel loads, but states that it has no data. Let me know if you have a preference.\r\n\r\nA great repo to try CII badging out on is `zephyrproject-rtos/zephyr`	2019-09-02 15:05:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691809	\N	@Nebrethar Stating that the CII panel did not not return any data for this repo is a preferable solution rather than just not rendering the panel at all. I will work on #370 if you want to update this in the meantime, if you are having trouble figuring out how to do that let me know.	2019-09-03 18:11:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691811	\N	Below are my fixes in [this](https://github.com/chaoss/augur/commit/1df2b605f6f663d6c972c33019614b63303df8f2) commit for the above issues:\r\n1. Deleted the prompt for the `name` parameter from the script\r\n2. Defaulted the `schema` parameter to `augur_data`\r\n3. For now I've deleted the prompt for the `key` parameter from the script; I think we did use this for something in the past however, so I'm not sure if this was the right call - @gabe-heim can you confirm?\r\n4. I agree that the GUI installation is the easiest use case for newcomers. I think we should harden this installation process as much as possible first, make sure it's well documented and tested, and then build the GUI part on top of it so that we don't have to worry about the instability of the underlying script.	2019-08-29 18:13:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691812	\N	Note: Using the link verbatim (http://nekocase.augurlabs.io/augur.psql.bak.gz) also ends in a 404	2019-08-29 13:27:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691813	\N	Thanks for opening your first issue here! üõ†\nWe always appreciate attentive users and developers such as yourself.\n\nPlease be sure to follow the issue template, as the info it provides will help us help you!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-08-28 17:22:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691814	\N	Hi @SanchitVerma ! Thanks for opening this issue, we are actually in the process of redesigning a new frontend that will solve issues like these, have a whole lot more visualizations to explore, and have a brand new design that has a much cleaner look. We are currently getting it stable enough to push up to all of these instances. You can see a beta version of this frontend at http://augur.osshealth.io , as soon as we get the Twitter version up and running I will be sure to update you on this thread!	2019-08-30 00:49:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691815	\N	A first draft is in `augurinstall.sh` in the root directory. \r\n@parthsharma2 's  program to generate an `augur.config.json` needs to have the worker ports added as defaults. For the new user running locally, we do not need to prompt for these. `augur_localstart.sh` and `augurkill.sh` in the root directory are also in progress.  Getting the database configured and started with repositories is the biggest "next thing" ... this is kind of started in a very "hacky" way in `docs/setup/augur-get-data.py`, which will iteratively gather repos from a github organization. Refactoring this will provide a nice feature .. @ccarterlandis has worked on this before. 	2019-08-25 13:43:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691816	\N	@sgoggins I'm slightly confused about the wording of this section:\r\n\r\n> 1. Do you have access to a Postgres 10 or 11 installation, with administrative privileges where you want to install the Augur database?\r\n> 2. If "no", Do you have access to a Postgres 10 or 11 database where you have administrative privileges where you want to install the Augur database?\r\n\r\nI'm confused about the difference between an 'installation' and 'database' in this context, can you clarify? \r\n	2019-08-26 03:46:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691817	\N	Additionally, I feel like this section from Path B\r\n>  (b) Attach Augur to an existing database you or somebody else populated?\r\n\r\nmore aptly belongs under the Path A with the configuration of the database. If they have a database already populated, we can skip Path B entirely. Thoughts? @sgoggins 	2019-08-26 04:00:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691818	\N	@ccarterlandis : In one case, they could install postgres locally and create the augur database themselves.  In the second scenario, they may not have the rights to create a database, but a DBA may have given them full admin rights on a database created for them.  Make sense? \r\n	2019-08-26 15:26:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691819	\N	Okay, I think I understand. So essentially, their choices are:\r\n\r\n1. Install Postgres and our schema themselves, either locally or on a server they have access to\r\n2. On a Postgres server that they have access to that's already been set up, install only our schema\r\n3. Connect to a database with our schema already installed\r\n\r\nAm I following?\r\n	2019-08-26 15:32:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691820	\N	I've attempted to write a preliminary version of this script [here](https://github.com/chaoss/augur/commit/e5dc8418687ddb3a3164fac37efc9161b84b7a4c).	2019-08-28 00:23:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691821	\N	@sgoggins added tests	2019-08-22 13:27:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1691822	\N	Thank you Parth! Looks great. We will eventually want to add a 'day' group by option for the issue_comments_mean metric, but we can worry about that later.	2019-08-25 21:14:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1691823	\N	So it took me entirely too long to remember this, but it's failing because we've configured the Travis build to remove our encrypted environment variables from **any** build that doesn't come from within the main augur repository, as we don't want untrusted builds to have access to our credentials. That's not to say we don't trust you @parthsharma2 - in fact, we very much trust you! It's just a matter of precaution. @sgoggins You also might recall that [we ran into this issue](https://github.com/chaoss/augur/pull/222) back in January for the same reason...my vote is we just adopt the same solution we did last time üòÑ 	2019-08-17 18:41:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1691824	\N	Looks like extend is up-to-date now, so this is no longer needed.	2019-08-16 14:30:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277125
1691825	\N	A newer version of tar exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.	2019-09-09 17:40:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277125
1691826	\N	OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.	2019-10-13 15:08:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277125
1691827	\N	Looks like jquery is up-to-date now, so this is no longer needed.	2019-08-16 14:30:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277125
1691828	\N	Looks like fstream is no longer a dependency, so this is no longer needed.	2019-08-16 14:30:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277125
1691852	\N	@germonprez Entirely switching to Go is certainly a possibility and probably a good idea. We could then write a Python library that knows how to talk to our Go server and not lose any functionality, and only increases in speed.\r\n\r\n@abuhman It's mainly about go-git's capability to do everything in memory, it will be much faster and it removes a lot of the hurdles we'd face with GitPython	2017-03-10 21:03:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691829	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-08-16 14:08:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1691830	\N	Superseded by #355.	2019-08-16 14:31:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277125
1691831	\N	@ccarterlandis @gabe-heim ; I have resolved all the merge conflicts on my computer at home .... I need a review to push the changes. 	2019-08-16 10:54:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691832	\N	@germonprez @klumb @ccarterlandis @gabe-heim : I need an approval so I can push the merge conflicts I resolved locally. Which seems like a bass-ackwards process ... but that's what we have setup. 	2019-08-16 12:43:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691833	\N	@sgoggins does this need a DCO from you? 	2019-08-16 14:13:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691834	\N	@germonprez : Hmmm ... I DCO's it earlier ... but now its DCO'd either "again" or "actually, because ma brain broke!"	2019-08-16 14:16:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691835	\N	conflicts now. can't merge	2019-08-16 14:18:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691836	\N	> YOu need to remove the dist directory and package-lock.json\r\n\r\n@sgoggins \r\nRemoving these created conflicts when staging for merge. Is there a certain way I should do this?	2019-08-16 18:18:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691837	\N	@bing0n3 Thank you for pointing those out. I followed the guidance of augur's runtime linter for these changes. None of the changes affected functionality on my runtime.	2019-08-16 18:20:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1691838	\N	@bing0n3 / @ccarterlandis  / @gabe-heim : I am not sure what to do here. 	2019-08-19 00:57:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691839	\N	Merging my own PR so that Dev does not get out of sync during development. 	2019-08-03 17:41:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691840	\N	Thanks!	2017-03-13 20:50:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691841	\N	I'm not very familiar with Go (although I do have the Go Gopher in my\noffice).\n\nSpeed=awesome. I think you hit on my question right there at the end. With\na switch and refactoring, are the gains in performance offset by losses in\nfunction? I know that we don't know the suite of metrics yet, but some of\nthe trends seem to indicate a need for external data and the ability to\ncontainerize metrics.\n\nOn Thu, Mar 9, 2017 at 2:06 PM, Derek Howard <notifications@github.com>\nwrote:\n\n> Python is fantastic for what we've been doing so far, which consists of\n> making queries to our GHTorrent database and a Flask API to those queries.\n>\n> Now that we are going to begin working on metrics that require analyzing\n> repos, I'm not sure Python+GitPython will meet our needs well. GitPython\n> <https://github.com/gitpython-developers/GitPython> has a beautiful API\n> but it is probably too slow to make a usable web app that is able to\n> deliver the more complicated metrics without some serious caching.\n>\n> PyGit2 <http://www.pygit2.org/> would probably be fast enough for our\n> needs, but then the installation requirements for Windows users would be\n> more involved. We could containerize it, but then we lose the benefits of\n> having a Python library. Also it's GPL, and a modified GPL at that, so I'm\n> not even sure we can use it.\n>\n> One solution is to store every repo we analyze and keep them up to sync,\n> analyzing them when they change and storing the results. Essentially we'd\n> be keeping a database up to date with our metrics. That would allow for\n> practically instant response when users look for a repo, but limit the\n> scope of which repos they can look at, much like http://gittrends.io/\n>\n> I think a better solution would be switching to Go.\n>\n> I was looking for solutions when I stumbled upon go-git\n> <https://github.com/src-d/go-git> which is written in Go, and would let\n> us download and manipulate git repos entirely in memory. It is created by a\n> company that is doing some ML stuff on the code from every GitHub repo out\n> there, so it was made to tackle a problem similar to ours. We would still\n> cache, and we'd likely want to still download large/popular repos to avoid\n> re-downloading them over and over, but for smaller, more obscure repos our\n> Go package could download them and analyze them in seconds. The entire\n> GitHub ecosystem would be open to our users, while still being practical\n> for us and fast for them.\n>\n> We would also get the other benefits of Go, including easy cross-platform\n> binaries with no dependencies, and much better general performance vs\n> Python. This would make it trivial for our users to host their own ghdata\n> or use it behind firewalls.\n>\n> The disadvantage is that go-git doesn't have close to the same breadth as\n> GitPython, so we'd have to reimplement a lot of GoPython's functionality.\n> One important example is its lack git blame\n>\n> What do you all think?\n>\n> If Go is not an option, any thoughts on the best way to deal with the\n> slowness of GitPython?\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/28>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUPE-LLvmbI5n8CB_JVbeHFtRzO00ks5rkFu6gaJpZM4MYkMU>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-03-09 21:30:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691842	\N	I believe go-git has all the functionality we need. On a second pass, I realized go-git does support `git blame`. Many of our metrics will involve actually parsing source files (LICENSE, CONTRIBUTING, package files, etc.) for which go-git/go in general will be way faster	2017-03-09 21:37:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691843	\N	@abuhman what are your thoughts on Go? I'm guessing you haven't worked with it before (but C?). \r\n	2017-03-10 14:29:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691844	\N	I'm not familiar with Go or the speed differences.  Right now I'm using GitPython, and the biggest slowdown has come from GHTorrent SQL queries to get the organizations for the user (which I was able to greatly speed up by temporarily storing the results in a variable).  If there are delays in GitPython, I haven't noticed in comparison to the SQL.  However, so far I only have it looking at a the blame history of a single file.  I don't have blame history an entire repository working yet.\r\n\r\nShould I also be working on getting the blame history using go-git?\r\n\r\nBy C do you mean the programming language?  I only ask because I don't see it mentioned earlier.  I have some previous experience with C (actually probably more than with Python) and I've been reviewing concepts this semester.  Are we using C for something?	2017-03-10 20:44:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691845	\N	I just mentioned C because I think that Go has similarities.\n\nOn Fri, Mar 10, 2017 at 2:44 PM, abuhman <notifications@github.com> wrote:\n\n> I'm not familiar with Go or the speed differences. Right now I'm using\n> GitPython, and the biggest slowdown has come from GHTorrent SQL queries to\n> get the organizations for the user (which I was able to greatly speed up by\n> temporarily storing the results in a variable). If there are delays in\n> GitPython, I haven't noticed in comparison to the SQL. However, so far I\n> only have it looking at a the blame history of a single file. I don't have\n> blame history an entire repository working yet.\n>\n> Should I also be working on getting the blame history using go-git?\n>\n> By C do you mean the programming language? I only ask because I don't see\n> it mentioned earlier. I have some previous experience with C (actually\n> probably more than with Python) and I've been reviewing concepts this\n> semester. Are we using C for something?\n>\n> ‚Äî\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/28#issuecomment-285779599>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUJR9G5-Euci5G_qJf3QbaasvGKe8ks5rkbYjgaJpZM4MYkMU>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-03-10 20:45:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691846	\N	okay	2017-03-10 20:45:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691847	\N	Are we talking about switching to Go just for this metric?  If it's in Go, would we have this metric be separate from ghdata or would we try to integrate it once it was written?	2017-03-10 20:53:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691848	\N	@abuhman I'm suggesting switching to Go for everything that needs to look at the actual repos	2017-03-10 20:57:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691849	\N	@howderek can chime in on this but I think that the conversation was about refactoring everything on ghdata to use Go, not just the git 	2017-03-10 20:58:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691850	\N	ok, gotcha	2017-03-10 20:58:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691851	\N	So it's mainly about download speed for obtaining the repos locally?  	2017-03-10 20:59:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691854	\N	It looks like this lab also made http://gittrends.io/ which looks really great. I'll definitely check out their approach	2017-03-03 15:17:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691855	\N	[Here is the paper related to their approach](http://homepages.dcc.ufmg.br/~mtov/pub/2016-icpc.pdf)	2017-03-03 15:25:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691856	\N	After reading the paper, I found a couple of issues and a couple of good insights!\r\n\r\nIssues:\r\n\r\n- This approach doesn't take time into account, so core developers who have already left are still counted in the bus factor\r\n- This approach requires manual review of the repositories to filter out files that should not be looked at when measuring how much a developer contributed \r\n\r\nInsights:\r\n\r\n- They mentioned the difficulty in measuring the bus factor of projects like Linux and Homebrew, who have massive numbers of developers but not as many core developers because they are extensible projects\r\n- Libraries added to a project should not be considered contributions (I maybe disagree, I think that large changes such as that are indicative of being a core developer)\r\n- Their survey suggested that documentation and tests should influence the bus factor	2017-03-03 15:50:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691857	\N	Those are great insights.\n\nOn Mar 3, 2017 09:50, "Derek Howard" <notifications@github.com> wrote:\n\n> After reading the paper, I found a couple of issues and a couple of good\n> insights!\n>\n> Issues:\n>\n>    - This approach doesn't take time into account, so core developers who\n>    have already left are still counted in the bus factor\n>    - This approach requires manual review of the repositories to filter\n>    out files that should not\n>\n> Insights:\n>\n>    - They mentioned the difficulty in measuring the bus factor of\n>    projects like Linux and Homebrew, who have massive numbers of developers\n>    but not as many core developers because they are extensible projects\n>    - Libraries added to a project should not be considered contributions\n>    (I maybe disagree, I think that large changes such as that are indicative\n>    of being a core developer)\n>    - Their survey suggested that documentation and tests should influence\n>    the bus factor\n>\n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/27#issuecomment-283989918>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5RdLEivDG3m7t9rNx83r7mk0KS_KWks5riDbRgaJpZM4MSXS6>\n> .\n>\n	2017-03-03 16:44:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691858	\N	I had requested gittrends.io analysis of the HealthIndicators rep: http://gittrends.io/#/repos/OSSHealth/HealthIndicators	2017-03-09 17:35:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691859	\N	@sgoggins @howderek and I discussed truck factor and we determined that we would use the total lines of code as part of the calculation. We originally were going to get this value from the GitHub API, however, we cannot get lines of code from the API, but I can get number of additions and deletions in each file by each user. Would that still be useful for this metric?	2017-03-28 00:32:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691860	\N	We are downloading the repository for other metrics. Can that be combined\nby calculating lines of code when we look at the repository and have that\nmetric ready for the truck factor?\n\nLines of code, while not a health or sustainability metric, might be\ninteresting as it changes over time.\n	2017-03-28 01:27:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691861	\N	Leveraging some of my prior work and what we know about truck factor, we imagined the following inputs having some logic for reasonable inclusion in a comprehensive metric; or category of metrics. \r\n\r\nI think additions and deletions can be helpful, as can total lines of code.  They can also be somewhat misleading when repositories are refactored. \r\n\r\nOur notes from the discussion are below. \r\n\r\n![img_8874](https://cloud.githubusercontent.com/assets/379847/24411847/6fe4785e-139c-11e7-9436-4023c9c7abde.jpg)	2017-03-28 14:55:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691862	\N	I have added a folder with files for example of getting number of lines in a repo and percentage of a repo written by each user using git blame.	2017-04-03 21:15:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691863	\N	Thanks!\n\nOn Mon, Apr 3, 2017 at 4:15 PM, abuhman <notifications@github.com> wrote:\n\n> I have added a folder with files for example of getting number of lines in\n> a repo and percentage of a repo written by each user using git blame.\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/27#issuecomment-291276351>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUJU8BmE62av2_M8KcbBd75fpEf4sks5rsWGFgaJpZM4MSXS6>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-04-03 23:03:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691864	\N	we have a "bus factor" calculation that can be incorporated into the end of  year release, along with documentation. 	2017-10-06 15:17:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691865	\N	> we have a "bus factor" calculation that can be incorporated into the end of year release, along with documentation.\r\n\r\nGreat! I look forward to it.	2017-10-06 21:08:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691866	\N	We are pushing this because we're prioritizing new visualization types to finish the cold fusion release. 	2018-02-27 00:53:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691867	\N	Hi @srobins259 and VRRobbie,\r\n\r\nWelcome to OSSHealth/ghdata!\r\n\r\n@abuhman and @howderek can help you find your way around the code base.\r\n\r\nAlso, take a look at the list of health indicators and their descriptions in [OSSHealth/HealthIndicators](https://github.com/OSSHealth/HealthIndicators/blob/master/CCCIndicators.md). Feel free to open issues there if you have questions about a health indicator that you plan to visualize in the front-end.	2017-02-20 23:06:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691868	\N	Hello @srobins259 and @VRRobbie!\r\n\r\nFirst, you'll need to install a server that can serve static files and MySQL.\r\n\r\nSecond, you'll need to load the [msr14 dataset](http://ghtorrent.org/msr14.html) into a new database.\r\n\r\nThird, you'll need to get GHData configured. `pip install --upgrade https://github.com/OSSHealth/ghdata/archive/dev.zip` then run `ghdata`\r\n\r\nA configuration file should be created. Edit that file with your database settings, and set the developer key to 1 to enable the debugging tools.\r\n\r\nFourth, configure your webserver to serve the files in frontend. I like to use Apache virtual hosts and my /etc/hosts file so that gh.dev gets routed to frontend.\r\n\r\nLastly, run `ghdata` to start the server, and go to your localhost/?owner=cakephp&repo=cakephp\r\n\r\nTwo graphs should appear. Let me know if you run into any trouble!\r\n\r\nThe biggest way you could contribute is by developing more visualizations with D3.js, let me know if you need dummy data.\r\n\r\nWelcome, and thanks so much!\r\n	2017-02-20 23:08:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691968	\N	@germonprez What is wrong with the pip install from github? Also, would you like me to move the install script in the separate repo to this repo?	2017-01-23 20:06:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691869	\N	We have ghdata up and running as a server, but we are still having trouble with the front-end part. Could you explain in a little bit greater detail about the Apache virtual host step?\r\n\r\nThanks,\r\nsrobins259	2017-02-27 21:39:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277149
1691870	\N	@srobins259 It's not required to use Apache VirtualHosts, that's just how I do it. There's a pretty minimal example of how to use development domain names here: https://blogs.fsfe.org/samtuke/?p=359\r\n\r\nThe most important part is running it on a server locally and not just opening the index.html file directly.\r\n\r\nThe easiest way to get started is navigating to the frontend directory and running `python -m SimpleHTTPServer` in a terminal	2017-02-27 23:21:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691871	\N	Ok, I have it working now, so we should be able to get started! We will probably start with a basic form entry to input the project owner and repository.\r\n\r\nThanks for the help!\r\nsrobins259 and VRRobbie	2017-02-28 16:26:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277149
1691872	\N	For sure! I look forward to seeing it!	2017-02-28 16:27:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691873	\N	Yes, it essentially strips away FOSSology to simply get at Nomos, the scanner\r\n\r\nRegarding the download, yea, it would really have to come from the repository. I wouldn't expect to store the package locally but you are right -- downloading and scanning is a time-consuming process. Yet, this is pretty important information and we could leave it to a user to decide if they want to pay that overhead for that information. 	2017-02-20 18:57:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691874	\N	It seems like the GitHub API already aggregates license information https://developer.github.com/v3/licenses/	2017-02-20 19:03:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691875	\N	It may but not to level of identifiability of something like Nomos, or LiD (Qualcomm's new scanner). I believe that in the case of GH, the license would have to be declared by the repo owner. In the case of the scanners, they can look for identifiable text that the repo owners may not have declared. 	2017-02-20 19:06:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691876	\N	https://help.github.com/articles/licensing-a-repository/\r\n\r\nI think the API is getting it from the files LICENSE.txt, LICENSE, or LICENSE.md.\r\n\r\n"The open source Ruby gem Licensee compares the repository's LICENSE file to a short list of known licenses. Licensee also provides the Licenses API and gives us insight into how repositories on GitHub are licensed. If your repository is using a license that isn't listed on the Choose a License website, you can request including the license.\r\n\r\nIf your repository is using a license that is listed on the Choose a License website and it's not displaying clearly at the top of the repository page, it may contain multiple licenses or other complexity. To have your license detected, simplify your LICENSE file and note the complexity somewhere else, such as your repository's README file."	2017-02-20 19:08:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691877	\N	Since using the API is trivial compared to using third party software, I suggest we start by using the API and if we find it doesn't meet our needs we can put more effort into getting better license data further down the line.\r\n\r\nThe challenge with many more robust license scanners is that they require downloading the project. Unless we drastically limit our search space, we don't have the storage nor compute resources to provide that kind of data. Even if we did have those resources, how long could we sustain that for?\r\n\r\nThe advantage of using the API is we can trust that it will be around as long as GitHub is. The link that @abuhman posted referred to the [Licensee](https://github.com/benbalter/licensee) project, which detects all of the licenses on https://choosealicense.com/\r\n\r\nThe License API is more sustainable than these other projects :)	2017-02-20 21:16:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691878	\N	The License information is part of the [Risk Health](https://github.com/OSSHealth/HealthIndicators/blob/master/CCCIndicators.md#compliance-risk-health):\r\n\r\n**License Declared** can be answered by the API.\r\n\r\n**License Coverage**, **License Conflict**, and **License Count** can only be answered by scanning all files in the repository.\r\n\r\nComment: The scanning is not trivial. Binaries or images might not have declared licenses and might or might not be counted in the overall percentage.	2017-02-20 22:24:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691879	\N	What I've been finding online was that if a license isn't declared for something, you should assume that you can't use it.  Maybe we should output something along those lines to the user in the event we don't find a license?	2017-02-20 22:32:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691880	\N	An argument for more detailed license information is their critical importance in OSS -- not just at the project level but also at the file level. I think that GH only provides license information at the package level (could be wrong). Things like reported % of files with declared license can be very interesting. So too with the different licenses throughout a single package. As @GeorgLink points out, risk health is pretty important for many/all of these organizations. \r\n\r\nIt is true that it would entail a download and that is a big overhead. No doubt there. I don't think that we would hold the actual downloaded package post scan. Nor would we necessarily have to hold the results. \r\n\r\nI'm suspecting that the tools I mentioned above will be around for a while based on their Linux Foundation and corporate support. You never know though. \r\n\r\n@abuhman - yes, no license you can't assume use. Source available but not open source. 	2017-02-20 22:39:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691881	\N	@abuhman and @germonprez : What are your thoughts on putting some of the license work into the ghdata project road map? 	2017-10-06 15:18:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691882	\N	I think the scope of what's in Cold Fusion is the License Declared info that Georg mentioned above/ yes? 	2018-01-22 23:10:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691883	\N	I lost the context: What is Cold Fusion?	2018-01-22 23:33:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691884	\N	@GeorgLink : I think we are unsure how to measure this right now.  Is there a metric defined? 	2018-02-27 00:28:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691885	\N	We currently have the section ["Copyright and License Factors"](https://github.com/chaoss/metrics/blob/master/3_Risk.md#copyright-and-license-factors) that speaks to license metrics. Right now, the qualitative license metric that is a list of licenses in a project.\r\n\r\nAt one point, we were discussing a quantitative metric, but dropped the idea for now. 	2018-02-27 04:39:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691969	\N	Nothing wrong with it. Happy to change. \r\n\r\nYea, I think that the install script should be in this repo. 	2017-01-23 20:48:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692036	\N	https://github.com/kmn5409/GSoC_CHAOSS/blob/master/Augur/Perceval/Piper_reader.py\r\n	2018-06-01 13:21:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1691886	\N	@GeorgLink : Since there is an option to specify a license on a GitHub repository, do you think we should provide this information where available, or some aggregate navigation between projects with similar licensing policies at a "gestalt" instead of at the repository level? \r\n\r\n@howderek , here is the text from below and I think some of these "Activity Metrics" be put on our implementation path: \r\n\r\n\r\nActivity Metric | Description\r\n-- | --\r\nCopyright Declaration | The degree to which the project properly declares copyright ownership, including the copyright symbol or 'copyright' word, the year of the creation, the name of the author, and a rights statement.\r\nPackage License Declaration | A list of license declarations on the software package.\r\nFile License Declarations | A list of license declarations on the software package files.\r\nLicense Identification Methods | A list of methods or tools used for identifying licenses in files.\r\n\r\n	2018-02-27 21:37:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691887	\N	If you would only show the repository level license that is obvious from looking at the GitHub repository, then there is no additional information GHData would be providing and thus I do not see it as valuable. \r\n\r\nCan you elaborate on the "gestalt" idea? 	2018-02-28 02:38:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691888	\N	Closed due to inactivity	2018-10-12 04:17:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691889	\N	Perhaps take a look here: \r\n\r\nhttps://github.com/DoSOCSv2/DoSOCSv2\r\n\r\nThis is a project we built to interact directly with FOSSology scanners (licenses) and the NIST DB to get any reported CPEs. \r\n\r\nThis could be a good start.	2017-02-20 18:47:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691890	\N	Oops, beat me to it.  I mentioned that one in a separate issue.	2017-02-20 18:55:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691891	\N	You may want to look at [codeclimate](https://docs.codeclimate.com/docs/list-of-engines)'s work  because they have already successfully integrated the following static analysis tools: https://docs.codeclimate.com/docs/list-of-engines\r\n\r\nA few of those engines look for security vulnerabilities in dependencies (nsp, Bundler-Audit)	2017-04-14 14:51:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691892	\N	A security metric seems like something to put on the road map.  Parking it for now. 	2017-10-06 15:19:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691893	\N	@ccarterlandis and @ChristianCme : perhaps after we add additional visualizations to our release this week one or both of you could take a week and explore the implementation of security metrics, following the notes above. {Lets discuss and prioritize.}	2018-02-27 21:41:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691894	\N	Closing this due to inactivity	2018-10-12 04:16:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691895	\N	i think we are doing better at this, but it would be good to get a checkup at the end of the next release. 	2017-10-06 15:20:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691896	\N	This is in good shape now.  We have 96% coverage for unit tests on metrics and fairly good coverage on everything else. This is fixed when we release the current dev branch to code. \r\n\r\nRight now we need tests for libraries.io functions. 	2017-12-18 17:26:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691897	\N	@abuhman : I have not used Django before, but my experience with other frameworks is that database connections are often handled better by something that appears outside the framework.  Lets keep exploring.  \r\n\r\nFramework maturity wise, I think Django is a more solid foundation to build on, particularly given the speed we want to work at. .. Let's setup a prototype system and do some example apps for health measures in Django over the next few days and report back to the rest of the team. :) Thanks for pointing this out!!	2017-02-16 18:27:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691898	\N	I disagree we should use Django. Django's advantage is that it has a built in ORM plus a templating language. We need neither of those because we are building a REST API that only takes GET requests, and a static page that knows how to interact with that API.\r\n\r\nSince we are using someone else's schema for most of our data, Flask provides the functionality we need. Flask is better for applications that require more custom functionality on the backend. In other words, Django is more opinionated than Flask. Our project is not one that would fit well into that mold.\r\n\r\nOur backend will never make changes to the GHTorrent database based on user input. We will never need authorization. We don't want to render anything on the backend. The advantages Django comes with are overkill for this project, because the bulk of our code will be collecting metrics in a way we can manipulate easily. Dressing those metrics up with a REST API and shoving them into JSON are trivial in comparison. Flask is far more minimalist than Django, and that's what we want.\r\n\r\nAs far as Django being more widespread, that's true, but Flask is also a well known framework. Pinterest, Twilio, LinkedIn, Uber, and Mailgun are some examples of well-known compaines that use Flask.\r\n\r\nI look forward to viewing the Django approach, and if it really does seem better I'll be more open to the suggestion, but right now I don't feel like the advantages Django has make sense for our project.	2017-02-16 18:28:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691899	\N	Here it is:\r\n\r\nhttps://github.com/OSSHealth/ghdata/blob/dev/views.py\r\n\r\nThis is the views.py file of the local Django framework I had set up.	2017-02-16 18:47:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691900	\N	@abuhman I would strongly recommend [using the ORM](https://docs.djangoproject.com/en/1.10/topics/db/) to prevent SQL injection and using Django's [templating language](https://docs.djangoproject.com/en/1.10/topics/templates/) to render those layouts.	2017-02-16 18:51:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691901	\N	To my knowledge, SQL injection can not happen if there is no way for users to provide input (as is the case in this views.py).  This views.py was also intended to only ever be run locally by me (it was a learning experiment), never on a real web server.  However, sql injection is definitely important once we start using something like the Github URL to construct queries and having code that runs on a real web server.\r\n\r\nAs far as Django's templating language, I can look into that.  It also depends on what outside contributors are most comfortable with.  If the templating language sees widespread use and understanding, it may be a good thing to use.\r\n\r\nI also think if this was shared code it should have had more comments explaining some of the logic.  After having not looked at this in a while, I can see that some of the logic is not self-explanatory.  If this was for main repository code, it could also probably use a bit of cleaning for the same reason.	2017-02-16 19:05:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691970	\N	@germonprez Sounds good!	2017-01-23 20:49:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692411	\N	@sgoggins : It seems like that `dev-demo` and `dev` both have new-ui. Should I close this one?	2019-06-29 15:59:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1691902	\N	Users cannot provide input, but external input is being provided by the GitHub API (response -> eventData). External input should never be trusted. GitHub is probably not going to create an event type called `'); DROP ALL TABLES;` but it's still important not to inject external data into a query directly.\r\n\r\nTemplating (whether Django's templating language, or others) is definitely a good thing. Your business logic should be completely separate from the logic to display it.	2017-02-16 19:11:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691903	\N	I see what you mean.  I had forgotten about the GitHub API input.  Thanks for pointing that out.\r\n\r\nI'm new to Django, but I believe that it normally does separate business logic from display logic (the general useage of views.py is unlikely to be intended to contain business logic), or at least that most frameworks do.  However, I didn't attempt to follow that for a local experiment.  It was easier for me as far as development speed for something this small to combine all logic in a single file.	2017-02-16 19:15:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691904	\N	@abuhman I totally understand. I believe however when you do create a Django project following best practices you'll see why Flask is better for our project. Django isn't very Pythonic nor is it easy. Django is easier for building apps that are what most people think of when they say "webapp" (user authentication, interactions, control panels, etc.) but for our application it just doesn't make sense. It adds a whole layer of complexity that doesn't need to be there. 	2017-02-16 19:18:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691905	\N	While looking for information on test frameworks, I found a page with a list of links to resources on Django.  Posting it here for relevance to the conversation, though I haven't examined any of the books or tutorials:   https://www.fullstackpython.com/django.html.\r\n\r\nAs far as Flask vs Django, I think Matt is finding that Django is more widely used or well known at the conference he is at, which is another consideration.  I admit I'm not very experienced with either one.	2017-02-16 20:15:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691906	\N	There's no doubt that Django is more widely used than Flask. If we are trying to expose our project to as many people as possible, I'd argue we shouldn't be using Python, we should be using JavaScript. Python is more widely used in scientific communities however, and I think GHData's current architecture is geared to the scientific community.\r\n\r\nghdata.py currently returns Pandas DataFrames, which will be useful for Python developers to integrate into their existing analyses. server.py takes those DataFrames and serializes them into JSON and spits them out (using Flask decorators) for both our web app and those who want to consume the data in their own dashboards. If our sole goal is to create a web application that monitors the health of GitHub repos, we should use JavaScript (probably [Express.js](http://expressjs.com/)) instead of Python. JavaScript has a larger [open source community](http://githut.info/) and [more packages](http://www.modulecounts.com/) than any other language. It's also more intuitive to make an API with Express than Django because JavaScript speaks JSON natively.\r\n\r\nIf the main thing we care about is creating a open source project that others can contribute to, I still don't think Django is the best choice	2017-02-16 20:37:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691907	\N	Let me explain how I'm seeing this.\r\n\r\nI made architectural decisions thinking about 4 audiences:\r\n\r\n1. Researchers who just want the raw metrics to play around with.\r\n2. Companies that want to use the data in their own tools.\r\n3. Projects that want to integrate GHData stats into their websites.\r\n4. Individuals that want to look at the health of a given repo.\r\n\r\nI'm working on four deliverables for those audiences:\r\n\r\n1. A wrapper for the raw data for the researchers (ghdata.py)\r\n2. The API for companies that want to integrate it into their own frontends (server.py)\r\n3. The JavaScript library for projects that want to integrate it on the frontend (ghdata-api-client.js)\r\n4. The dashboard for users (frontend/index.html + associated styles and scripts)\r\n\r\nNow it feels like all we care about is the dashboard and all the other work I've done isn't valued. I'm okay with that if there are reasons my architecture is poorly designed, but it comes across like my work isn't valued because it doesn't use what other projects are using. Now the whole reason Django is popular is because it designs the architecture for you. I strongly feel the architecture it prescribes is not right for us, but I've heard no argument as to why it is, only that it's easier for outsiders to contribute to and more projects use it.\r\n\r\nI agree this project should be easier to contribute to. It needs [better documentation](https://github.com/OSSHealth/ghdata/issues/23) and it needs [tests](https://github.com/OSSHealth/ghdata/issues/14). That being said, I'm working my butt off trying to get as many metrics done as possible before each meeting, and I don't have time to do those things if I'm focusing on metrics. We don't even know which data are important yet, but we are approaching this project from the stance of "how can we invite more people in?"\r\n\r\nThat's important, but is it the most important thing right now?\r\n\r\nDjango would not help us be more productive. It would slow us way down, and the most unattractive thing to outsiders certainly isn't Flask, it's a project that doesn't even do anything. Switching architectures would mean starting over.\r\n\r\nAlso, I'm not even sure Django would be easier to contribute to. Flask is as simple as:\r\n\r\n```python\r\nfrom flask import Flask, Response, jsonify\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/your/endpoint/here/<blah>/')\r\ndef funFunction(blah):\r\n    message = {"message": blah}\r\n    return jsonify(message)\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```	2017-02-16 21:08:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691908	\N	@howderek & @abuhman : Here's the thing: We're working together and trying to share the project with a wide range of consuming projects on GitHub. Let's have a call tomorrow. You are both highly valued!	2017-02-16 22:02:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691909	\N	@howderek and @abuhman -- yes, both valued. \r\n\r\n@howderek -- reading your last post several times, I'm seeing your point of concern and it would easier to talk through this via a call (I had a long response written and it was too long). \r\n\r\nI'm planning on being in the Reno airport tomorrow at about 12 Central. Would that work? \r\n\r\n\r\n	2017-02-16 22:35:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691910	\N	@germonprez Yes, I am available tomorrow anytime after 10:30am! I will email you my cell phone number.	2017-02-16 22:42:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691911	\N	This is a late response, but I'm available.	2017-02-17 19:35:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691912	\N	That sounds similar to other environment files I have seen in the past. I think this is standard as far as I know.  It's because users can't really put things like their database password on shared code, and since local environments are going to vary.  I think the main thing is letting people know if they need to update and how, I think.	2017-02-15 16:59:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691913	\N	@GeorgLink Looks good and feel free to push commits directly to dev!	2017-02-15 16:01:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691914	\N	I agree that Markdown files are better but it's important to keep in mind these files will be distributed to those who download our package. We should limit which documents appear in `docs/` to only those that are relevant to users and developers of GHData. I think discussion and planning should happen elsewhere.	2017-02-15 15:20:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691971	\N	Hey @bkeepers and @wingr : A few thoughts on our approach here would be most welcome. :) 	2017-02-02 18:31:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692892	\N	Done in 9b1483f	2017-10-20 16:46:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1691915	\N	We could move the md files to OSSHealth/HealthIndicators - our project\nmanagement repository.\n\nOn Wed, Feb 15, 2017 at 7:20 AM, Derek Howard <notifications@github.com>\nwrote:\n\n> I agree that Markdown files are better but it's important to keep in mind\n> these files will be distributed to those who download our package. We\n> should limit which documents appear in docs/ to only those that are\n> relevant to users and developers of GHData. I think discussion and planning\n> should happen elsewhere.\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/18#issuecomment-280039269>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5RdjxH0ExfVOZVBtpEmlHTh4poM2Bks5rcxengaJpZM4MBxys>\n> .\n>\n	2017-02-15 15:24:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691916	\N	Fair enough on limiting the files in docs/. However, GHData needs to express things beyond the technical details. If we are going to build out the community, we need to express things like the roadmap. Perhaps scale back the roadmap.md file to only include technical and outreach goals. Move the academic things out and into the papers.md file (to be moved to HealthIndicators)\r\n\r\nFor the queries, I imagine that we will have a queries.py file at sometime. As queries.md stands right now, I'm fine with it in the docs/ folder. 	2017-02-15 15:30:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691917	\N	@germonprez Yes, of course. I agree with your proposal about the roadmap.\r\n\r\nThe queries appear in [ghdata.py](https://github.com/OSSHealth/ghdata/blob/master/ghdata/ghdata.py) when they are implemented.	2017-02-15 15:33:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691918	\N	@howderek -- Roger on ghdata.py! 	2017-02-15 15:36:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691919	\N	@abuhman, I'd be interested in seeing how your queries fair against Google BigQuery. 	2017-02-15 13:38:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691920	\N	@germonprez The consideration we need to make with BigQuery is that we have to pay for the queries after 1TB. Once we get the dataset downloaded to our own server we shouldn't have to pay anyone else to query it.	2017-02-15 15:12:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691921	\N	I think they'd have to be modified before they could run against BigQuery due to a different database schema.  Found a schema here https://github.com/igrigorik/githubarchive.org/blob/master/bigquery/schema.js	2017-02-15 17:35:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691922	\N	Got it. It also doesn't look like the full dataset. Is that the case?\n\nOn Feb 15, 2017 9:35 AM, "abuhman" <notifications@github.com> wrote:\n\nI think they'd have to be modified before they could run against BigQuery\ndue to a different database schema. Found a schema here\nhttps://github.com/igrigorik/githubarchive.org/blob/master/\nbigquery/schema.js\n\n‚Äî\nYou are receiving this because you were mentioned.\n\nReply to this email directly, view it on GitHub\n<https://github.com/OSSHealth/ghdata/issues/17#issuecomment-280080696>, or mute\nthe thread\n<https://github.com/notifications/unsubscribe-auth/AAoDUBq06FixcKbFMjh0d2V8vnRYLKNsks5rczdngaJpZM4MBSZD>\n.\n	2017-02-15 17:45:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691923	\N	@germonprez GitHub Archive is the raw events from GitHub. GHTorrent includes metadata about those events from the GitHub API. They are different datasets and GHTorrent is far more useful, but GitHub Archive would be easier to build a graph from (maybe, I will experiment with this when we've got the fundamentals done).	2017-02-15 17:46:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691924	\N	I just realized that [BigQuery also has the GHTorrent dataset](http://ghtorrent.org/gcloud.html) - we should move, this massively lowers the barrier to entry for people who want to use our Python library.	2017-03-01 02:38:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691925	\N	The [issue "Diversity by nationality"](https://github.com/OSSHealth/HealthIndicators/issues/20) is related.	2017-03-01 05:41:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691926	\N	This is actually a tougher call than I realized. Getting the repoid for a project owned by a given user (probably the simplest query we have) takes at least 1.5s. On the one hand, BigQuery offers some massive advantages, such as not having to maintain our own installation of GHTorrent and more accessibility to outside contributors, but on the other hand it's probably not suited for a web app because the queries are slow and we'll quickly hit our quota for free usage	2017-03-01 16:53:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691927	\N	Here is a screenshot of what it looks like if you don't have `msr14` and want to know before it's live online:\r\n\r\n<img width="1248" alt="screenshot 2017-02-10 20 06 12" src="https://cloud.githubusercontent.com/assets/835856/22850486/8d1da076-efcf-11e6-8f7c-ace90410b1a9.png">\r\n	2017-02-11 02:29:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691928	\N	Nice! Thanks for pushing this forward @howderek 	2017-02-11 13:04:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691929	\N	The way I understood diversity, I believe it is the percentage of a codebase that is outside of an company, so it won't be attainable through SQL.\r\n\r\nIf we care about the diversity of commits, we can use a `NOT IN (subquery that finds companies orgs)` to make sure a user doesn't belong to any organization that has the name of a company\r\n\r\nHere's an example of how you might find all orgs for a company:\r\n\r\n```sql\r\nSELECT DISTINCT organization_members.org_id, users.name FROM organization_members\r\nJOIN users\r\nON organization_members.org_id = users.id\r\nWHERE\r\nusers.name LIKE "%Google%"\r\n````\r\n\r\nI think we care about the number of contributors and scope of contributions outside of those orgs, regardless of the orgs they belong to.	2017-02-08 20:26:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691930	\N	Help me clarify the concepts and their implications for GitHub repositories.\r\n\r\nOrganizations appear to be constructs within GitHub that own shared repositories.\r\n- Can someone who is not a member of an organization, get commit rights on a repository?\r\n  - Thus, do all maintainers have to be members of the organization (will we ever see diversity of maintainers)?\r\n- Can members of an organization be employed by different companies (diversity within organization)?\r\n\r\nI think companies will be better for determining diversity because it reflects the employer of a contributor (we might have to do some clustering of similar company names).	2017-02-08 20:37:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691972	\N	> How and to what extent are health and sustainability indicators understood by community owners and other stakeholders?\r\n\r\nJust a note: The discussion on developing and understanding of the indicators occurs in the [HealthIndicators repository](https://github.com/OSSHealth/HealthIndicators)	2017-02-02 22:33:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692005	\N	@GeorgLink Yes! I already made one for Metrics that we will put the metrics you wrote in [CCCIndicators](https://github.com/OSSHealth/HealthIndicators/blob/master/CCCIndicators.md)	2017-02-13 17:35:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691931	\N	Georg:\r\n\r\nLooking through the data, I do see a few examples where it appears that someone has commit rights but is not a member of the organization that owns the repo.\r\n\r\nI suspect that organization members can be employed by different companies, but the queries I have written to confirm it are taking a while to run.  I'll update when I have that information for sure.\r\n\r\nDo you know a good way to do clustering of company names?  Or should we create an issue/task for it?\r\n\r\nDerek:\r\nOkay, do you know of a data source that allows us to tell which companies are related to what parts of the code?  Is that source something we need to be looking for?\r\n\r\nI'm not sure how we would bring organizations together for an arbitrary name we may not be aware of.  So if we specifically know we are looking for Google, we can do %Google%, but if we are going just based on a repo url I'm not sure how we could do that.\r\n\r\nIn general:\r\nIs it useful to our project to know about diversity when it comes to commits, pull requests, etc?  Is amount of code from different sources the only metric we will want?\r\n\r\nIs it useful to know the number of organizations or companies contributing to a project?  Or do we mainly want how many/how much of the contributions come from users that are not members of the organization that owns the project?	2017-02-08 22:20:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691932	\N	@abuhman We can get the number of additions/deletions [from the API](https://developer.github.com/v3/repos/statistics/#get-contributors-list-with-additions-deletions-and-commit-counts) and compare between in the orgs and out of the orgs.	2017-02-08 22:27:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691933	\N	Okay great thanks I will start looking into that.	2017-02-08 22:28:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691934	\N	@abuhman, thank you for investigating. \r\n\r\nRatio of maintainers that are not part of the organization are interesting\r\n\r\n> Do you know a good way to do clustering of company names? Or should we create an issue/task for it?\r\n\r\nI do not. Something along what @howderek offered: `LIKE "%Google%"` maybe? \r\nWorst case, we can go through manually and maintain a list of synonyms.\r\n\r\n> In general:\r\n> Is it useful to our project to know about diversity when it comes to commits, pull requests, etc? Is amount of code from different sources the only metric we will want?\r\n> \r\n> Is it useful to know the number of organizations or companies contributing to a project? Or do we mainly want how many/how much of the contributions come from users that are not members of the organization that owns the project?\r\n\r\nYes, we do want more than diversity in code.\r\nWe might add to and probably clarify the current list of potential diversity indicators:\r\n- Contributor Diversity\r\n- Contribution Diversity\r\n- Pull Request Diversity	2017-02-08 22:40:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691935	\N	Hi all, \r\n\r\nThe diversity metric was one that came from folks at the Linux Foundation. The premise was with respect to the code base. When a company releases internal IP as an OSS project (see HP with FOSSOLOGY or NYSETechnologies with OpenMAMA), the code base will naturally be from that company. As foundations broker these projects, they'd like to see broader diversity in the code base over time. @howderek 's suggestion is a great one. I do think that what @GeorgLink also suggests a way to think about the code base diversity a bit more broadly. \r\n\r\nThere was also the metric that came from Saucelabs that was about building diversity in the maintainers -- looking at ways to determine path/time to becoming a core member of a community. This was a bit different to me but might fall in the same general area. 	2017-02-09 12:09:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691936	\N	Using Matt's background as a guide, I think @abuhman & @howderek & @GeorgLink : what diversity means, IMHO, then, is a ratio of commits/repo-commits and commits/org-commits ... or whatever the other measure is .. knowing these by individual and collectively will help us know the extent to which an organization is largely controlled by a small, non-diverse set of folks.  \r\n\r\nContributor is, I think, a committer/issue creator/pull requestor combo grouping.\r\nPull request is specific. You probably also want metrics for the other component parts of "contributor" ...\r\n\r\nWe are aiming, I think, to tease out projects where:\r\n1. People contribute only to that project\r\n2. Projects are mostly the product of a small set of people\r\n3. Cases where the small set of people only contribute to one project \r\n\r\nAnd, of course, we want to identify projects with greater diversity.  	2017-02-14 19:34:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691937	\N	Diversity is the thing here at the LFLS. The other diversity metric that showed up was geographic diversity (if that can be determined). 	2017-02-15 13:43:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691938	\N	@germonprez Geographic diversity can be inferred! GHTorrent includes the location information people put on their page. We can use the Google Maps API to turn those vague location names into more detailed location information including coordinates.	2017-02-15 15:22:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691939	\N	Another diversity metric is gender diversity. Bitergia reported using first\nnames and combining it with geographic probabilities to express a certain\ngender.\n\nOn Wed, Feb 15, 2017 at 7:22 AM, Derek Howard <notifications@github.com>\nwrote:\n\n> @germonprez <https://github.com/germonprez> Geographic diversity can be\n> inferred! GHTorrent includes the location information people put on their\n> page. We can use the Google Maps API to turn those vague location names\n> into more detailed location information including coordinates.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/15#issuecomment-280039972>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5RctjXRk9iqXrS1lWSDFUZgp9fN5Wks5rcxgrgaJpZM4L7Ter>\n> .\n>\n	2017-02-15 15:26:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691940	\N	@GeorgLink I'm totally ready :) https://github.com/howderek/name-gender-csv	2017-02-15 15:29:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691941	\N	Awesome!\n\nOn Feb 15, 2017 7:29 AM, "Derek Howard" <notifications@github.com> wrote:\n\n> @GeorgLink <https://github.com/GeorgLink> I'm totally ready :)\n> https://github.com/howderek/name-gender-csv\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/15#issuecomment-280042227>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5Rc9QhqyasRqM-BAVqNK4pUQ8baptks5rcxnpgaJpZM4L7Ter>\n> .\n>\n	2017-02-15 15:44:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691942	\N	In the ghtorrent schema, there are fields for latitude, longitude, country code, city, and state. However, I could not find any information on how those fields are populated. \r\n\r\nIn the msr14 data set there is only a location field, about 45% of users have info for that, ranging from city, state to "Interwebz".	2017-02-15 16:24:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691973	\N	Hey @sgoggins, sorry for the delay here. I just wanted to give you a heads up that I'm at FOSDEM right now now and it'll be a few more days before I get a chance to reply.	2017-02-05 09:00:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277156
1691943	\N	Gender diversity can be determined partly by names. We should look for a "bag of names" that include probabilities that different names indicate specific genders.  Somebody has likely done this. Somebody, possibly @GeorgLink , might want to follow this thread up and down citation wise ... http://eprints.qut.edu.au/8014/1/8014.pdf  ... if we measure gender, we need to be systematic and methodical. We also need to make our algorithm and "bag of names" transparent and available as part of this or another public GitHub Repository. \r\n\r\nI point this out because gender issues in computing are epidemic, and we need to be careful not to build metrics that reinforce current biases and gender equity issues in computing. Algorithms have values, and ours needs to be explicit and, I think, forward thinking.  I suggest we vet it with a panel of people including Katie Siek at Indiana and Irina Schlovski at IT University in Copenhagen (two people I know will be willing to help us)	2017-02-15 16:28:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691944	\N	As for data, here is a set created using info from Social Security for US names and similar organizations for UK names. https://github.com/OpenGenderTracking/globalnamedata\r\n\r\nEdit: I didn't notice @howderek 's data he linked to earlier.	2017-02-15 16:35:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691945	\N	I added some simple queries that associate locations with repo members and another one that counts commits that come from a location. Both of which could be useful in creating different heat maps	2017-02-20 17:50:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691946	\N	we have initiated this development, and will, if we can, hit it in the next release. 	2017-10-06 15:21:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691947	\N	Lots of discussion here, so lets put this on the road map, @howderek @ChristianCme @ccarterlandis \r\nThanks!\r\nSean 	2018-02-27 21:43:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691948	\N	This discussion has moved to the CHAOSS D&I working group	2018-10-12 04:18:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691949	\N	Yes. I 100% agree with this one. A few other tests might include if we connect to external systems for license and vulnerability issues. 	2017-02-03 11:35:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691950	\N	For unit testing, unittest (also known as pyUnit) could be a good choice.  It is included in the Python standard library.\r\n\r\nDocumentation:\r\nhttps://docs.python.org/2/library/unittest.html\r\n\r\nunittest is also used in Django for testing:\r\nhttps://docs.djangoproject.com/en/1.10/topics/testing/\r\n\r\nIt's a good idea to create unit tests early on, as it will be much easier to implement them at the same time as the code than to go back later and try to add unit tests to code that was not set up to accommodate them.  It will also help to determine whether anything has broken due to a change, and serve as extra documentation for how things are expected to work (assuming the tests are kept up-to-date with the code).	2017-02-16 20:44:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691951	\N	I just added some basic unit tests for the library functions using pytest to the repo. Are those good for the baseline library functions? I'm also working on a travis.yml to add as well	2017-02-27 18:22:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691952	\N	Thanks for the tests!  Could you please comment and indicate what the tests are doing and how they demonstrate that things are working?  \r\n\r\nFor example, you have this test:\r\n\r\ndef test_commits(gh):\r\n    assert gh.commits('8').isin(["2013-01-07"]).any\r\n\r\nMy best guess is that you are asserting that repo id 8 made at least 1 commit on 2013-01-07 (which you likely pre-checked in msr14 database to find a repo with commits for that day), and you are doing this test in order to demonstrate that the commits function is returning an expected result for this query.  Is that the case?	2017-02-27 19:43:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691953	\N	Yep, that's right! I'll get the comments in later today. Also, our Travis build is successful with 3.6, but not 2.7. I'll look into that as well	2017-02-27 19:48:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691954	\N	Ok thanks	2017-02-27 19:54:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691955	\N	I added some comments in test_ghdata.py to give the general format for my tests. Let me know if I need to go into more detail. Also the 3.6 build is passing. There are issues with pytest and 2.7, but travis is messed up because of the AWS outage, so I'll get it fixed as soon as I can.	2017-02-28 22:42:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1691956	\N	Thanks!	2017-02-02 16:53:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691957	\N	Looks great, thanks!	2017-02-02 16:50:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691958	\N	@srobins259 I can't merge this into master because it's based on exploratory and we're not ready to roll that out yet.	2017-02-02 16:50:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691959	\N	Thank you!	2017-02-02 16:52:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691960	\N	@howderek you merged #9, #12 and #13, can this issue be closed?\r\n\r\nPS: GitHub can [automatically close issues](https://help.github.com/articles/closing-issues-via-commit-messages)	2017-02-02 22:27:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691961	\N	@GeorgLink Yes! Thanks.	2017-02-02 22:40:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691962	\N	Thanks, these are some good ideas!	2017-01-26 20:59:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691963	\N	This issue was moved to OSSHealth/HealthIndicators#1	2017-01-27 14:34:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691964	\N	The Hitchhiker's Guide to Python by Kenneth Rietz [recommends not putting the main source in an "ambiguous src folder"](http://docs.python-guide.org/en/latest/writing/structure/) and most large projects put the main source in a folder by the same name as the project. Kenneth Rietz suggests putting the source at the top level if it is only a [single python module](https://github.com/kennethreitz/records). If we change the structure, I believe it should look like:\r\n\r\nghdata (instead of src)\r\ntests\r\n\r\nand the install will be handled by setup.py in the root folder.	2017-01-25 15:10:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691965	\N	100% agree on ghdata vs. src\r\n\r\nIs the setup.py for the application or the database schema? 	2017-01-25 17:38:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691966	\N	@germonprez the application. So far we don't differ in db schema from GHTorrent, and when we do create a new schema it will probably be implemented with SQLAlchemy so it should be opaque to the user. If we end up creating something that needs an install script we can put it in the install folder like you suggest.	2017-01-25 18:48:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691967	\N	@germonprez I'll go ahead and close this issue (I hadn't closed it yet because tests are not yet implemented) but will create a new issue for tests.	2017-02-02 22:41:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691974	\N	@sgoggins likewise sorry for the delayed response. \r\n\r\nLooking over the technical section, your approach looks sound to me. I also believe that GHTorrent and GitHub Archive are going to be your best source of information, although @bkeepers knows a little more about the public data sources than I do. I believe that you should be able to get what you need from the GitHub archive without needing privileged API access and that it should provide you with enough up-to-date information since it is updated hourly. \r\n\r\nThere are also a number of scripts and wrapper code that people have created to help pull data from these sources that you can find by Googling.  \r\n\r\nA team I work closely with is in the process of trying to get better documentation around using these public data sets, so ping me with questions or challenges that your encounter and I will pass them along and try to help where I can.	2017-02-07 00:02:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277160
1691975	\N	Hey @sgoggins, I agree with @wingr that GHTorrent and GitHub Archive are going to be your best sources of information.\r\n\r\nAs for keeping the information up to date, I don't have any great advice at the moment, but if this is still a challenge, could connect you with some folks I know that keep an internal copy of the GHTorrent data set to see how they do it.\r\n\r\nHow's everything going with regard to access to the data?	2017-03-05 17:24:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277156
1691976	\N	We got this worked out!	2017-05-11 15:45:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691977	\N	@abuhman Regarding the commands, for right now only 'users' works. Also, a configuration file is required. There is a bug that prevents running it without the config file (which makes it tough to generate a config file!).\r\n\r\n`releases()` is not meant to be called directly. They are mangled by the [Click](http://click.pocoo.org/) decorators so [you have to call them from the Click context](http://click.pocoo.org/6/advanced/)	2017-01-20 20:41:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691978	\N	Thanks for the instructions!  As far as the Click decorators, what benefits do those provide?  What do they help us do?\r\n\r\nAnd as far as the commands not working, what should they do once they work?   How will we use them in the completed project?	2017-01-20 21:42:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691979	\N	The Click decorators handle the command line argument parsing and they support more complex tools than docopt.\r\n\r\nThe commands will generate self-contained datasets in a variety of formats. 	2017-01-23 15:27:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691980	\N	Okay thanks I think I understand better now.  I am working on trying to get some of the commands running.  I've gotten to the point where it is asking for the missing configuration file.  I have tried running the create_default_config command, which also asks for the missing configuration file.  Is there another way to obtain the configuration file?	2017-01-23 21:05:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691981	\N	Actually, I have a further question: if we are calling this from the web, will we be able to use the command line?  Some searching I have done online suggests that trying to run things on the command line from the web is highly insecure as it provides the potential to influence the host machine/server.  \r\n\r\nI'm not sure we will be able to use these commands with a web interface.	2017-01-23 21:24:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691982	\N	@abuhman I pushed an update that allows you to make the config without the db\r\n\r\nThere will be a CLI interface and a web interface. Both will use ghdata.py. The web interface will not touch cli.py or a shell. It is not worth building a web interface until we understand what's important.	2017-01-24 00:48:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691983	\N	great, thanks!  How should I make the config?	2017-01-24 20:49:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691984	\N	@abuhman `ghdata create-default-config` after you installed the newest version. 	2017-01-24 21:58:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691985	\N	okay, thanks!  I have a default.cfg file now.	2017-01-26 21:04:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1691986	\N	Sounds like the issue was resolved.\r\n@abuhman you reported the issue, can it be closed?	2017-02-02 22:29:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691987	\N	@GeorgLink the commands @abuhman mentioned are still not implemented. We can close the issue and move it to a milestone.	2017-02-02 22:37:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691988	\N	This issue is no longer relevant since we moved away from the CLI	2017-02-15 16:55:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691989	\N	We are a small team. For now lets use the slack channel to coordinate. 	2017-02-02 18:30:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1691990	\N	During our interviews, we have seen a lot of interest in our work and we might see people drop in to check on the status occasionally. Slack is a closed system that others cannot follow our progress.\r\n\r\nI believe that coordinating the development work through GitHub gives us the advantage of gaining a sense for what the metrics that we calculate originate from. We might even be able to determine the health of our micro-community :-)	2017-02-02 22:22:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691991	\N	@GeorgLink communication in Slack would be limited to dividing development work between us. This is a common practice, IRC and development have gone hand in hand for ages.\r\n\r\nExamples:\r\n- [Node IRC](https://webchat.freenode.net/?channels=node-dev&uio=d4)\r\n- [WordPress Slack](https://make.wordpress.org/chat/)\r\n- [Debian IRC](https://wiki.debian.org/IRC)\r\n\r\nIt makes sense to use Slack/Branches for core development and things like issues and shared documents for big picture public discussion. Outsiders are able to follow development through the commit log. When we have a working version of ghdata we can focus on creating a more sustainable, open project. It's hard to attract contributors without fundamental functionality anyway.	2017-02-02 22:35:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691992	\N	Indeed, Slack, IRC, Skype etc. are great for quick communication and keeping us on the same page. \r\nI am merely making a case for using issues and pull requests for building up a public knowledge base and history. It is not my place to tell anyone how to work on this project. I believe that defined processes help us collaborate with others and building habits early are advantageous for later. :-)	2017-02-03 03:21:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691993	\N	I'm fine with Slack. Not sure what the more general OSS world's use of Slack is. IRC is generally the way to go on this one. Can we make Slack a public discussion where anyone can join? I would prefer this. \r\n\r\nAlso, I chatted with Derek and Sean yesterday. We agreed that no one can accept their own pull request -- I would further like to note that I think **all changes** should go through pull requests. Just work on your local clone and issue the request. 	2017-02-03 11:40:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691994	\N	@germonprez We should use branches and then merge the branches after discussing them with our colleagues. Pull requests are generally for contributors outside the core team, and branches are the most common way to internally collaborate in git. If you are concerned that our current workflow is not descriptive enough, we can communicate through issues and use the feature-branch workflow.	2017-02-03 13:37:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691995	\N	@howderek just to clarify. Are you suggesting that all of us have an individual branch in the main repository and then issues pull requests to the main development branch so that we can review each other's changes? 	2017-02-03 13:47:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691996	\N	@GeorgLink I'm suggesting that we create a new branch for every issue and when that issue is resolved, we merge it into dev, and then when it's tested, we merge dev into master	2017-02-03 13:50:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1691997	\N	Ah, I have seen the issue-branches before. (Jira can automatically create a\nbranch for each issue you want to work on.)\nI'm not a developer and don't work with GitHub that much, so maybe you can\nhelp me understand the process.\nIn using issue-branches located in the main repository, could we still use\npull requests to facilitate a discussion before merging them into dev (and\nwhen we use Travis, to have a documentation that the tests passed)?\nWould we clutter up the repository with numerous open and closed branches?\n\nOn Fri, Feb 3, 2017 at 7:50 AM, Derek Howard <notifications@github.com>\nwrote:\n\n> @GeorgLink <https://github.com/GeorgLink> I'm suggesting that we create a\n> new branch for every issue and when that issue is resolved, we merge it\n> into dev, and then when it's tested, we merge dev into master\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/1#issuecomment-277250757>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5Rc2LCybPICCV8IvQUqHbtfg6S5HAks5rYzCggaJpZM4LpY2Y>\n> .\n>\n	2017-02-03 13:59:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1691998	\N	@howderek how is a merge not seen as a pull request in this case? \r\n\r\nI was thinking that \r\n1) Each of us has a clone of ghdata (all branches) locally. This is were we work\r\n2) We commit to our local clone\r\n3) We push to our fork of ghdata (whatever branch is appropriate -- dev or exploratory)\r\n4) We issue a pull request on ghdata (main) to merge our updated/changed branch from our fork\r\n\r\nDiscussion can then happen on that pull request (if needed). If it's not needed then have someone else on the team merge. Perhaps there is a smoother way to tackle this. \r\n\r\n	2017-02-03 14:21:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1691999	\N	@germonprez we have to be able to make changes without review or development will be very slow. The object of forks -> pull requests is so the maintainers can make sure someone without commit rights changes are safe before merging them in. \r\n\r\nWe should each make a branch for the individual issues. If they are non-breaking changes, we should commit them to dev. Dev is okay to break, but we should do our due diligence to test before pushing anything. We should always talk and make sure nothing is broken before merging dev -> master. \r\n\r\nIf there are significant changes that need peer review, [we can make pull requests to merge a branch into another branch](https://www.dropbox.com/s/06nwwvg2yw05d7s/Screenshot%202017-02-03%2009.23.15.png?dl=0). (So yes @GeorgLink we can! :) ). We should not have our own forks. We are the core team and have commit rights, creating our own forks unnecessarily complicates things.\r\n\r\nAlso @GeorgLink regarding branches "Would we clutter up the repository with numerous open and closed branches", that's why you don't publish your branches. You rebase and then publish to dev.\r\n\r\nHere is how the workflow would usually look, assuming you're in the dev branch and your local branch is in sync with master:\r\n\r\n\r\nDoing work locally (small change, you're sure it won't interfere with other people's work):\r\n```\r\ngit checkout -b your_feature\r\nvim new_feature.py\r\ngit add new_feature.py\r\ngit commit -m "blahblahblah for my own reference"\r\nvim new_feature.py\r\ngit commit -m "more things I need to know"\r\ngit checkout dev\r\ngit merge --squash your_feature\r\ngit commit -m "Message for everyone else"\r\ngit push\r\n```\r\n\r\nLarge work (Probable conflicts):\r\n```\r\ngit checkout -b your_feature\r\nvim shared_file.py\r\ngit commit -m "Message for everyone about this"\r\nvim another_shared_file.py\r\ngit commit -m "More things you need to know"\r\n\r\n# It's been a few days\r\ngit stash\r\ngit checkout dev\r\ngit pull\r\ngit checkout your_feature\r\n\r\n# Time to make your changes\r\ngit rebase --interactive dev\r\n# Edit the file that appears so that your commits will make sense to others\r\n# Manually fix merge conflicts\r\ngit rebase --continue\r\ngit push\r\n```\r\n\r\nHere is a great guide: https://sandofsky.com/blog/git-workflow.html	2017-02-03 15:51:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692000	\N	That was an interesting link, Derek.  I didn't know there was a way to 'hide' transitional commits that cause problems (generally I've labeled them with something like "this commit will break things, don't use it" or something)\r\n\r\n\r\nHere's what teams I have been on have done in the past as far as git workflow:\r\n\r\nThere is a dev branch and a master branch.\r\n\r\nFrom the dev branch, feature branches/ bug fix branches are created.\r\n\r\nIdeally, there is only one new thing/one fix per branch, or at least only one thing changed per commit.  This means that if a bug emerges later that didn't reveal itself during testing, there is the option of simply removing the offending commit(s) without breaking everything else.\r\n\r\nFeature branches are merged into the dev branch by each developer once they have been tested and are working locally.  The code on the dev branch is intended to be working (though less vetted than master), but feature branches may in intermediate stages contain code that breaks things.\r\n\r\nThe dev branch has pull requests into master (which are approved after further testing and review of the code)\r\n\r\nOne problem I have seen with the above is that if dev is not merged into master regularly, then new changes build up and the testing and review process becomes more and more difficult.  If we use this option, I would say dev --> master pull requests would need to be somewhat frequent.\r\n\r\nAnother issue (which has been mentioned above) is that sometimes the pull request into master process slows things down considerably, especially if another developer is needed to approve it who is not available right now.  However, since our project isn't live anywhere and to my understanding the deadline is Dec 2017, changes to master are not urgent and likely will not cause problems if delayed briefly.\r\n\r\nFor non-git workflow:\r\n\r\nFor code files that cannot be easily obtained through git such as with 'git pull' (for example, if we were to have an environment file whose format had changed) there needs to be a way to notify developers of how to obtain, change, and/or utilize it.  If developers don't know how to get set up, or if newly pulled-down develop branch code breaks because there was also an environment file change, this causes delays as developers try to figure out what went wrong.  This would need to be something we did any time such a file was updated.\r\n\r\nWe should also have instructions on how the code is intended to be run/utilized, as well as any initial setup that needs to happen before it can be run.\r\n	2017-02-03 20:27:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1692001	\N	Ideas that were brought up over the weekend regarding this:\r\n\r\nIf someone steps on your toes or changes something you needed, talk to them about it.\r\n\r\nPossibility of intent statement for files or repositories if they aren't meant to be part of the general workflow (example: "This is Bobby Bobberson's experimental file.  Please don't edit")	2017-02-07 18:01:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277116
1692002	\N	Thanks for the great comments. It sounds like you all are settling into a development pattern for the project. I do defer to @howderek and @abuhman for getting this flow down. Thanks all. 	2017-02-07 18:20:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692003	\N	I was talking with @ChristianCme, and he wants to use a kanban board to divide/plan the work. I agree that an asynchronous and straightforward method such as a kanban board is useful for visualizing who's doing what and what needs to be done.\r\n\r\nIf we do so, and I think we should, coordination will look like this:\r\n```\r\nLarge Features/Roadmap - Wiki\r\n |\r\n |____ Tasks - Kanban Board, also Issues for more complicated tasks\r\n        |\r\n        |___Division of those tasks -  Slack/Chat\r\n```\r\n\r\nWhat do you all think?	2017-02-13 17:14:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692004	\N	I think this might work for us.\r\nWould we use the [Projects in GitHub](https://github.com/OSSHealth/ghdata/projects) for the Kanban board?	2017-02-13 17:24:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693306	\N	Resolved	2019-07-31 15:30:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1692006	\N	I like it!\r\nIn light of the [discussion for maintaining one repository or two](https://github.com/OSSHealth/HealthIndicators/issues/13), how easy is it to move the project to another repository?	2017-02-13 17:48:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692007	\N	Make sure that "conda" is a command that is in your path.  Sometimes with tools like zsh or other developer shells, the path is not carried over from your .bash_profile.  If you issue the command "which conda" and it doesn't find conda, that means its not in your path.  Usually adding it to your path is a simple matter of exporting the environment variable "PATH" to include conda's path. \r\n\r\n	2018-07-29 15:46:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692008	\N	Still having issues with this. In the last couple of installs, I have to export conda to the path so I can install it, but it does not work outside that. I am able to get by without using the conda environment right now, though.	2018-11-21 19:26:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692009	\N	Added with commit [d5982c3](https://github.com/OSSHealth/augur/commit/d5982c32a9f7ed40fec48ea84d19740e29a19b9a).	2018-07-04 05:28:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692010	\N	Example: https://osg.facade-oss.org/projects	2018-06-16 17:39:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692011	\N	@howderek : This is probably the most important thing to focus on when you have time. 	2018-06-16 17:41:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692012	\N	@brianwarner : We have added a facade instance as an option for deployment of Augur so that Facade statistics are calculatable and presentable. \r\n\r\nGood to go on dev branch.  Pushing to master before CHAOSSCON on August 28, 2018 in Vancouver.  	2018-07-29 15:48:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692013	\N	Hello @OrkoHunter, thank you so much for your pull request! We have been working on updating docs right now and we noticed this bug in 8467d94e71228286062e057690fadafa5d1dee09 which was merged to master today. If you would like to keep up with our latest development efforts, please checkout the `dev` branch. 	2018-06-18 23:48:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692014	\N	Thanks @howderek! I just learned about the `dev` branch and would love to contribute :)	2018-06-18 23:51:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692015	\N	Done.  	2018-08-07 10:38:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692016	\N	I restarted docker and its working.  I think that we simply didn't restart the container after adding the update every day code. 	2018-06-13 22:33:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692017	\N	@howderek : If you have an idea why this is happening and what the fix is, @ccarterlandis is interested in working on it. :) 	2018-06-13 23:20:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692018	\N	Hmmm ... its a bit inconsistent ... some metrics are showing on some repos. \r\n	2018-06-08 22:04:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692019	\N	dev.augerlabs.io is a nice demo of non-github repos!	2018-06-08 22:04:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692020	\N	Server not found\n\nOn Fri, Jun 8, 2018 at 5:04 PM, Sean P. Goggins <notifications@github.com>\nwrote:\n\n> dev.augerlabs.io is a nice demo of non-github repos!\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/augur/issues/118#issuecomment-395904290>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUFg_FdvwXJARGBdx6CfDDxFDh4woks5t6vTmgaJpZM4Ug_5k>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttps://goo.gl/E87KdK\n	2018-06-09 11:57:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692021	\N	This works now. 	2018-08-07 10:38:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692022	\N	Hi @kmn5409 thank you for bring this to our attention, this was fixed in bd4d683	2018-06-06 15:34:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692023	\N	Items 3, 4, and 5 have been completed. After updating the API docs in `server.py` and making sure everything is relatively cleaned up, I will shift my focus to updating `make metrics-status`.	2018-06-14 01:32:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692024	\N	Completed updating `make metrics-status` with [this](https://github.com/OSSHealth/augur/co-mmit/796aea797c98d0f319662913dd26bcc4ef50cc10) commit.	2018-07-12 05:06:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692025	\N	I think the issue was unique to my fedora machine.  I changed a virtual link for the root of augur. I fixed the virtual environment and it works now. 	2018-05-25 08:21:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692026	\N	I will update the paths of these files to point to the new config	2018-05-22 16:23:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692027	\N	dev branch ... sorta obviously ... :) 	2018-05-22 04:28:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692028	\N	note; \r\n```bash\r\nmake to-json\r\n```\r\ndoes work, and everything runs. Its just a glitch in the make upgrade call ... 	2018-05-22 04:31:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692029	\N	will assign to @kmn5409 when he accepts the invitation to join our org. 	2018-05-20 18:20:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692030	\N	@sgoggins This is where I've reached so far with the problem but I have an issue with uploading the text to the database, at the moment some of it is too large, most of the text is able to be uploaded but some of the mailing messages is really large for example one of them is I think 7598287 characters. Should I look at maybe encoding the messages so that it can fit into the mysql database?\r\n[https://github.com/kmn5409/GSoC_CHAOSS/blob/master/Augur/Perceval/Piper_reader.py](url)\r\n	2018-05-22 16:45:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1692031	\N	@kmn5409 : what database are you using? I think you should truncate from the top.  If they are that big they are almost surely including the very long threads preceding them. 	2018-05-23 17:14:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692032	\N	Check one of the longer messages into your repo as a file. 	2018-05-23 17:15:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692033	\N	@sgoggins I'm using mysql and what do you mean by truncating from the top?	2018-05-24 14:57:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1692034	\N	@kmn5409 : In long running threads, I mean truncating the least recent messages. 	2018-05-25 04:39:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692035	\N	@sgoggins Okay I understand and I think I have an idea of what I will need to do then, thank you.	2018-05-25 14:53:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1692037	\N	Looks good, thanks!	2018-05-18 17:18:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692038	\N	@howderek : It looks like the failing issue is probably a rate limit on the GitHub API. Could you look into this so we know what's up with the failing dev build. I don't think its just this pull request. 	2018-05-17 23:08:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692039	\N	Hi @kmn5409, I cannot accept these changes because it references changes in dev but is being pushed to master	2018-05-18 14:15:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692040	\N	Looks great, thank you!	2018-05-03 02:48:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692041	\N	Thank you!	2018-05-03 02:47:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692042	\N	Thank you so much :)	2018-05-03 02:45:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692043	\N	Thanks!	2018-05-01 21:04:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692044	\N	This appears to only happen when changing the month without changing the year. After the year is changed, the month changes will be recorded. Cause still unknown and I will look at this when I finish up the new performance controls.	2018-03-28 04:59:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692045	\N	Thanks!	2018-03-28 04:54:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692046	\N	What error messages are you getting?	2018-03-26 17:05:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692047	\N	Checking status. 	2018-03-19 22:15:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692048	\N	Should `opened` and `closed` represent the number of PRs opened and closed that day, or running totals? Over what time frame should the `acceptance_rate`, `response_time`, and `resolution_rate` be calculated?	2018-03-15 10:55:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692049	\N	We have not talked about this on the metrics committee. I say, make a good\nguess and see how helpful it is. It'll be easier to change those settings\nafter they are implemented.\n	2018-03-15 12:14:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692050	\N	I'll make it configurable. By default it will include running total and instantaneous.	2018-03-16 17:21:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692051	\N	I have the same questions about this as I do about #90. ([specific comment](https://github.com/OSSHealth/ghdata/issues/90#issuecomment-373336986))	2018-03-15 10:56:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692052	\N	Please don't make me look at another issue for a question, just post it\nagain. Referencing issues is great for dependencies.\n\nMy answer is: We have not talked about this on the metrics committee. I\nsay, make a good guess and see how helpful it is. It'll be easier to change\nthose settings after they are implemented.\n‚Äã\n	2018-03-15 12:15:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692053	\N	I'll make it configurable.	2018-03-16 17:21:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692054	\N	I believe there would be use cases for both a cumulative total and the amount in that time period. As @GeorgLink suggested, we could test their usefulness and work from there.	2018-03-16 17:22:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277133
1692055	\N	I'll make it configurable.	2018-03-16 17:22:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692056	\N	Checking status	2018-03-19 22:16:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692057	\N	instantaneous or a running total .. perhaps as a parameter. 	2018-03-16 17:35:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692058	\N	Show types of contributions per user. 	2018-04-17 23:12:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692059	\N	Thanks so much!	2018-03-01 22:17:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692060	\N	I have completed one of those microtask and i want to work with you on this project for GSoC 2018. What am i supposed to do?	2018-03-05 03:43:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277189
1692061	\N	Hi @sreetamparida,\n\nThis email outlines your next steps:\nhttps://lists.linuxfoundation.org/pipermail/oss-health-metrics/2018-February/000517.html\n\n>\n	2018-03-05 03:56:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692062	\N	Hi @sgoggins @GeorgLink I am interested in this project for GSoC'18, I am already halfway done with microtasks completion. \r\nI wanted to know whether there is some specific template for the proposal ? or something specific you demand in the proposal ?\r\nAlso wanted to know where I can study more about Ghdata and the project's exact aims and demand ?\r\n\r\nThankyou	2018-03-16 16:33:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1692063	\N	For proposal guidelines, see our email archive:\nhttps://lists.linuxfoundation.org/pipermail/oss-health-metrics/2018-March/000532.html\n\nThe most information about GHData is on the repository.\n	2018-03-16 16:54:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692064	\N	Sorry for the inconvenience but can you please explain microtask 1 in details? What are we supposed to do? Write a Python script or use ghdata dashboard to generate visualization?  	2018-03-19 07:06:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277191
1692065	\N	@sgoggins @GeorgLink I too have the same doubt as @darkLord19, in first task we have to create the visualisation using Ghdata daskboard or python script by including Ghdata in it ?\r\n 	2018-03-20 14:36:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1692066	\N	We will accept visualizations either way. \n\nWe understand that not everyone is going to be skilled in javascript AND python.  If you are familiar with one, more than the other, use the tools that work to your strengths. \n\nSean \n\n> On Mar 20, 2018, at 09:36, Apoorv Khare <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> @sgoggins <https://github.com/sgoggins> @GeorgLink <https://github.com/georglink> I too have the same doubt as @darkLord19 <https://github.com/darklord19>, in first task we have to create the visualisation using Ghdata daskboard or python script using Ghdata ?\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/OSSHealth/ghdata/issues/82#issuecomment-374620816>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAXLx4Z3IDwFbtI0Lv2p-mTxlt7T0FWIks5tgRP0gaJpZM4SU-ai>.\n> \n\n	2018-03-23 14:55:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692067	\N	The public directory is updated by Brunch and is only tracked by Git for an easier time for our Docker deployment. Both the Brunch server and Docker NGINX configuration will serve the file correctly. Please use `brunch watch -s` for local testing (this will also proxy your API requests so it will work, it won't work if you just open the HTML file regardless of if the paths are correct).	2018-02-27 03:45:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692068	\N	Hi @amunz, as far as I can tell the version of docker-compose.yml in master no longer refers to the Dockerfile that depends on static-web/www. Are you up to date with master?	2018-02-19 22:30:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692069	\N	@amunz : Please do let us know if its working for you on Ubuntu. We do not yet systematically test the docker image on all versions of Ubuntu, so if we missed something we surely want to address it for you. \r\n\r\nIf the issue is resolved, let us know.  If it is not resolved, please let us know. If you do not let us know we will just keep asking. ;) 	2018-02-27 21:31:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692070	\N	fixed!	2018-06-14 02:11:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692071	\N	Thank you!	2018-02-27 03:38:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692072	\N	Set the environment variables in the standard UNIX way:\r\n```bash\r\nexport GHDATA_DB_USER="ghdata"\r\n```\r\n\r\nI will make that more clear in the README. The blank variables in docker-compose mean "use whatever is set on the host system"\r\n\r\nhttps://docs.docker.com/compose/compose-file/#environment\r\n\r\nI recommend not setting these variable in the docker-compose.yml directly but instead setting them at runtime or by sourcing a script that sets the variables (such as a ~/.profile)	2018-02-19 21:42:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692073	\N	I agree with the solution of making this explicit in the README file.  @b-hodges  and @germonprez : For the other docker images you are deploying, how is this handled? Are they using the docker-compose.yml or local environment variables as Derek suggests?  Not trying to parse "right" or "wrong", but instead trying to understand how this is being done in other corners of the CHAOSS ecosystem. :) 	2018-02-20 15:02:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692074	\N	I started out using the local environment but changed to docker-compose.yml to test it. They seem to achieve the same results, but using local environment variables doesn't require changing a tracked file. I've updated the #79 pull request to reflect this, clarifying some of the wording about the local environment variables.	2018-02-20 21:02:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277123
1692075	\N	@b-hodges : Do you consider this closed once the pull request is accepted? 	2018-02-26 22:19:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692076	\N	That works. I'll close this issue then.	2018-02-27 15:28:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277123
1692077	\N	@howderek : Please merge the pull request ... I am going to reopen and figure out how to attache an issue to a pull request if this is not already done. 	2018-02-27 21:27:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692078	\N	... and, nevermind ...@howderek merged the pull request . :) 	2018-02-27 21:28:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692079	\N	Those values should be left blank and be set using environment variables on the host system. Blank values mean 'use whatever is on the host system'. More information about docker-compose's environement configuration can be found here:\r\n\r\nhttps://docs.docker.com/compose/compose-file/#environment\r\n\r\nI recommend not setting these variable in the docker-compose.yml directly but instead setting them at runtime or by sourcing a script that sets the variables (such as your `~/.profile`). Please note that docker-compose.yml is tracked by the repo so should you like to contribute changes, your changes in that file will be tracked.	2018-02-19 21:45:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692080	\N	@germonprez : We could distribute the read only database information that I shared with you for your students to a small group of people for whom we are deploying the docker image. 	2018-02-20 15:00:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692081	\N	@howderek and @germonprez : Please let me know if you consider this issue resolved or if Docker issues are persisting. 	2018-02-27 21:32:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692082	\N	I'm fine for now -- in an effort to close this issue. 	2018-02-27 21:34:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692083	\N	@germonprez : If you are not able to easily install and run our Docker image, especially compared to other CHAOSS software, I would like to leave it open. If you do not have time to "try again" right now, I will leave it open until we are more "validated" in our Docker image install. \r\n\r\nWill edit and possibly combine with a "harden Docker install" issue if its not clearly resolved. 	2018-02-27 21:45:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692084	\N	That's fine with me. Perhaps I'll have time in CA to do an install :)	2018-02-27 21:49:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692085	\N	Definitions for these metrics located here: \r\nhttps://github.com/chaoss/metrics/tree/master/activity-metrics\r\n\r\n	2018-02-12 23:13:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692086	\N	‚ÄãWe renamed a few metrics for the AMCIS conference paper.\n\n- Distinct Committers -> Total Committers\n- Project Days -> Project Age\n	2018-02-12 23:15:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692087	\N	@GeorgLink : New names are on the right, correct? 	2018-02-26 22:20:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692088	\N	Here's some SQL that will answer a lot of pull request related questions: \r\n\r\n```sql\r\nSELECT\r\n\tpullreq_id AS "id" ,\r\n\tdate( opened.created_at ) AS "created" ,\r\n\tmin(closed.created_at ) AS "first_closed" ,\r\n\tmax(closed.created_at ) AS "last_closed",\r\n\tcount(closed.created_at) as "close_count",\r\n\t( ABS( DATEDIFF( max(merged.created_at) ,\r\n\topened.created_at ))) AS "days_to_merge"\r\nFROM\r\n\tpull_requests\r\nJOIN ( SELECT\r\n\t*\r\nFROM\r\n\tpull_request_history\r\nWHERE\r\n\tpull_request_history.action = "merged" ) merged ON pullreq_id = merged.pull_request_id\r\nJOIN ( SELECT\r\n\t*\r\nFROM\r\n\tpull_request_history\r\nWHERE\r\n\tpull_request_history.action = "opened" ) opened ON pullreq_id = opened.pull_request_id\r\nJOIN ( SELECT\r\n\t*\r\nFROM\r\n\tpull_request_history\r\nWHERE\r\n\tpull_request_history.action = "closed" ) closed ON pullreq_id = closed.pull_request_id\r\nWHERE\r\n\tbase_repo_id = 1334\r\ngroup by\r\n\tpull_requests.id\r\norder by \r\n\tclose_count desc\r\n```	2018-02-27 00:17:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692089	\N	> @GeorgLink : New names are on the right, correct?\r\n\r\nYes.	2018-02-27 04:46:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692090	\N	pull_acceptance_rate is done\r\nissues_with_close is done\r\nissue_response_time : Query performance issue, @sgoggins is working this. 	2018-02-26 22:44:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692114	\N	@dmgerman : there is no coupling to the GHTorrent as a data source.  If you mimic the schema from another source, that will work. The challenge, technologically, is that the GHTorrent schema requires queries more complex than sqllite will support in order to operationalize the metrics. \r\n\r\nWe could refactor some of that with pandas.  \r\n\r\nIs the main aim here to have a developer version on lighterweight technology? 	2017-11-26 22:30:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692356	\N	@howderek I am still having trouble with this. I'm using `/git/changes_by_author/github.com/twitter/twemoji` (which I thought had worked before) but to no avail.	2018-09-09 18:17:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692091	\N	This will make query response time super fast, and it also delivers additional data for no additional cost ... it can be part of an "issue response service call" @howderek  & @ccarterlandis \r\n\r\nQuery Delivers:\r\n1. Time to first comment on an issue\r\n2. Time of most recent comment on an issue\r\n3. Total comments on an issue\r\n4. Fields are issueid, repoid, issue created at, first comment, last comment, total comments by issue \r\n```sql\r\nSELECT\r\n\tissues.id AS "issue_id" ,\r\n\tissues.repo_id,\r\n\tissues.created_at as "issue_create_timestamp",\r\n\tTIMESTAMPDIFF(MINUTE,issues.created_at,MIN( issue_comments.created_at )) as "first_comment",\r\n\tTIMESTAMPDIFF(MINUTE,issues.created_at,MAX( issue_comments.created_at )) as "most_recent_comment",\t\r\n\tcount(*) as "total_issue_comments"\r\nFROM\r\n\tissues\r\nJOIN issue_comments ON issue_comments.issue_id = issues.id\r\nWHERE\r\n\tissues.repo_id = 1334 \r\n\tGROUP BY\r\n\t\tissues.repo_id,\r\n\t\tissues.id,\r\n\t\tissues.created_at\r\n\torder by \r\n\tissues.created_at\r\n```	2018-02-26 23:11:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692092	\N	Backend is finished. @ccarterlandis  is working on a stacked bar chart visualization that will be a stacked bar chart that distinguishes between open, closed and reopened issues. 	2018-03-14 21:13:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692093	\N	This feature was removed	2018-10-12 04:17:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692094	\N	`disableRollingAverage` was set up incorrectly. Fixed.	2018-02-21 23:52:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692095	\N	@b-hodges : is this issue also resolved with the pull request merge, or do issues persist? \r\n@howderek : thoughts. 	2018-02-27 21:33:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692096	\N	maintainers - this PR just edits the `README.md` file. The test failures here probably aren't related to the patch. Or if they are, I'd appreciate some help understanding how exactly :-)	2018-01-26 15:13:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277129
1692097	\N	@mureinik  I agree with your assessment that your edits should not fail the CI build test	2018-01-26 16:11:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692098	\N	@mureinik thanks!	2018-01-27 01:38:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692099	\N	Please fix and push to master. 	2018-01-20 17:41:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692100	\N	This is fixed. Thanks!	2018-02-27 21:34:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692101	\N	This is the dates not showing up after the new deployment.  I think this is fixed ... 	2018-01-22 23:08:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692102	\N	fixed in dev. 	2018-02-27 00:25:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692103	\N	done in dev branch. 	2018-02-27 00:25:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692104	\N	‚ÄãGreat idea! +1\n	2018-01-04 22:35:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692105	\N	done. 	2018-02-27 00:26:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692106	\N	The back end of this is finished.  The front end adaptation is something we are negotiating. Sean is pushing Derek to lower complexity solutions. 	2018-02-27 00:52:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692107	\N	This is more involved than I expected because I forgot that our current Docker setup uses the MSR14 dataset and not the full GHTorrent dataset. \r\n\r\n@sgoggins should I remove the database from docker-compose and have the docker application provide only the frontend and backend without the database, or should we consider this an open issue until the full GHTorrent dataset is deployable with our docker-compose application? 	2017-12-22 12:29:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692108	\N	> or should we consider this an open issue until the full GHTorrent dataset is deployable with our docker-compose application?\r\n\r\nAre you proposing to include the database inside the docker container?\r\nIf I understood that correctly, I think the first option is superior. \r\n\r\nA docker container that includes the database has two major issues:\r\n1. Size\r\n2. Requires updating when new data is released\r\n	2017-12-22 13:00:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692109	\N	Yes. Have the database separate. \n\nSean P. Goggins\n(816) 368-1364\nhttp://www.seangoggins.net\nvisit: http://www.sociotech.net\nvisit: http://www.datafactories.org \n\n"I force people to have coffee with me, just because I don't trust that a friendship can be maintained without any other senses besides a computer or cellphone screen.‚Äù\n‚Äî John Cusack\n\n\nOn Dec 22, 2017, at 07:29, Derek Howard <notifications@github.com> wrote:\n\nThis is more involved than I expected because I forgot that our current Docker setup uses the MSR14 dataset and not the full GHTorrent dataset.\n\n@sgoggins should I remove the database from docker-compose and have the docker application provide only the frontend and backend without the database, or should we consider this an open issue until the full GHTorrent dataset is deployable with our docker-compose application?\n\n‚Äî\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n	2017-12-22 14:22:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692110	\N	I think keeping the database out of the docker is best. We can Provide another Docker container for the database if needed.  \n\nSean P. Goggins\n(816) 368-1364\nhttp://www.seangoggins.net\nvisit: http://www.sociotech.net\nvisit: http://www.datafactories.org \n\n"I force people to have coffee with me, just because I don't trust that a friendship can be maintained without any other senses besides a computer or cellphone screen.‚Äù\n‚Äî John Cusack\n\n\nOn Dec 22, 2017, at 08:00, Georg J.P. Link <notifications@github.com> wrote:\n\nor should we consider this an open issue until the full GHTorrent dataset is deployable with our docker-compose application?\n\nAre you proposing to include the database inside the docker container?\nIf I understood that correctly, I think the first option is superior.\n\nA docker container that includes the database has two major issues:\n\nSize\nRequires updating when new data is released\n‚Äî\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.\n\n	2017-12-22 14:23:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692111	\N	This works now. Currently in Dev and Master. 	2018-02-27 00:26:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692112	\N	I will take this one for now. 	2017-12-18 17:11:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692113	\N	Hello @dmgerman! We appreciate your feedback and I apologize for the delayed response. I absolutely agree that GHTorrent is the largest hurdle for using GHData. We are exploring solutions and will include your SQLite suggestion in our discussions :)	2017-11-25 04:42:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692174	\N	@germonprez Yeah, we would just look at what API calls it's making because they are directly related to what people feel are important to show on their repos. We wouldn't use their code at all.	2017-03-24 18:50:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692115	\N	Can you give me an example of a query that SQLite will not be able to handle (that mySQL can)? In my experience it is the other way around (mySQL does not support merge joins, for example).\r\n\r\nThe goal is to change the need for GHTorrent to a script that does the equivalent mining, but only for one project. That will be significantly easier than having to install GHtorrent.	2017-11-27 06:27:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277198
1692116	\N	@dmgerman, [GHTorrent](https://github.com/gousiosg/github-mirror/) appears to already support SQLite and can be configured to only load data for a set list of repositories. If you would like to add SQLite support to ghdata, you could either modify [ghtorrent.py](https://github.com/OSSHealth/ghdata/blob/master/ghdata/ghtorrent.py) to work with both MySQL and SQLite, or add another data source focused on SQLite.	2017-11-28 18:48:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692117	\N	I think there are specific challenges being addressed in this issue:\r\n1. Wanting to run GHData against a smaller dataset, or against a dataset that is not captured in GHTorrent (i.e., not a GitHub repository). We think this will be accomplished working the Perceval as a mapper/aggregator. This is something Jesus and I are discussing as part of the CHAOSS project\r\n2. Actual support for SQLLite: SInce GHTorrent now provides .csv files by default, I think a subset could be mapped into SQLLite as @howderek notes above. 	2018-02-27 00:38:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692118	\N	Hello @dmgerman,\r\n\r\nI just wanted to follow up on your feedback about GHTorrent being burdensome. We have discussed a new architecture that will make it so that Augur does not rely on GHTorrent (which we agree is an issue), which we will work on implementing in the coming months.\r\n\r\nThank you again for your feedback!	2018-10-12 04:04:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692119	\N	Great! I like it!	2017-10-13 21:34:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692120	\N	Great to see a CoC added. One minor comment - it isn't clear who the "project team" is that will receive messages to outdoors@acm.org. It might be useful to explicitly state who is on that list, or point to the place in the repo/website where that information is updated.	2017-10-16 08:48:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277199
1692121	\N	Closing pull request to make specific changes suggested by npch. 	2017-10-19 15:35:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692122	\N	To close this, we need all the code now in front-end-next in front-end.  	2017-11-26 22:33:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692123	\N	Moved	2017-12-18 16:51:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692124	\N	Thank you for pointing this out, I already forgot about the old wiki pages :-D\r\n\r\nI can fix the dead links on the wiki.\r\n	2017-10-06 20:48:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692125	\N	I did my part and fixed all the links.\r\n\r\nI propose that GHdata links to the new location directly because I want the old wiki pages to go away.	2017-10-06 21:02:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692126	\N	Hi @GeorgLink : OK, this seems like it would not be a big deal.  In the wiki, there used to be one link per metric.  Does a corrallary exist in the CHAOSS GH Repository?\r\n\r\nThanks!  @howderek  & @ChristianCme  .. just a heads up on this discussion. :) 	2017-10-10 03:05:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692127	\N	Yes and No:\n\nYes:\nAll pages that were in the wiki continue to exist in GitHub.\n\nNo:\nWe only have metric detail pages for those metrics where Anna developed SQL\nstatements.\nMost metrics never had a page of their own because we had nothing to put on\nthem - feel free to create new metric detail pages as you are implementing\nthem.\n	2017-10-10 14:18:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692128	\N	@howderek and @ChristianCme : I think this is done, yes? 	2017-12-17 20:25:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692129	\N	All checks passed. Merging. 	2017-09-07 17:30:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692130	\N	@germonprez Does [this new README](https://github.com/OSSHealth/ghdata/blob/dev/README.md) help? If not, let me know how I can make it more clear. 	2017-05-11 14:35:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692131	\N	Sorry for the delay. Install ran cleanly. \r\n\r\nRemind me again what the test URL is. 	2017-05-17 23:14:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692132	\N	It will depend. DId you use docker or without docker? It should log the ports either way, but it may have gotten pushed up by the other text. The default port for the API is 5000	2017-05-19 16:19:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692133	\N	The read me file is going to include a developer deployment instruction set and a docker deployment instruction set. This is targeted for end of October. 	2017-10-06 14:59:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692134	\N	@howderek and @ChristianCme : I want to resolve this by doing a clean deploy on an empty server and updating our documentation to reflect what you learn here. 	2017-12-17 20:25:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692135	\N	I think that depends on the metric. I don't think "contributors" would be far less useful without having usernames to further explore a user's timeline of contributions, but "committer_locations" would probably be just as useful.\r\n\r\nEither way, we are only using public data so I don't think there's a huge privacy risk. Users who are concerned about privacy probably don't use personally identifiable information on GitHub.	2017-05-11 14:24:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692136	\N	Good point about the ability to drill down to how each metric is informed by the data. Maybe we can limit the level of detail though to avoid exposing usernames. This would be an ethical decision.\r\n\r\nA concern beyond privacy is how the data could be used against contributors, for example for job performance evaluation. There will be many things contributors do that cannot be reliably captured through our metrics and thus any conclusion drawn about contributors will be skewed. We do not want to provide a tool that incentivises contributors to think about gaming the metrics which distracts from meaningful contributions.\r\nThe request is about staying abstract from individual contributors.	2017-05-11 17:34:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692137	\N	I think that the metrics that operate at the individual level are useless without usernames, if we anonymize the data only the aggregate metrics will be usable. I think that it's useful for projects to be able to understand how individuals are contributing, and our tools will help make individuals who contribute in ways other than committing more visible	2017-05-11 18:11:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692138	\N	If on the call it sounded pretty certain that we want to anonymize it though it can certainly be done	2017-05-11 18:12:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692139	\N	Yes, during the 2017-04-08 call, several people voiced concerns with measuring individual users.\r\nThe [meeting minutes from 2017-04-18](https://wiki.linuxfoundation.org/oss-health-metrics/minutes/2017-04-18-formation-meeting) read: \r\n> We might not create metrics that are human centered\r\n\r\nI acknowledge that I wrote those minutes and maybe someone else can chip in how they understood what we talked about during that call.	2017-05-12 21:27:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692140	\N	Sounds good! We'll anonymize or aggregate the metrics that currently return usernames.	2017-05-12 21:29:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692141	\N	‚ÄãThank you.\r\n	2017-05-12 22:14:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692142	\N	Is this done? 	2017-10-06 15:12:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692143	\N	> Is this done?\r\n\r\nI don't know if this will ever be done because I think it can serve as a constant reminder. \r\nDoes GHdata currently comply with this issue: yes, we could close it.	2017-10-06 21:03:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692144	\N	Yes and no - Yes because GHData's frontend does not display any personally identifiable information. No because GHData has API requests that when made with the "raw" parameter will return all of the rows relevant to a given query, one of which is names (if the data source is GitHub). GHData visualizations will never use names, so I would feel comfortable closing it.	2017-10-06 21:10:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692145	\N	We do not expose individual users.  The API provides information about users, bur our front end does not expose information about useres. 	2017-12-18 17:39:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692146	\N	Yeah, so the table name in GHTorrent is watchers because that's what GitHub originally called it, but now they have renamed it to starring. Stargazers are people who have starred a repo. Here's the information from GitHub: [API docs](https://developer.github.com/v3/activity/starring/) and [a blog post](https://github.com/blog/1204-notifications-stars)\r\n\r\nSorry for the confusion!	2017-05-11 14:31:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692147	\N	Is this issue still open? 	2017-10-06 15:06:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692148	\N	Yes, it was resolved.	2017-10-06 21:11:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692149	\N	seems to be the period	2017-04-22 07:27:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277200
1692150	\N	my mistake	2017-04-25 20:02:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277200
1692151	\N	Thanks for letting us know! It's been updated, that project hasn't been started yet so I removed the link.	2017-04-17 14:07:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692152	\N	Try entering an owner and repo and pressing submit, if still nothing works send the log	2017-04-12 15:05:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692153	\N	Right on! Fully working. I was expecting something from FB Folly. \r\n\r\n<img width="969" alt="screen shot 2017-04-12 at 10 11 31 am" src="https://cloud.githubusercontent.com/assets/656208/24965010/6a3e36ba-1f68-11e7-97d1-5d7baaa63a24.png">\r\n	2017-04-12 15:11:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692154	\N	For sure! That was a placeholder when I was writing my CSS. I'll remove it!	2017-04-12 15:12:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692155	\N	Great.\n\nOn Wed, Apr 12, 2017 at 10:12 AM, Derek Howard <notifications@github.com>\nwrote:\n\n> For sure! That was a placeholder when I was writing my CSS. I'll remove it!\n>\n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/39#issuecomment-293609480>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUJbUheTS2klcgtOczz2gMoibAVN9ks5rvOncgaJpZM4M6hkw>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-04-12 15:23:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692156	\N	The UI likely needs a complete overhaul and this was purely for demonstration purposes that we had metrics end-to-end. After you put an owner and repo in the boxes and submit the form, you will see more. It's good feedback that they "healthy" badge looks like a button, I will make it more clear in the next iteration that it is not interactive.	2017-04-07 21:16:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692157	\N	Should I be seeing things below 'Growth Indicators?' Right now that is the bottom of the page. 	2017-04-07 21:19:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692158	\N	Yes, here's what I see\r\n<img width="1440" alt="screenshot 2017-04-07 16 20 10" src="https://cloud.githubusercontent.com/assets/835856/24820357/38eea9b8-1bae-11e7-82ac-3e949208344d.png">\r\nIf you are not seeing that, will you please send a screenshot of the console where ghdata is running?	2017-04-07 21:21:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692159	\N	Not getting the bottom detail. \r\n\r\nDB is installed. Tried as 'msr' user and 'root' \r\n\r\n File "/home/parallels/.local/lib/python2.7/site-packages/flask_cors/extension.py", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1540, in handle_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1982, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1614, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask_cors/extension.py", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1517, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1612, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1598, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/ghdata/server.py", line 37, in generated_function\r\n    return Response(response=serialize(func, repoid=repoid),\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/ghdata/server.py", line 23, in serialize\r\n    data = func(**args)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/ghdata/ghtorrent.py", line 85, in commits\r\n    return pd.read_sql(commitsSQL, self.db, params={"repoid": str(repoid)})\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/pandas/io/sql.py", line 415, in read_sql\r\n    chunksize=chunksize)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/pandas/io/sql.py", line 1084, in read_query\r\n    result = self.execute(*args)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/pandas/io/sql.py", line 975, in execute\r\n    return self.connectable.execute(*args, **kwargs)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 2064, in execute\r\n    return connection.execute(statement, *multiparams, **params)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 945, in execute\r\n    return meth(self, multiparams, params)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/sql/elements.py", line 263, in _execute_on_connection\r\n    return connection._execute_clauseelement(self, multiparams, params)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1053, in _execute_clauseelement\r\n    compiled_sql, distilled_params\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1189, in _execute_context\r\n    context)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1402, in _handle_dbapi_exception\r\n    exc_info\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/util/compat.py", line 203, in raise_from_cause\r\n    reraise(type(exception), exception, tb=exc_tb, cause=cause)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/base.py", line 1182, in _execute_context\r\n    context)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/sqlalchemy/engine/default.py", line 470, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/pymysql/cursors.py", line 166, in execute\r\n\r\n...\r\n\r\n File "/home/parallels/.local/lib/python2.7/site-packages/pymysql/connections.py", line 393, in check_error\r\n    err.raise_mysql_exception(self._data)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/pymysql/err.py", line 107, in raise_mysql_exception\r\n    raise errorclass(errno, errval)\r\nInternalError: (pymysql.err.InternalError) (1055, u"Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'msr14.watchers.created_at' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by") [SQL: u'\\n            SELECT date(created_at) AS "date", COUNT(*) AS "watchers"\\n            FROM watchers\\n            WHERE repo_id = %(repoid)s\\n            GROUP BY WEEK(created_at)'] [parameters: {'repoid': '2'}]\r\n127.0.0.1 - - [08/Apr/2017 07:12:05] "GET /unstable/hadley/devtools/timeseries/forks HTTP/1.1" 500 -\r\nTraceback (most recent call last):\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1997, in __call__\r\n    return self.wsgi_app(environ, start_response)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1985, in wsgi_app\r\n    response = self.handle_exception(e)\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask_cors/extension.py", line 161, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File "/home/parallels/.local/lib/python2.7/site-packages/flask/app.py", line 1540, in handle_exception\r\n	2017-04-08 12:17:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692160	\N	Which version of MySQL are you running?	2017-04-10 16:36:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692229	\N	@ccarterlandis : if it all looks good to you go ahead and merge. 	2019-01-10 02:02:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692161	\N	mysql  Ver 14.14 Distrib 5.7.17, for Linux (x86_64) using  EditLine wrapper\n\n\nOn Mon, Apr 10, 2017 at 11:36 AM, Derek Howard <notifications@github.com>\nwrote:\n\n> Which version of MySQL are you running?\n>\n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/38#issuecomment-293006108>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUPYVWG90IugwmbrjDbEC3HQkXeovks5rulqrgaJpZM4M3ZN_>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-04-10 17:59:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692162	\N	Thanks! I'll look into it.	2017-04-10 18:01:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692163	\N	What's the good word on this? 	2017-04-10 23:08:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692164	\N	We are working on making the instructions more clear.  These files are drafts.  We have ~100 Developers testing these instructions. @sgoggins is updating routinely this week. \r\n\r\nhttps://github.com/OSSHealth/ghdata/blob/master/devloperstartup.md\r\n\r\nhttps://github.com/OSSHealth/ghdata/blob/master/ec2.md	2017-04-11 18:12:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692165	\N	@germonprez : One of the challenges is we have refactored the code to make it easier for development, and that has had cascading effects on what the "right" instructions are. 	2017-04-11 18:13:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692166	\N	@germonprez Sorry for late reply, I was working on resolving this issue in another context. What directory are you running ghdata in? It must be run in the ghdata repo to serve the static files. Also, what happens if you go to http://localhost:5000/unstable/cakephp/cakephp/timeseries/commits ? What does your log show?\r\n\r\nThanks!	2017-04-06 19:45:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692167	\N	Following this: \r\n\r\npip install --upgrade https://github.com/OSSHealth/ghdata/archive/master.zip\r\n\r\nWhere is the repo? I guess I'm used to just doing a git clone. \r\n	2017-04-07 19:12:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692168	\N	Oh, sorry this isn't more clear! Running ghdata in that way will only serve the API. To have ghdata serve the front-end, you must run ghdata while in the repo (after `git clone`). To make things more clear, I think we should seperate the front-end into its own repo and make it a first-class web project.	2017-04-07 20:40:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692169	\N	Still getting a 404. What is the current order of install events?\n\ngit clone <repo>\ncd into root folder of repo\npip install --upgrade https://github.com/OSSHealth/ghdata/archive/master.zip\nghdata\nmodify ghdata.cfg for DB\nghdata\ngo to browser: localhost:5000\n\n?\n\n\n\nOn Fri, Apr 7, 2017 at 3:40 PM, Derek Howard <notifications@github.com>\nwrote:\n\n> Oh, sorry this isn't more clear! Running ghdata in that way will only\n> serve the API. To have ghdata serve the front-end, you must run ghdata\n> while in the repo (after git clone). To make things more clear, I think\n> we should seperate the front-end into its own repo and make it a\n> first-class web project.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/37#issuecomment-292646211>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUIBfGJXR2xro1bVq93WUTuoz96IJks5rtp9YgaJpZM4M1tCe>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-04-07 20:49:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692170	\N	Instead of `pip install --upgrade https://github.com/OSSHealth/ghdata/archive/master.zip`, use `pip install --upgrade .` while in the repo (although it shouldn't make a difference if your repo is in sync with master).\r\n\r\nEverything else looks good, my guess is that ghdata doesn't know you want to serve local files. You can tell it to by either setting `developer = 1` in your `ghdata.cfg` or by using `make run-debug` in the repo. ghdata's default settings are for production, where we would not want Flask responsible for serving our static assets. I'll seperate the two repos before our next release so it will be less confusing.	2017-04-07 21:01:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692171	\N	Ok working. The developer=1 seemed to be the trick.\n\nNow I'm going to open an issue on usage :)\n\nOn Fri, Apr 7, 2017 at 4:01 PM, Derek Howard <notifications@github.com>\nwrote:\n\n> Instead of pip install --upgrade https://github.com/OSSHealth/\n> ghdata/archive/master.zip, use pip install --upgrade . while in the repo\n> (although it shouldn't make a difference if your repo is in sync with\n> master).\n>\n> Everything else looks good, my guess is that ghdata doesn't know you want\n> to serve local files. You can tell it to by either setting developer = 1\n> in your ghdata.cfg or by using make run-debug in the repo. ghdata's\n> default settings are for production, where we would not want Flask\n> responsible for serving our static assets. I'll seperate the two repos\n> before our next release so it will be less confusing.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/37#issuecomment-292650665>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUPUdOQQlJcTaGSR2xWLYkOc7Re4Sks5rtqQYgaJpZM4M1tCe>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-04-07 21:06:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692172	\N	Sounds good!	2017-04-07 21:06:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692173	\N	Could you explain this in a bit more detail? Are you suggesting that we\nroot the JS file to help us think about our metrics? Or that we leverage\nthe actual JS code?\n\n\nOn Fri, Mar 24, 2017 at 1:07 PM, Derek Howard <notifications@github.com>\nwrote:\n\n> Hello all!\n>\n> I just stumbled upon shields.io which is open source, and practically the\n> entire project is contained in this large JS file\n> <https://github.com/badges/shields/blob/master/server.js>\n>\n> That file is full of API requests that we may want to use. These badges\n> are often related to repo health, so it's worth checking out some of the\n> services they use we haven't talked about:\n>\n>    - https://libscore.com/\n>    - https://www.bithound.io/\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/35>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUOkoUNy3KFflvJM6gHAQHMs8886bks5rpAZagaJpZM4MomG7>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-03-24 18:49:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692230	\N	Both of these types of links should work when clicked on now. Please reopen if you still have any problems.	2019-01-07 05:43:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692175	\N	Got it. In this list, are their any API calls that would immediately help\nus on our metrics list here:\nhttps://wiki.linuxfoundation.org/oss-health-metrics/metrics\n\nOn Fri, Mar 24, 2017 at 1:50 PM, Derek Howard <notifications@github.com>\nwrote:\n\n> @germonprez <https://github.com/germonprez> Yeah, we would just look at\n> what API calls it's making because they are directly related to what people\n> feel are important to show on their repos. We wouldn't use their code at\n> all.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/35#issuecomment-289112910>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUPpHY8LWLdWyMTSldSNzGkISA_Qpks5rpBB-gaJpZM4MomG7>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-03-24 19:02:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692176	\N	Yes, likely all the requests we would need to make for Downloads are there	2017-04-03 19:22:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692177	\N	What is the status of this? Is it still on our road map? 	2017-10-06 15:13:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692178	\N	As far as I understand the issue, @howderek  used shields.io as a source of inspiration. He'll have to decide if he still needs this.	2017-10-06 21:06:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692179	\N	@ChristianCme is currently working on this	2017-10-06 21:07:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692180	\N	We are closing this, as we've been adding metrics and the easy ability to add metrics. \r\nWe are putting this initial post from @GeorgLink into a road map task for a future relase.  Its a good list, but we need to manage it in chunks. 	2017-12-18 17:32:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692181	\N	i think the next step is to make this available for visualization on the front end, right? 	2017-10-06 15:15:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692182	\N	Right now, my first inclination is for the first option.\n\n\nOn Mon, Mar 20, 2017 at 11:57 AM, Derek Howard <notifications@github.com>\nwrote:\n\n> GHTorrent is an incredible resource, but it's difficult to deploy a\n> version of it that is in sync with GitHub. We have a few options:\n>\n>    - Write scripts to make it easier/containerize the deployment process\n>    - Lessen our dependency on GHTorrent and build directly on the GitHub\n>    API\n>\n> What should be our path moving forward?\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/OSSHealth/ghdata/issues/33>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUBh5JF3wnFF5sElmx0W_q48ZYlW5ks5rnrAFgaJpZM4Mit3k>\n> .\n>\n\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhttp://faculty.ist.unomaha.edu/mgermonprez/cv.txt\n	2017-03-20 19:25:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692183	\N	I'll work on converting the very simple metrics over to the API 	2017-03-20 20:09:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277115
1692184	\N	we have this done. 	2017-10-06 15:16:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692185	\N	I've been trolling around for installation issues (at least on Ubuntu!). #232 #233 \r\n\r\nWill be focusing on documentation over the weekend.\r\n\r\nIt seems like documentation is most needed at the moment, and deployment a close second. Opinions, other things to focus on from anyone?	2019-02-08 22:26:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692186	\N	After a good discussion earlier today with @howderek and @sgoggins, we've got some ideas about ways to make the new developer experience better.\r\n\r\n1). We've decided not to get rid of the Anaconda integration, as we feel supporting Anaconda is preferable to supporting 4 sets of Python installation instructions (macOS, Ubunto, centOS, and Debian) and we would rather have Anaconda handle all of that. However, as part of this decision, we're going to add a few steps in the docs to help new developers check that Anaconda is correctly installed on their machine. These will be in the form of "Attempt to run `xyz` Anaconda command to ensure you've gotten far enough; then, try `abc` Anaconda command to ensure..." so on and so forth. \r\n\r\n2). We're going to move the installation pieces of the `Makefile` into their own separate files in an attempt to more clearly break down what's going on when installing which will allow us to more easily pinpoint installation issues.\r\n\r\n3). I can't read @sgoggins's handwriting here. I think it says "Test" something. üòâ \r\n\r\n![2 8_notes](https://user-images.githubusercontent.com/31522931/52516327-94ca2f80-2bee-11e9-87d0-48d8421e1eff.jpg)\r\n\r\n\r\n\r\n4). Update the documentation! We'll have some fresh install docs to write, and when I write those up I'll go through the rest of them and do some more housekeeping.\r\n	2019-02-09 04:13:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692187	\N	I've added a preliminary version of item 1 above to the installation section of the Python documentation, under a "A Note about Anaconda".	2019-02-10 22:24:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692188	\N	Hi, thought I could to input my own experience installing Augur and this PR looked like a place to put it.\r\n\r\nSimply, I was unable to run Augur locally, something something about missing facade database. No explanations whatsoever how to install it, the website for it in the docs is down https://opendata.missouri.edu/ and in general I found the installation instructions to be quite hard to follow.\r\n\r\nDisclaimer: I did not use Vagrant since I don't want to use it. I'd rather use Docker and Docker Compose. Sadly though the `docker-compose.yml` was full of variables I had no idea what to fill with. I have a local GHTorrent MariaDB running, but where exactly I write its configuration. GH_TORRENT_PLUS? And apparently I should create another database and user called augur locally?\r\n\r\nThere was also some spelling errors in the docs and even an incorrect SQL statement: `GRANT ALL PRIVILEDGES ON augur.* TO 'augur'@'localhost';` (no D here).\r\n\r\nNot to sound too harsh or anything, but this was my short summary of hardships I endured. If it was possible to streamline the instructions with clear-cut steps for local installation I'd very much enjoy it. =)\r\n\r\nThe reason I'm doing this in the first place is for researching different types of open-source project analysis software/stuff out there. I am a part of a group doing a school project in which we're trying to come up with some models to analyze open-source projects, we've done some stuff here https://github.com/datascienceproject2019-codescoop/codescoop-models but yeah, still WIP üòÑ 	2019-03-11 18:37:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277216
1692231	\N	I'm unable to reproduce these errors in `dev`. If you check out the latest version of `dev`, does Augur work for you @Nebrethar? 	2019-01-03 19:12:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692481	\N	@parthsharma2 : congrats on having your GSOC pull request merged! I will be looking for your completed app in my augur project inbox! @ccarterlandis : Thanks for the assist!! :) 	2019-04-05 21:27:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692189	\N	Hi @TeemuKoivisto! Your feedback is very much appreciated, we are always on the lookout for problems and pain points in our installation process. \r\n\r\nFull disclosure: I'm not sure when the Docker installation instructions were last updated. We prefer new users to use Vagrant, but of course that's not everyone's preference! The Vagrant stuff is relatively new and I've been focusing most of my attention on that; after the Vagrant installation process has been hardened, I'll focus on updating the Docker installation instructions. \r\n\r\nAs far as Facade goes, that's not a project we maintain or contribute to, we just host a version of it ourselves. Lines 11-30 of the Vagrant provisioning file located [here](https://github.com/chaoss/augur/blob/hotfix/util/packaging/vagrant/provision.sh) have updated commands for installing lightweight versions of both Facade and GHTorrent, which might be useful.  I'm not sure why that link is down, I will look into it.\r\n\r\nIf you don't mind me asking, which parts specifically were hard to follow? I will target those first.\r\n\r\nAgain, thanks for the feedback!	2019-03-11 21:28:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692190	\N	Hey and @ccarterlandis thank you for quick response, always nice to encounter actively maintained project =].\r\n\r\nHmm well my initial reaction to the README was that it was complicated. I like numbered lists, like a lot. Also I try to keep my own READMEs minimum in words since I know the person installing the system isn't probably interested in my chatter, even though how relevant it might seem. Sadly. So I'd shorten the Vagrant installation instructions into 1-2-3-etc steps, with a table of contents. I only recently found that at least VisualCode supports auto-generation of TOCs in markdown files, which is pretty cool.\r\n\r\nSo as a quick example:\r\n1. Git clone and install Vagrant configuration:\r\n```\r\ngit clone https://github.com/chaoss/augur.git\r\ncd augur\r\nmake vagrant\r\n```\r\n2. Wait for the Vagrant installation finish. After it does, you'll be automatically logged into the VM. Navigate to the working directory which is synced between the VM and your local environment and start the server:\r\n```\r\nsudo su -\r\ncd /vagrant/augur\r\naugur\r\n```\r\n3. This will generate a default configuration file called `augur.config.json`. Use `sample.config.json` to fill in the missing configuration. You'll need at least x and y. Follow the instructions below to install the MariaDB database with GHTorrent data. If you're interested in doing developing your own *and so on*\r\n\r\nAnd then perhaps move the more explanatory details to other block say "Explanation of the installation process". Also then I'd add a short installation guide for local development without Vagrant with environment specific details left out. The current local installation guide could be the "detailed version" which was linked from the README. And it should use the same 1-2-3 steps with installation kept as simple as possible to not to overwhelm the silly programmer's brains with too much noise :).\r\n\r\nAlso this one made me feel quite uneasy:\r\n```make install-dev-admin # some libraries require a root install.```\r\n\r\nIf something requires sudo I'd very much prefer knowing what and why and could that be avoided somehow. Not just running some magic script that prompts for sudo privileges. Especially when I see sudo being used for installing Node.js which last time I checked wasn't required for Ubuntu (can't recall was it because I used nvm or why).\r\n\r\nBut the biggest problem was the missing instructions for the configuration variables: which are required and how the databases were set up. It would help if there even was some placeholder values in the docker-compose.yml or something. Also port-binding the app to localhost:80 is a bit unorthodox in dev setup.	2019-03-11 23:25:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277216
1692191	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Update installation instructions](https://trello.com/c/pVbd3Zxl/65-update-installation-instructions)	2019-03-12 00:28:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692192	\N	I am unable to view that card but anyway, by restoring the facade database I was able to get the augur to run. Which is nice but we are probably not going to do network or code/commit analysis for our project. Maybe something akin to libraries.io. But thanks!	2019-03-12 10:28:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277216
1692193	\N	Whoops, didn't see it left that comment! I'm glad you were able to get it to run. If it's alright with you, after I update the docs sometime this week I'd like your input as to where we can continue to enhance the process. 	2019-03-12 13:48:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692194	\N	Sure, I can take a look. =)	2019-03-12 22:03:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277216
1692195	\N	How are we on this issue? I think we have a few things to do yet, but I am feeling like it's time we close this issue with the vagrant fix in pull request #270 .	2019-04-25 02:45:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692196	\N	There are still a few documentation updates I'd like to make before I think this can be marked as done.	2019-04-25 17:34:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692197	\N	We've undergone a huge re-architecting since this issue was opened, and as a part of this process we've made numerous improvements to the NDE. While we will continue to focus on the enhancing NDE moving forward, the data in this issue is now significantly out of date.	2019-09-05 13:54:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692198	\N	The CII badging is in it's very early stages. I am adding it to get it into dev but there is much work to be done.\r\n\r\nI can describe how the js in the risk card pulls info:\r\n\r\n1. The base repo name is pulled from it's span(?) as a string and trimmed\r\n2. This string is concatenated onto the end of `https://github.com/`.\r\n3. The CII restful API is called with the string from #2 as a query and the data is pulled from the JSON response\r\n\r\nI've noticed that a lot of repos don't have CII status at all, at which point it will be left blank. I have an unmerged patch for risk that will proclaim that there is no CII information for the repo if it finds no data. \r\n\r\nI'm on mobile (riding down to MO) but I will leave another response soon if I find any new details about your case	2019-01-25 23:30:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692199	\N	It looks like pulp is the only repo with a CII badge that has the name pulp in it. I cna also confirm that this is what the page looks like when it fails to pull data. I will merge that fix when we arrive or possible sooner. \r\n\r\nThanks for looking out for that.	2019-01-25 23:34:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692200	\N	Anything else we need to do for this @Nebrethar and @sgoggins?	2019-01-27 15:50:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692201	\N	Looks like this has been implemented in `dev`. Closing for now, but if I'm wrong please re-open.	2019-02-09 04:15:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692202	\N	I'm closing this because I'm an idiot. Augur never did that. It created the sample.augur.config.json. 	2019-01-25 21:24:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692203	\N	(I think the documentation updates are in master but not dev.)	2019-01-25 11:08:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692204	\N	@gabe-heim before we merge, I'd like your review as well since this contains some new stuff in the Risk card.	2019-01-25 20:12:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692205	\N	@Nebrethar have you by any chance looked at [this](https://github.com/chaoss/augur/pull/222) PR? @parthsharma2 mentioned that he had been able to get Augur working without Anaconda as well. I'd love to chat with the two of you sometime and discuss your experiences with Anaconda and if it's worth the continued support (spoiler: I don't think it is). 	2019-01-25 17:24:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692206	\N	Thanks for referring to the PR, also +1 for ditching anaconda, though I don't know much about its use otherwise.\r\n\r\nThe conda environment fails every time I use `make dev` or `augur` and I've run I to no related hiccups with functionality. That's what I do know.	2019-01-25 23:22:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692207	\N	We've decided to use Anaconda only to manage the version of Python installed, and not to manage the packages. Augur will still work perfectly fine without it; it's just to make our lives easier.	2019-03-05 00:15:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692208	\N	![image](https://user-images.githubusercontent.com/34951354/51704907-d4363080-1fdf-11e9-8472-5e759b15a56c.png)\r\n	2019-01-24 19:56:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692209	\N	@ccarterlandis : Thoughts on the build failure? 	2019-01-24 21:58:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692210	\N	@sgoggins: The build failed because the alignment of the planets was off. You think I'm kidding, but I only wish I were...some tests are **very** finicky and sometimes, they just won't pass. Re-triggering the build usually makes it work (as it did this time), but we'll have to address this the inconsistency at another date.	2019-01-24 22:19:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692352	\N	@OrkoHunter : Note that the git lines are only going to work for the repos that are downloaded on your site.  The source is an actual clone of the git repo. \r\n@howderek and @ccarterlandis : I am looking at the dev branch right now and the API routes do not seem to be up.  Also notable: The list of GitHub repositories on the homepage is now gone. 	2018-08-15 11:05:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692211	\N	Rodger that.  \n\nOnce again the physicists and astronomers prove useful.\n\nSean \n\n> On Jan 24, 2019, at 4:19 PM, Carter Landis <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> @sgoggins <https://github.com/sgoggins>: The build failed because the alignment of the planets was off. You think I'm kidding, but I only wish I were...some tests are very finicky and sometimes, they just won't pass. Re-triggering the build usually makes it work (as it did this time), but we'll have to address this the inconsistency at another date.\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/chaoss/augur/pull/224#issuecomment-457379766>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAXLxy890PCP4kXX00rCE_MEWSC-p0uAks5vGjFfgaJpZM4aRmXm>.\n> \n\n	2019-01-25 10:41:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692212	\N	@ccarterlandis : Let me know about the failed travis check. 	2019-01-24 21:56:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692213	\N	@ccarterlandis : Is this one also planetary in nature? 	2019-01-25 10:42:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692214	\N	Hey @ccarterlandis, the Travis CI builds of my PRs keep on failing. On checking the build logs seems like there is some issue connecting to the database in the builds resulting in various errors.\r\n\r\nAm I doing something wrong?	2019-01-23 12:49:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692215	\N	Sorry to hear that you're having trouble, @parthsharma2. Has it been working up to this point? Because I have a hunch as to what the problem might be, but just for sanity's sake, could you tell me what happens when you run `make dev`? Feel free to just post a screenshot or c/p the logs, whatever you prefer!	2019-01-23 14:49:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692216	\N	On running `make dev` i get the following `make: conda: Command not found` since i'm not using anconda and have set up my own python virtual environment :sweat_smile:\r\n\r\nOn the other hand on further examining the Travis CI build logs the following line caught my eye `Encrypted environment variables have been removed for security reasons` and lead me to https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions. I think the following quote from the documentation might be the reason \r\n\r\n> Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.\r\n\r\n> Pull requests sent from forked repositories do not have access to encrypted variables or data.	2019-01-23 16:02:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692217	\N	I didn't know about that, but that makes perfect sense! All of our builds are passing, and if I remove all the configured environment variables and run the tests I get similar errors. I say we chalk it up to this and not worry too much about it. üòâ \r\n\r\nHave you run into any problems not using Anaconda? We have been considering ditching it since it's kinda annoying to work with, I'm curious to hear about your mileage.	2019-01-23 16:24:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692218	\N	Currently, I've only been playing around with `datasources.githubapi` and it seems to be working well till now. I'll experiment a bit more and let you know. And also a +1 for ditching Anaconda.	2019-01-23 16:50:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692219	\N	Everything seems to be working fine in the virtual environment. The server's working, the routes are being made, the endpoints are working and the metrics statuses are being displayed. \r\n\r\nOnly parts dependent upon Anaconda such as the make file need to be changed.	2019-01-24 16:47:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692220	\N	@ccarterlandis : I took a look at what this pull request is doing and its using the GitHub API.  I have not configured Travis at all, so my question may be naive ... but do we have a GitHub API Key in the travis build? 	2019-01-25 11:02:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692221	\N	@ccarterlandis and @parthsharma2 : I do think its a GitHub API Key configuration in TRAVIS issue. (i.e., the issue is NOT the code that @parthsharma2 submitted, but our Travis config.)\r\n\r\nHere's the bottom of the log: \r\n\r\n[1m[31mE           KeyError: 'data'[0m\r\n\r\n[1m[31maugur/datasources/githubapi/githubapi.py[0m:265: KeyError\r\n---------------------------- Captured stderr setup -----------------------------\r\n2019-01-25 10:57:43 travis-job-3cafaeb8-c86b-423c-9509-397bfd357318 augur[3669] ERROR /home/travis/build/chaoss/augur/augur.config.json could not be parsed, using defaults. Fix that file, or delete it and run this again to regenerate it. Error: Expecting value: line 1 column 1 (char 0)\r\napplication.py              67 ERROR    /home/travis/build/chaoss/augur/augur.config.json could not be parsed, using defaults. Fix that file, or delete it and run this again to regenerate it. Error: Expecting value: line 1 column 1 (char 0)\r\n------------------------------ Captured log setup ------------------------------\r\napplication.py              67 ERROR    /home/travis/build/chaoss/augur/augur.config.json could not be parsed, using defaults. Fix that file, or delete it and run this again to regenerate it. Error: Expecting value: line 1 column 1 (char 0)\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\n__init__.py                 18 DEBUG    Initializing GitHub API\r\n------------------------------ Captured log call -------------------------------\r\nconnectionpool.py          813 DEBUG    Starting new HTTPS connection (1): api.github.com:443\r\nconnectionpool.py          393 DEBUG    https://api.github.com:443 "POST /graphql HTTP/1.1" 403 None\r\n[31m[1m===================== 34 failed, 1 passed in 22.35 seconds =====================[0m\r\ntravis_time:end:0274a67c:start=1548413841738971342,finish=1548413864612720153,duration=22873748811\r\n[0K[31;1mThe command "python -m pytest augur/datasources/**/test_**.py" exited with 1.[0m\r\n\r\n\r\n\r\nDone. Your build exited with 1.\r\n	2019-01-25 11:11:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692222	\N	.. hmmm ... top of the file says "KEY ERROR" .. however, the details of the bottom of the log fail suggest something amiss in the augur.config.json ... I could be wrong about it being the GitHub API key, or that error could be indicating that the augur.config.json does not include a GitHub API key in our test environment. 	2019-01-25 11:13:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692223	\N	@sgoggins: @parthsharma2 and I chalked the issue up to this, from the Travis docs as pointed out by @parthsharma2: \r\n\r\n> Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.\r\nPull requests sent from forked repositories do not have access to encrypted variables or data.\r\n\r\nSince @parthsharma2 is making the commits from his repository and not ours, he doesn't have access to those encrypted variables (including the GitHub API key), meaning that **no matter what he does**, the tests won't pass on his branch. As a result, I'm going to go ahead and merge these changes and then run the build again and see if it'll pass. If it doesn't, we'll fix it!\r\n	2019-01-25 17:21:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692224	\N	@gabe-heim and @tretrue: have you been able to make any progress with this?	2019-02-09 04:16:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692225	\N	@ccarterlandis : you and @howderek have this? 	2019-01-17 01:52:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692226	\N	I will work on it. We've seen this before, so hopefully, it won't be too hard of a fix. @sgoggins 	2019-01-17 17:37:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692227	\N	Fix in `dev` as of [this](https://github.com/chaoss/augur/commit/6e35480d75db0765aa1210154febc26ed3734ef4) commit.	2019-01-17 18:01:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692228	\N	Seems like this issue has been resolved in the `dev` branch.	2019-01-10 15:56:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692232	\N	The steps I take to reproduce this issue are:\r\n\r\n-Install fresh for Ubuntu (including necessary conda environment repair and changing pip->pip3 in makefile to avoid installing to py2.7)\r\n-gir checkout dev\r\n-`Make dev` or `augur` command both produce issues\r\n-Apply these fixes to resolve runtime issues\r\n\r\nThis is performed on Ubuntu 16.04 / 18.04 ( I have performed the fix on both). I've done this mostly with my area's local augur server.	2019-01-04 03:58:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692233	\N	I also just recently started to run into this issue. The first time I saw it was probably late November.\r\n\r\nEDIT: I am pretty sure it was actually closer to [this commit from about half a month ago.](https://github.com/chaoss/augur/commit/2bfb3be655dea81bc395d69791cc74cec2256a3c)\r\nFor some reason the installations I have been using cannot recognize the `f` and I have to work around it.	2019-01-04 04:00:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692234	\N	Okay, maybe the issue is related to Ubuntu then? I haven't run into this (I'm running macOS Mojave). That seems weird to me that these Python issues are only occurring for you. I've not had to change `pip` to `pip3` in the Makefile or apply any of the other changes, and everything works for me.\r\n\r\nHowever, our hosting server runs Ubuntu 16.04 and has no problems with the latest version of `dev` which doesn't help my suspicions. I'll continue to look into this.\r\n\r\nIn the meantime, any ideas @howderek?	2019-01-04 04:32:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692235	\N	How this was actually configured (which was still incorrect given that I was unsure of what 'baseline' was) was that baseline was showing the rolling average, zscore was showing the zscore, and nothing was showing what baseline is supposed to be. It turns out that I had broken the raw values option at some point, but I just fixed it. I will look into getting 'baseline' to work as expected. I am wondering if we should have 3 radio buttons there? With the 3rd being "Rolling Average"? This seems like a necessary option to me.	2018-12-29 23:40:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692236	\N	Another thing to think about is, with whatever the comparison option is, if the user also has raw values shown, should we have the raw values put under the effect of the comparison option? Attached is an example where z-score and raw values are selected, should we compute the zscore of the raw data points and display those? Or the actual raw data?\r\n<img width="603" alt="screen shot 2018-12-30 at 12 08 56 pm" src="https://user-images.githubusercontent.com/20764846/50549941-0f854f80-0c2c-11e9-8fa7-90bd61cf63a7.png">\r\n	2018-12-30 18:11:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692237	\N	A 3rd option, 'Rolling Average', is now available which is self explanatory. The baseline option now works as expected as well.	2018-12-30 19:33:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692238	\N	I like your solution. I will download and test against it. 	2018-12-30 20:25:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692239	\N	Fixed in `dev` as of [this](https://github.com/chaoss/augur/commit/9478092def4650f70a85e4a65d832acef4d5b3ba) commit. The issue was that there was reference to something that used to be named `chartholder` and is now named `holder` instead. This was erroring out and instead of presenting a message, was just downloading the first chart by default (for some reason).	2019-01-02 22:37:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692240	\N	![image](https://user-images.githubusercontent.com/31676518/50659079-0d3f3000-0f61-11e9-9917-aae57d94fdd4.png)\r\n	2019-01-03 20:08:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692241	\N	Looks good @tretrue! üëç 	2019-01-03 20:41:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692242	\N	@tretrue and @gabe-heim (or whoever is working on these): just added another one.	2019-01-04 00:38:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692243	\N	weird question carter, but what is your screen zoom at? because im at 100% on chrome and the charts look just fine. or are you wanting to have it stay framed in no matter the zoom??	2019-01-04 18:55:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692244	\N	@ccarterlandis ^^\r\n	2019-01-04 18:55:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692245	\N	@tretrue: this is on Safari, full screen, default zoom (100%).	2019-01-04 20:05:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692246	\N	![image](https://user-images.githubusercontent.com/31676518/50792822-e1d38280-128b-11e9-8b55-609d6b44ed2e.png)\r\n	2019-01-07 20:52:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692247	\N	Is that pushed? @tretrue 	2019-01-09 21:03:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692248	\N	Yes	2019-01-09 21:14:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692249	\N	Now fixed to look like this.\r\n<img width="1280" alt="screen shot 2018-12-29 at 3 52 51 pm" src="https://user-images.githubusercontent.com/20764846/50550527-da7efa00-0c37-11e9-95a4-44c2f6219fe4.png">\r\n	2018-12-30 19:36:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692250	\N	Are you ready to merge yet @gabe-heim?	2018-12-29 19:49:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692251	\N	Hey @t9m! We appreciate your eagerness to help us deploy, but our `testing` branch is not currently ready for deployment to `master`. If you'd like to help out, I suggest setting up a local installation of Augur (documentation available [here](http://twitter.augurlabs.io/static/docs/dev-guide-toc.html)) and running the current build on the `testing` branch to help us find any bugs. \r\n\r\nThanks again and happy holidays!	2018-12-27 20:09:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692252	\N	We should get the screen pasted for the Z-Score version as well ... obviously with Z-Scores graphed, but nothing grphaed where there is not any data ...\r\n	2018-12-21 18:13:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692253	\N	This originated from the z-score function, where the case of the standard deviation being 0 was not handled, since the formula for z-score divides by zero and would cause a divide by 0 error not allowing the chart to show up. This case is handled now.	2018-12-29 18:53:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692254	\N	This works as expected now.	2018-12-21 20:32:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692255	\N	Now has an alert with something to the effect of what is suggested above.	2018-12-18 19:12:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692256	\N	dropdown now disappears appropriately. Drop down does not disappear when you click anywhere besides the "maincontrols" card.	2018-12-19 16:31:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692353	\N	@OrkoHunter ... i.e., "rails/rails" won't work unless we clone that repository ... 	2018-08-15 11:05:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692482	\N	Thank you @sgoggins @ccarterlandis. I look forward to working with you all :smile:	2019-04-06 13:27:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692257	\N	I can only get this to work by clicking on a single section of the screen, just below the words "Compare from your repos". The drop-down should disappear when the user clicks **anywhere** that isn't inside the drop-down menu. I've attached a screen recording showing this incorrect behavior in action.\r\n\r\n\r\n[Screen Recording 2018-12-21 at 12.40.20 PM.zip](https://github.com/chaoss/augur/files/2703872/Screen.Recording.2018-12-21.at.12.40.20.PM.zip)\r\n	2018-12-21 18:50:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692258	\N	They now disappear appropriately by using a vue directive.	2018-12-21 23:09:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692259	\N	Now overlays everything else.	2018-12-18 19:18:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692260	\N	One additional method of implementation could be to use the `metrics/status/filter` endpoint to find some metric's metadata given a `chart_mapping`, like so: `/api/unstable/metrics/status/filter?chart_mapping=openIssues`.	2018-12-19 06:17:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692261	\N	Is now dynamic by hitting the endpoint mentioned above.	2018-12-20 23:29:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692262	\N	Hitting this button now clears selected entries in the drop down AND clears all compared repos	2018-12-18 22:46:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692263	\N	I'm currently unable to reproduce this on dev. @Nebrethar would you try this again with the new version of dev and see if it still persists?	2018-12-13 15:58:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692264	\N	@Nebrethar have you made any progress concerning this?	2018-12-18 00:02:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692265	\N	@Nebrethar : Our theory is that there is an issue with credentials on ghtorrent database ... if you change the database to ghtorrent_blue, that will work ... its mid restore right now. \r\n\r\nSean 	2018-12-19 16:30:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692266	\N	Another issue with "make dev start"\r\n\r\nmake dev start\r\n\r\nServer     Description       Log                   Monitoring                   PID                        \r\n------------------------------------------------------------------------------------------                 \r\nFrontend   Brunch            logs/frontend.log     make monitor-backend         13143 \r\nBackend    Augur/Gunicorn    logs/backend.log      make monitor-frontend        13114 \r\n\r\nMonitor both:  make monitor  \r\nRestart and monitor: make dev\r\nRestart servers:  make dev-start \r\nStop servers:  make dev-stop \r\n\r\n**==> logs/frontend.log <==\r\nbash: brunch: command not found**\r\n\r\n==> logs/backend.log <==\r\n[2018-12-05 15:29:21 +0900] [13131] [INFO] Booting worker with pid: 13131\r\n[2018-12-05 15:29:21 +0900] [13132] [INFO] Booting worker with pid: 13132\r\n[2018-12-05 15:29:21 +0900] [13133] [INFO] Booting worker with pid: 13133\r\n[2018-12-05 15:29:21 +0900] [13134] [INFO] Booting worker with pid: 13134\r\n[2018-12-05 15:29:21 +0900] [13135] [INFO] Booting worker with pid: 13135\r\n[2018-12-05 15:29:21 +0900] [13136] [INFO] Booting worker with pid: 13136\r\n[2018-12-05 15:29:22 +0900] [13137] [INFO] Booting worker with pid: 13137\r\n[2018-12-05 15:29:22 +0900] [13138] [INFO] Booting worker with pid: 13138\r\n[2018-12-05 15:29:22 +0900] [13139] [INFO] Booting worker with pid: 13139\r\n[2018-12-05 15:29:22 +0900] [13141] [INFO] Booting worker with pid: 13141\r\n\r\n	2018-12-05 06:51:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692267	\N	I do get the front end installed after I use \r\n``` \r\nmake install-dev-admin\r\n```\r\nI had thought we eliminated the need for that, but it seems we need brunch installed as admin. \r\n\r\nBefore we get rid of the make architecture, I wonder if we should separate the brunch install since it *seems* like it might be the only thing requiring root access to install? 	2018-12-05 07:04:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692268	\N	(@howderek, correct me if I'm wrong) IIRC, we will keep the frontend npm stuff in the `Makefile` for that reason @sgoggins. The main things we want to move out of the Makefile are the Python install scripts; if we want to package Augur, we should have all the installation stuff for it live inside of the `augur/` directory in the project's root folder. That way, the backend and frontend will be more clearly separated (again, that might be totally incorrect. Just my recollection).	2018-12-06 19:08:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692269	\N	After doing a clean install of Augur, I was unable to reproduce this issue. I used `make install-dev-admin`, and not `make install-dev`: @sgoggins, the first time around, did you use `install-dev` as well? It seems to me that `install-dev` is just a weaker version of `install-dev-admin` that doesn't seem to work very well, so I propose we nix `install-dev` and just transparently replace the contents of `make install-dev` with the admin version.	2018-12-18 00:51:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692270	\N	The installation has evolved. We are ready to close this issue. 	2019-01-07 19:38:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692271	\N	This issue was caused by the fact that in fact, there was no URL for `0.0.0.0:5000/`. All API routes contain the current API version (currently `/api/unstable/`), so I simply added a redirect from `0.0.0.0:5000/` to `0.0.0.0:5000/api/unstable/`. This is the de facto "default" page for the API, as it just shows the API is reachable by displaying a short status message.\r\n\r\nFixed in `dev` in [this](https://github.com/chaoss/augur/commit/162f274339a90008ea823534c345cff59419c65b) commit.	2018-11-21 01:03:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692272	\N	Fixed with revert, thanks.	2018-11-20 16:04:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692273	\N	This creates some licensing issues, of which I was unaware when making the change.	2018-11-21 00:49:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692274	\N	@Nebrethar if you're comfortable making the proposed changes, then I feel comfortable merging.	2018-12-23 20:53:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692275	\N	@Nebrethar: as part of this effort to make everything clearer, I can write up a small section covering the configuration file in the developer docs as well. I think this is a sensible default, thanks for doing this!	2019-01-03 20:44:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692276	\N	I think the new viz's on the Git tab ("Lines of code added by the top 10 authors as Percentages - By Time Period", "Commits by the top 10 Authors as Percentages - All Time", and "Lines of Code Added by the top 10 Authors as Percentages - All Time") solve this use case.	2018-12-29 19:09:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692277	\N	I believe @tretrue has been working on a fix for this, although it's not public yet.	2018-11-09 00:02:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692354	\N	Oh, that makes good sense. Thanks @sgoggins!	2018-08-15 16:44:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692483	\N	@ccarterlandis : DO we expect all checks to fail on travis for this branch, or is something awry? 	2019-03-26 14:16:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692278	\N	There is progress here ... now the version in dev doesn't respond to day changes ... or Z-Score changes .. the lists are working better, though a little "dodgy" ... ALso, if there's anything we can do to make the list of repos being compared a little easier to follow at the top ... maybe even a simple numbering scheme ... 1. .. 2... etc. \r\n![augur](https://user-images.githubusercontent.com/379847/48315883-7b8af600-e5a1-11e8-8fa4-de0828eebf44.jpg)\r\n	2018-11-11 17:04:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692279	\N	> I believe @tretrue has been working on a fix for this, although it's not public yet.\r\n\r\nThere is some progress.  My comment above is simply the state of what is checked in. 	2018-11-11 17:05:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692280	\N	Hey @gabe-heim : My sense is we are solving this with the work stream you are on? 	2018-12-05 06:17:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692281	\N	Yes, I will make sure all is working flawlessly before we do a release.	2018-12-05 14:50:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692282	\N	Its not entirely on you .. :) \n\n‚Ä¶. \n\n\nSean P. Goggins\nAssociate Professor, Computer Science\nUniversity of Missouri\nhttp://www.seangoggins.net <http://www.seangoggins.net/>\n\nvisit: http://www.augurlabs.io <http://www.augurlabs.io/> (Research Lab) [Sloan Foundation, National Science Foundation]\nvisit:¬† <http://mhs.missouri.edu/>http://mhs.missouri.edu <http://mhs.missouri.edu/> (for mission hydro sci!) [i3 & IES]\nvisit: http://ocdx.io <http://ocdx.io/> (for the open collaboration data exchange!)   [National Science Foundation]\nvisit: http://www.sociotech.net <http://www.sociotech.net/>\nvisit: <http://chaoss.community/>¬† <http://chaoss.community/>http://c <http://c/>haoss.community (for open source health metrics) [Sloan Foundation]\nvisit: http://sociallycompute.io <http://sociallycompute.io/> (for code like things and Group Informatics) [National Science Foundation]\n \n‚ÄúStart with what is right rather than what is acceptable.‚Äù\n‚ÄîFranz Kafka\n\n> On Dec 5, 2018, at 11:50 PM, Gabe Heim <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> Yes, I will make sure all is working flawlessly before we do a release.\n> \n> ‚Äî\n> You are receiving this because you were assigned.\n> Reply to this email directly, view it on GitHub <https://github.com/chaoss/augur/issues/189#issuecomment-444511579>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAXLx1-2_bLk9b-C1FUNVRBl_SLYIZOHks5u191FgaJpZM4YCwJx>.\n> \n\n	2018-12-05 19:50:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692283	\N	Still broken ;) \r\n\r\n![augur](https://user-images.githubusercontent.com/379847/48315893-aecd8500-e5a1-11e8-947f-75e4819dc2ca.jpg)\r\n	2018-11-11 17:05:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692284	\N	Have a fix, will be pushed soon.	2018-11-12 00:14:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692285	\N	Issue is fixed.	2018-11-12 19:22:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692286	\N	Should be fixed (in `dev`) as of [this](https://github.com/chaoss/augur/commit/69d23517baac6b5c0932ca85b5a2fa8301175060) commit. 	2018-10-25 20:13:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692287	\N	Status report? 	2018-11-11 17:09:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692288	\N	Will be fixed with vue-router implementation, which I have been trying to figure out. May still be a day or two.	2018-11-12 19:23:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692289	\N	@jonahz5222 : What's the remaining "to do" here? 	2018-11-11 17:08:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692290	\N	Closed per discussion with Jonah!	2018-11-11 17:08:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692291	\N	Should be implemented (in `dev`) as of [this](https://github.com/chaoss/augur/commit/cec100862520b4ce6da0dea2be705b51954aebe1) commit.	2018-10-25 20:15:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692292	\N	Key points (as described by @howderek):\r\n- Runtime cache should be in /var/cache/\r\n- Default to be conformant to FHS, but can specify other storage directories\r\n- Location of `augur.config.json` - allow a number of places where Augur will expect the config to be	2018-10-31 01:01:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692293	\N	@howderek I don't see a `/var/cache/` on my machine; is that the exact path? I did however find `/usr/local/var/cache/`. \r\n\r\nAdditionally, you mentioned that `augur.config.json` should be able to be stored in a number of places - where exactly did you have in mind? I seem to recall you mentioning something about storing it in `etc/` - am I remembering that correctly?	2018-11-07 21:59:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692294	\N	I was able to change the cache location by changing the `cache.data_dir` value in my `augur.config.json` file, but I'm not sure if that is the right way to make that change.	2018-11-07 22:23:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692295	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Make Augur follow FHS](https://trello.com/c/HJqfZGg4/13-make-augur-follow-fhs)	2019-03-06 18:48:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692296	\N	Updated (in `dev`) as of [this](https://github.com/chaoss/augur/commit/5e3a73a9ad2435211de75b61d6071c1ea1c1a6af) commit.	2018-10-25 20:16:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692297	\N	@ccarterlandis and @howderek : how are we doing on this one? I think its super important for newcomers. 	2018-11-11 17:06:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692298	\N	https://github.com/chaoss/augur/pull/196 fixes this issue on Ubuntu with a fresh install.\r\n\r\nI'm not sure what pip3 would look like in other distros/os	2018-12-11 17:34:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692299	\N	The environment has evolved enough that I am going to close this issue now. For the most part we now know its a Python 3.x application and 2.7 does not work. 	2019-01-07 19:41:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692300	\N	Duplicate of [this](https://github.com/chaoss/augur/issues/186) issue. Closing this one, as the other one is in the proper format. Please use the other one linked above.	2018-10-25 20:18:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692301	\N	There may need to be more than one query and API call in augur/augur/facade.py because right now the summararizations are parameterized against analysis. 	2018-09-21 02:19:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692302	\N	Duplicate of [this](https://github.com/chaoss/augur/issues/183) issue. That one has been resolved, so I'll close this one. 	2018-10-25 20:19:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692303	\N	Hello @Nebrethar,\r\n\r\nThank you for your bug report!\r\n\r\nThis issue is caused by attempting to run Augur with Python 2.x. Augur does not support Python 2.x. We will ensure that make install-dev-admin will only use Python 3 in the future, and also make sure that our docs make that more clear.\r\n\r\n	2018-10-12 03:51:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692304	\N	Hi @Nebrethar,\r\n\r\nThanks for letting us know about these issues! I apologize for the delay in our reply - we will make sure to improve our documentation soon. \r\n\r\nIn the meantime, please note that `augur.config.json` is dynamically generated as Augur requests configuration. We will make sure that file has default contents in the future to make this less confusing. When you run augur, that file will be populated with the default values for all of the configurable data sources, including GHTorrent.	2018-10-12 03:56:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692305	\N	These specific issues have been resolved, but the overall experience could still be better. I'm going to close this issue and open another one where we can continue this discussion.	2019-01-26 16:09:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692306	\N	Fixed in [this](https://github.com/chaoss/augur/commit/b9e4ab5e6b84cb761e999f84125b58f9bb4a262f) commit.	2018-09-25 23:50:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692307	\N	Hi @Nebrethar, we only support Python 3, which I suspect is the issue. We will make this more clear in our docs.	2018-09-18 21:41:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692308	\N	@Nebrethar which directions were you using to install?	2018-09-18 21:45:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692309	\N	@howderek \r\nI used Ubuntu installation instructions and Augur installation instructions that followed.\r\n\r\nhttps://github.com/OSSHealth/augur/blob/master/docs/dev-install.md\r\n\r\nI've been running into a few errors, including multiprocessor, that indicate that I am running python 2.7 or so.\r\n\r\nWhen I type python with or without the augur env, I get 3.6 for my py version. I was not able to complete the install today.	2018-09-18 22:43:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692310	\N	Resolved during consultation with @Nebrethar 	2018-10-30 23:33:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692311	\N	I did not mean to bring your commits with me for PR. Not sure how that happened.	2018-09-18 19:25:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692312	\N	Thank you @Nebrethar !	2018-10-12 17:35:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692313	\N	We made significant progress here, and continue to evolve the interface. I am going to close this issue. 	2018-11-11 17:06:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692314	\N	@sgoggins I'm interested in contributing.	2018-12-26 20:13:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277230
1692315	\N	Hi @Sai-Adarsh! Please review our guidelines on [contributing](https://github.com/chaoss/augur/blob/master/CONTRIBUTING.md) and [installation](http://twitter.augurlabs.io/static/docs/dev-guide-toc.html) to get started, and please let us know if you have any questions!	2018-12-27 20:07:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692316	\N	I think this issue should be closed now. I don't think its an "augur thing". 	2019-04-25 02:46:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692317	\N	I don't actually care if we support Python 2.x ... FYI ... it seems that getting inside the augur virtual environment and issuing this command solves the issue: \r\n```\r\nconda install python=3.7\r\n\r\n```	2018-08-29 18:40:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692318	\N	running \r\n```\r\nsudo make install-dev\r\n```\r\nworks ... but I don't think that's what we want.  I know I have seen this before, @howderek ... but on a mac... 	2018-08-29 18:21:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692319	\N	Does running `sudo make install-dev` allow `make dev` and/or `make dev-start` to work?	2018-09-04 20:36:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692320	\N	There does seem to be some glitchyness with a fresh install on Ubuntu. 	2018-09-11 15:53:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692321	\N	Likely will be fixed when #180 is fixed	2018-10-12 04:27:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692322	\N	Normally I have to run two commands:\r\n\r\n`make dev-install-admin`\r\nThis is to install files.\r\n\r\n`sudo make install-dev`\r\nIt seems like all the second does is install augur 0.7.x itself.\r\n\r\nThe command "make dev" starts augur when called after these two commands\r\nChanging all Makefile "pip" commands to "pip3" does not fix, but it is required for installation on Ubuntu 16.04 and 18.04	2018-12-11 17:30:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692323	\N	This seems fixed when I get the default python enviornment set to python 3.x	2018-08-29 18:44:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692324	\N	Does using `sudo make install-dev` give the same issues?	2018-08-29 17:52:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692325	\N	users should not need root permissions to install Augur	2018-09-18 21:46:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692326	\N	I suspect that Anaconda is not being activated properly on `make install-dev` because it looks like Python 2.7 is being used	2018-09-18 21:49:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692327	\N	Solved by bringing back legend and the message is shown on a gray legend label. Also, the "data is missing or unavailable" message/icon only shows if both batch requests fail.	2018-08-26 01:56:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692328	\N	This is being done in dev, not sure on the progress since all the files were automatically converted. We should look over this in our next meeting @ccarterlandis @sgoggins 	2018-10-12 04:26:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692329	\N	@howderek and @ccarterlandis : Status? 	2018-11-11 17:07:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692330	\N	Completed in `dev` [this](https://github.com/chaoss/augur/commit/3aa72adeed85d5a8c3e172349a577257e64f0c51) commit.	2018-12-07 00:07:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692331	\N	Fixed in [this](https://github.com/OSSHealth/augur/commit/efe6df9ee59bf1e3ceafb3f2901d01865504a6c1) commit.	2018-08-17 19:43:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692332	\N	Made it so "make docs" activates conda for you like the other makefile commands.	2018-08-18 20:10:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692355	\N	~~@howderek IIRC, this endpoint was removed, right? Is it coming back?~~\r\n\r\nWait, I think that was `changes_by_author`. Please disregard this comment if so.	2018-08-26 03:15:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692357	\N	Due to the fact that browsers don't like when you put a URL inside a URL (for obvious reasons), this endpoint will no longer be able to be used like `git/changes_by_author/github.com/twitter/twemoji/`. Instead, use the base64 encoding of the URL and pass it as the `repo_base_url` query parameter, like so: `git/changes_by_author/?repo_url_base=Z2l0aHViLmNvbS90d2l0dGVyL3R3ZW1vamk=` (which is `twitter/twemoji`).	2018-09-11 22:33:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1693683	\N	@GeorgLink @jgbarah 	2019-04-05 05:24:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692333	\N	I've been looking into this, and I'm not sure exactly what is going on here. I *think* it has something to do with GHTorrent, as opposed to us.\r\n\r\nLooking at the database, for `twitter/finagle` (id `1372`) and user `cacoco` (id `7875`), running the following query\r\n```SQL\r\nSELECT *\r\nFROM commits\r\nWHERE project_id = 1372\r\nAND committer_id = 7875\r\n```\r\nshould give us all of `cacoco`'s commits to `twitter/finagle`. According to the GitHub API, there should be 76 of them. Instead, I get the following 2 results:\r\n\r\n<img width="708" alt="screen shot 2018-08-28 at 3 21 55 pm" src="https://user-images.githubusercontent.com/31522931/44748808-4dcffe00-aad6-11e8-953a-3f971eb2ffdb.png">\r\n\r\nWhen I try to look at both of these commits in the `project_commits` table (which the /`contributors` endpoint is using), for the commit with id `500482921` I get data back, but for the commit with id `500482928` I get nothing.\r\n\r\nOn top of this issue that this table doesn't seem to have all the data it should, it seems GHTorrent is only aware of 2 of `cacoco`'s 76 commits. @sgoggins any ideas?	2018-08-28 20:32:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692334	\N	Note that I just restarted the Twitter instance from today's dev branch today. 	2018-08-28 20:34:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692335	\N	I'm still seeing this issue where `cacoco` only has one commit. Could the GHTorrent database need updating?	2018-08-28 20:37:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692336	\N	@ccarterlandis : Try a hard refresh ... I am looking at this URL: \r\n\r\n``` \r\nhttp://twitter.augurlabs.io/api/unstable/twitter/finagle/contributors\r\n```\r\nand I get a ton of data: \r\n\r\n[{"name":"mosesn","user":132262,"commits":10.0,"issues":25.0,"commit_comments":7.0,"issue_comments":939.0,"pull_requests":0.0,"pull_request_comments":0.0,"total":981.0},{"name":"ICRILBRT","user":1256242,"commits":683.0,"issues":0.0,"commit_comments":0.0,"issue_comments":0.0,"pull_requests":0.0,"pull_request_comments":0.0,"total":683.0},{"name":"mariusaeriksen","user":64320,"commits":254.0,"issues":6.0,"commit_comments":0.0,"issue_comments":192.0,"pull_requests":0.0,"pull_request_comments":0.0,"total":452.0},{"name":"MOLLDYVS","user":11213753,"commits":283.0,"issues":0.0,"commit_comments":0.0,"issue_comments":0.0,"pull_requests":0.0,"pull_request_comments":0.0,"total":283.0},{"name":"QHPUWUNQ","user":14263062,"commits":216.0,"issues":0.0,"commit_comments":0.0,"issue..... (truncated for readability)	2018-08-28 20:40:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692337	\N	@sgoggins that's the data I'm getting as well; however, the issue persists. As you can see by this screencap, `cacoco` still appears to only have one commit. Based on the GitHub API, I don't think that's correct - for this repository, they should have at least 76. Is this a limitation / shortcoming of my knowledge about what data lies in GHTorrent?\r\n<img width="302" alt="screen shot 2018-08-28 at 3 51 21 pm" src="https://user-images.githubusercontent.com/31522931/44750193-56c2ce80-aada-11e8-93f3-41940f58e1ad.png">\r\n	2018-08-28 20:53:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692338	\N	@ccarterlandis : I suspect this is an issue with different intentions behind each commit number. But I think we will work to get to the bottom of this shortly. \r\n	2018-09-11 15:55:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692339	\N	Hello @OrkoHunter,\r\n\r\nI wanted to follow up on your feedback regarding inconsistent data between data sources. We will be implementing a new architecture in the coming months that will allow users to decide which data sources they prefer when multiple data sources can provide a metric. That way, users that care about historical data (for instance, to see commits that were overwritten with a  `git push --force` or rebases) more than parity with the repository could use GHTorrent, while users that want to see one-to-one data with the repositories on GitHub can use the GitHub API.\r\n\r\nThank you again for your feedback! 	2018-10-12 04:13:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692340	\N	Added in commit [05b3f5f](https://github.com/OSSHealth/augur/commit/05b3f5fde22c0bab356b8536a814ab8d6d9e2410).	2018-09-12 02:04:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692341	\N	Hi @OrkoHunter,\r\n\r\n`/:owner/:repo/timeseries/watchers` returns only the **new** watchers in that time period, instead of the **total** number of watchers in that time period. This is why the count goes up and down, and why the number =/=  the total number of watchers. If you want, I can look into adding a gross watchers and a net watchers endpoint.	2018-08-15 00:57:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692342	\N	Oh! Thanks @ccarterlandis for telling me about this. I did not expect the `watchers` endpoint to give the difference. Although that is a helpful metric. I wish it remains, but having the trend of the actual number will be helpful as well. (Not urgent in any way).	2018-08-15 16:43:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692343	\N	@OrkoHunter sure thing! If it's okay with you, I'll mark this as closed. If you want to open an issue detailing the new endpoints you'd like to see, that'd be very helpful! If you're busy, I can do it as well.	2018-08-15 16:48:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692344	\N	Sure, this is closed! I will open an issue shortly.	2018-08-15 16:54:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692345	\N	Ref - #153 	2018-08-15 17:10:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692346	\N	Hi @OrkoHunter, as far as I am aware, this is due to the fact that https://publicwww.com/, which is where we were getting this data from, changed the structure of their website. We were scraping their website manually to find this data, but when they changed the structure, this, unfortunately, meant our scraper did not work anymore (@howderek might know more about why this is happening, I might be incorrect).\r\n\r\nI personally haven't spent any time looking into this; however, if you are wanting to use this endpoint, I would be more than happy to take a look at the endpoint and see what I can do. Thanks for pointing out all the bugs in our API, I'm glad to know someone is keeping us accountable!!	2018-08-14 23:48:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692347	\N	Thank you @ccarterlandis for the response! My internship ends in 2 days, and I am trying to implement as many Augur metrics as I can in the TwitterOSS metrics. :)	2018-08-14 23:51:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692348	\N	Of course! I want to make sure that you can get as much done as possible.	2018-08-15 00:05:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692349	\N	It looks as if publicwww has deprecated their API. As such, we are currently unable to implement this metric and had to deprecate the endpoint, as it was based on the data they provided. Closed, but will continue to search for alternative data sources for this metric.	2018-08-23 00:18:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692350	\N	Are you using the dev branch or master branch?	2018-08-15 00:08:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692351	\N	Hi @howderek! I believe @sgoggins can help us tell the branch used to deploy http://twitter.augurlabs.io/api/unstable \r\nLet me ask on the TwitterOSS slack.	2018-08-15 00:24:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692358	\N	Yes it has to do with the language of the repository because it depends on the package managers providing those metrics. Right now, we are getting metrics for Ruby Gems and NPM packages.	2018-08-15 00:09:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692359	\N	Hi @howderek! That makes a lot of sense. Even GitHub has not implemented this feature for other languages.\r\n\r\nThanks for answering!	2018-08-15 00:28:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692360	\N	Same issues with `:/:owner/:repo/watchers`\r\n\r\nBoth are the only two APIs under [`Activity` section](https://osshealth.github.io/augur/api/index.html#api-Experimental-TotalContributions)	2018-08-14 22:26:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692361	\N	Same issue with `:owner/:repo/timeseries/community_age`\r\n\r\nExample: http://twitter.augurlabs.io/api/unstable/twitter/finatra/timeseries/community_age\r\nhttp://twitter.augurlabs.io/api/unstable/twitter/twemoji/timeseries/community_age\r\n	2018-08-14 22:47:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692362	\N	Same issue with `/:owner/:repo/timeseries/contributions`\r\n\r\nExamples -\r\nhttp://twitter.augurlabs.io/api/unstable/twitter/finagle/timeseries/contributions\r\nhttp://twitter.augurlabs.io/api/unstable/twitter/twemoji/timeseries/contributions	2018-08-14 22:55:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692363	\N	Same issue with `/:owner/:repo/timeseries/project_age`\r\n\r\nExamples -\r\nhttp://twitter.augurlabs.io/api/unstable/twitter/twemoji/timeseries/project_age\r\nhttp://twitter.augurlabs.io/api/unstable/twitter/finagle/timeseries/project_age	2018-08-14 23:48:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692364	\N	Same issue with `/:owner/:repo/timeseries/pulls/acceptance_rate`\r\n\r\nExamples-\r\nhttp://twitter.augurlabs.io/api/unstable/twitter/finagle/timeseries/pulls/acceptance_rate\r\nhttp://twitter.augurlabs.io/api/unstable/rails/rails/timeseries/pulls/acceptance_rate	2018-08-14 23:59:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692365	\N	Hi @OrkoHunter,\r\n\r\nLooking at our latest dev build, most of these metrics have been converted into a timeseries if they weren't already, and if they were a timeseries metric they have been converted into a non-timeseries metric (if that makes sense). My guess is that most of these did not get updated or tested correctly before they got deployed since we don't have frontend visualizations for most of these metrics.\r\n\r\nAs a result, I figured that `/:owner/:repo/watchers` should actually be `/:owner/:repo/timeseries/watchers`. The others, I'm not sure about, but I will look into them tonight for you! Sorry about all these broken endpoints!	2018-08-15 00:04:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692366	\N	Bringing the `watchers` metric to timeseries is a fantastic feature. Thanks for that! (Marking it solved)\r\n\r\nThere is absolutely no need to be sorry, thank you all for working on this wonderful project. :)	2018-08-15 00:13:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692367	\N	Our documentation was out of date - sorry about this! `/:owner/:repo/timeseries/community_age` and `/:owner/:repo/timeseries/project_age` do appear to be broken (we are working on it!), and `/:owner/:repo/timeseries/pulls/acceptance_rate` has been deprecated in favor of `/:owner/:repo/timeseries/community_engagement`\r\n\r\nThank you for your reports!\r\n\r\nThe documentation has been updated in e22d558516f2515afa16c054a504ddd70f52a347	2018-08-15 00:21:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692368	\N	That's for the update on this @howderek!	2018-08-15 00:32:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692369	\N	Documentation should be up to date on this now - if there are still any broken endpoints, feel free to reopen.	2018-09-09 17:45:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692370	\N	Hi @OrkoHunter! Thanks for the concern. As far as I can tell, returning those three users (`QMHGHMYU`, `QHPUWUNQ`, `UEKURALX`) is expected behavior. It would appear that those three are "fake" users, as you can see in these screencaps from the GHTorrent database. \r\n\r\n<img width="1256" alt="screen shot 2018-08-14 at 5 16 18 pm" src="https://user-images.githubusercontent.com/31522931/44121712-9c659e80-9fe6-11e8-8a9f-87d6819e4cf1.png">\r\n<img width="1255" alt="screen shot 2018-08-14 at 5 20 32 pm" src="https://user-images.githubusercontent.com/31522931/44121713-9c659e80-9fe6-11e8-9a33-924894ad643a.png">\r\n<img width="1257" alt="screen shot 2018-08-14 at 5 20 50 pm" src="https://user-images.githubusercontent.com/31522931/44121714-9c659e80-9fe6-11e8-986b-1f3906037f02.png">\r\n\r\nAnd as you also might be able to discern from the screencaps, the `user` parameter is that user's ID in the database.\r\n\r\nHope that helps! Let me know if you have any other questions.	2018-08-14 22:33:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692371	\N	Hi @ccarterlandis! Thank you for your quick response. This is helpful.\r\n\r\nSelf note: http://ghtorrent.org/relational.html about `fake` users.	2018-08-14 22:38:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277177
1692372	\N	I think the core logics are defined here: \r\nhttps://github.com/augurlabs/metrics/blob/wg-gmd/activity-metrics/contribution-acceptance.md	2018-08-11 17:27:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692373	\N	The metrics definitions in CHAOSS are now significantly more evolved, and given our new architecture I think this can be closed. 	2019-04-25 02:47:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692374	\N	There should not be a requirements.txt in augur/	2018-08-09 22:02:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692375	\N	This seems to be related to me doing something stupid. Not sure how it got there, but its **gone**!	2018-08-09 22:04:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692376	\N	Resolved.	2018-08-08 22:19:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692377	\N	I've been toying with the idea of making the metrics-status page have tabs in the same way that the metrics do already. Or, having them be drop-down menus, or possibly have the results be filterable by varying fields (i.e. by group or source). Either way, I definitely want to change the format - I'll get started on this as soon as I finish refactoring the endpoint.	2018-08-07 17:40:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692378	\N	Added to `dev` in [this](https://github.com/OSSHealth/augur/commit/97f09e6be5467850df0661d993ebfce832c52526) commit.	2018-08-12 21:10:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692379	\N	<img width="991" alt="screen shot 2018-08-12 at 7 36 00 pm" src="https://user-images.githubusercontent.com/31522931/44008261-03f1a840-9e67-11e8-882d-210998517336.png">\r\nFor me, twitter/twemoji is returning data. Is this the repo you were meaning?	2018-08-13 00:37:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692380	\N	Bump ^ @sgoggins 	2018-08-25 03:02:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692410	\N	looks good to me. 	2019-06-30 10:39:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692551	\N	@dlumbrer was able to use GrimoireLab with OpenDistro. Probably he can give us more info.	2019-10-12 15:29:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692381	\N	This was fixed by Derek. \n\nSean P. Goggins\n(816) 368-1364\nhttp://www.seangoggins.net\nvisit: http://www.sociotech.net\nvisit: http://www.datafactories.org \n\n"I force people to have coffee with me, just because I don't trust that a friendship can be maintained without any other senses besides a computer or cellphone screen.‚Äù\n‚Äî John Cusack\n\n\nOn Aug 24, 2018, at 22:02, Carter Landis <notifications@github.com> wrote:\n\nBump ^ @sgoggins\n\n‚Äî\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub, or mute the thread.	2018-08-25 14:14:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692382	\N	Gotcha. Closed	2018-08-26 03:13:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692383	\N	I take it back on the entry of a value.  It does have an effect if I hit enter. \r\n\r\nBut the default, which I suspect remains at 180, is still "empty" to the user's view. 	2018-08-04 22:08:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692384	\N	Fixed by using the "value" attribute rather than having a placeholder. Will be pushed to dev soon.	2018-08-05 06:26:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692385	\N	Chrome understands when hex values are given without the "#" symbol, Firefox does not so it did not know what color to paint the lines, I just fixed this and will push soon.	2018-08-04 20:58:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692386	\N	Where data is not present in GHTorrent for cloned repos, there is now an indication of data missing instead of just nothing. 	2018-08-07 10:38:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692387	\N	Yes. Yes. 1,000 times, yes, @ccarterlandis ü•á 	2018-08-04 16:25:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692388	\N	Added loading animation and error symbol after a 10 second timeout of no data being loaded.	2018-08-05 07:47:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692389	\N	I can help with this!	2018-08-04 04:40:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277231
1692390	\N	@howderek is there anything else we need to do for this?	2018-08-17 00:30:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692391	\N	Bump ^ @howderek 	2018-08-26 03:17:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692392	\N	Hello @jdbohrman I apologize for the late reply - we have been working hard on getting things ready for a release.\r\n\r\nI am totally open when it comes to what the Vagrantfile looks like, but ideally a user would be able to "vagrant up" and have a functional version of Augur except for the data sources that require API Keys, like GitHub. I think the hard part of this will be creating a test dataset from GHTorrent and a Facade database. Let us know if that is something you are interested in, and we can get you access to our database. I would also be happy to accept a pull request that just gives a running version of Augur without any of the data sources working.\r\n\r\nThanks so much for your willingness to contribute, and let us know if there is anything we can do to help!	2018-08-27 22:00:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692393	\N	Vagrant integration released in [v0.9.0](https://github.com/chaoss/augur/releases/tag/0.9.0).	2019-02-28 20:50:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692394	\N	@sgoggins I am having trouble reproducing. For me, http://twitter.augurlabs.io/?repo=rails+rails loads not only the GMD data, but all data just fine. Is this what you mean by 'main page'?	2018-07-02 00:55:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692395	\N	Maybe I was having connection issues yesterday or it was acting up. Close it!\n\nSean \n\n> On Jul 1, 2018, at 7:55 PM, Carter Landis <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> @sgoggins <https://github.com/sgoggins> I am having trouble reproducing. For me, http://twitter.augurlabs.io/?repo=rails+rails <http://twitter.augurlabs.io/?repo=rails+rails> loads not only the GMD data, but all data just fine. Is this what you mean by 'main page'?\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/OSSHealth/augur/issues/132#issuecomment-401645868>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAXLx-ou2kj2dQ91dxzhm2Q0Oz69x-KWks5uCW-ZgaJpZM4U-Th5>.\n> \n\n	2018-07-02 00:56:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692396	\N	@sgoggins  what do we name this?	2019-07-19 07:12:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692397	\N	Implemented in #330 	2019-07-22 03:56:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692398	\N	@sgoggins Are you okay with closing this issue?	2019-09-03 13:06:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692399	\N	@sgoggins : I will finish the integrated work tomorrow and write an instructor. I took a day to learn how housekeeper and broker work. 	2019-07-15 14:42:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692400	\N	@sgoggins : I have added a readme.	2019-07-16 11:01:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692401	\N	@gabe-heim : Could you review the typescript part of the pull request? I want to make sure what you are doing right now is coordinated with this PR. 	2019-07-16 13:05:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692402	\N	Looks great and very well thought out thank you Bingwen	2019-07-16 16:26:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692403	\N	@sgoggins updated the readme	2019-07-15 09:53:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692404	\N	Maybe this is something @ortonpaul could jump back in with? Just a thought. Never interpret anything I say as an order. We'd all be subjects of the crown if people started doing that. üòÇ	2019-07-04 20:05:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692405	\N	@sgoggins there is a small inconsistency in the naming, specifically that all the node_id columns end in `node_id` while the one for `issue_assignees` only ends in `node`. Small detail that doesn't matter too much but thought I'd mention. Updates to include the new columns with their current names is added in e32e97e, while the columns for `issue_msg_ref` were added in a previous commit. We do not have any worker able to populate the `commit_comment_ref` table so I could not add this but I will close the issue since we will add these columns when this model is able to be filled.	2019-07-16 01:37:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692406	\N	The API additions and test fine tuning all look good to me.  I want @gabe-heim to take a look at the worker before I merge this, must because he has a much deeper understanding of that archticture.  ILGTM. ... but lets double check. 	2019-07-04 19:43:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692407	\N	I'm adding a few metrics to this PR:\r\n- Stargazers\r\n- Watchers	2019-07-05 10:10:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692408	\N	All looks good to me	2019-07-06 17:07:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692409	\N	Oops, I forgot to mark it as a draft pull request üòÖ	2019-07-03 14:36:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692412	\N	@sgoggins , this looks good to me, just wondering if we want to merge it into stable-dev for demos instead? Not sure how many of these commits were in @bing0n3 's PR after this one (#311 ), which was merged into stable-dev.	2019-07-02 14:48:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692413	\N	Wanting to Merge Parth's edits, which are merged into dev into dev-demo. 	2019-06-28 20:04:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692414	\N	I want to merge this one first, before Parth's. Changes should be fewer then. 	2019-06-28 20:05:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692415	\N	@sgoggins \r\nThis option needs more visibility; it is not included in the dev install doc. The master install doc does not provide enough exposure to this option either.	2019-09-03 13:13:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692416	\N	Hi, I am new to this project and would like to contribute to it. I am trying to set up this project "Augur" on my local machine. So I followed the instructions and am posting this comment.\r\nI am currently a student.\r\nI won't be using it anywhere else other than Augur.\r\n@sgoggins 	2019-10-04 06:42:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277232
1692417	\N	@gabe-heim : does the batch API implementation you did cover any of this? \r\nAlso, I notice that the "total lines of code" on the line chart never changes no matter where you hover. : http://mudcats.augurlabs.io:3333/single/github.com%2Fropensci%2Fplotly/git# 	2019-06-23 06:52:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692418	\N	@ccarterlandis and @gabe-heim : THis looks like reasonable VUE and .jS optimizations. We don't have tests for the front end (that's hard, and most web apps have little) .. but the travis build fails on a missing library `zmq` ... ? @bing0n3 : Is this something added somewhere else in a different pull request that you know of that needss to be added to requirements.txt ? 	2019-06-25 05:07:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692419	\N	@sgoggins This [commit](https://github.com/chaoss/augur/commit/95d3f1fd36a802f6fad6a4559cd27db6b8cdff02) by Gabe imported the library  `zmq`.  I guess we need to add the library into `requirements.txt`	2019-06-25 05:14:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692420	\N	This looks like it will reduce API calls and not change how we are getting data from the API. 	2019-06-25 06:00:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692421	\N	@parthsharma2 : I think we should pull the primary github declared language.  The badging app does not have very good coverage. Can you make that change? 	2019-06-20 13:04:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692422	\N	I guess to do that, we would need to add something to pull that data placed into the GitHub worker. Since @gabe-heim is actively debugging that worker right now, we should get his input.  Do you know what API gets called to pull the primary language? \r\n\r\nAlternately, I have a version of the database for which I've done a full language analysis using the SCC project ... Lets see what @gabe-heim says about getting that data from the GitHub endpoint. Here's the current augur_github_worker: https://github.com/chaoss/augur/blob/dev/workers/augur_worker_github/augur_worker_github/worker.py ... Take a look and see what you think.  \r\n\r\nI do not recall if we intend to add additional endpoints from GitHub to the same worker, or have separate workers. My *guess* is that all the "data anomaly handling" logic Gabe's written around issues is a lot more complex than the logic required for pulling the GitHub primary language, since I don't think it requires corresponding API calls for x_events, x_comments or contributors. \r\n\r\n	2019-06-20 13:05:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692423	\N	@sgoggins `api.github.com/repos/:owner/:repo` endpoint can be used to get the primary language, it can also be used to get data (such as forks, stars, license, etc.) for the repo_info table. If you want to get all the languages you can use `api.github.com/repos/:owner/:repo/languages`	2019-06-20 13:23:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692424	\N	@sgoggins I've made the changes to the 'languages' metric implementation. I used git rebase to edit the particular commit to make changes. I've somehow become a co-author of certain commits although locally none of those commits mention me as an author. Any way to solve this :confused: @gabe-heim @sgoggins ?\r\n\r\n**EDIT**: fixed it	2019-06-20 14:09:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692425	\N	Btw this can definitely be added to the github worker, it would just be in a separate method of the worker and probably be viewed as a different "model" that the worker can fulfill	2019-06-20 15:46:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692426	\N	@sgoggins @gabe-heim maybe I can give it a try?	2019-06-20 16:24:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692427	\N	@parthsharma2 Definitely! Go for it	2019-06-20 16:43:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692428	\N	Depending on what @sgoggins wants	2019-06-20 16:44:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692429	\N	Looks good to me, thank you!	2019-06-20 15:42:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692430	\N	This is very helpful, thank you Bingwen	2019-06-19 17:29:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692431	\N	Thank you Parth!	2019-06-18 20:18:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692432	\N	Amazing! Thank you Bingwen	2019-06-18 20:06:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692433	\N	Live version is on neko----.al.io	2019-06-08 12:08:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692434	\N	@sgoggins I think port 5000 is already in use. Try changing the port number in `augur.config.json` in the `Server` section. Or you can try killing the process running on port 5000. This link might be helpful https://stackoverflow.com/questions/9346211/how-to-kill-a-process-on-a-port-on-ubuntu	2019-06-08 12:43:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692435	\N	To add to this issue, there is a python exception being caused due to a merge conflict marker in `datasources/augur_db/routes.py` https://github.com/chaoss/augur/blob/a4d8bf3a403a93c2343f21d47addf993c2c2d855/augur/datasources/augur_db/routes.py#L26	2019-06-08 12:47:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692436	\N	@parthsharma2 : That was it ... I fixed the conflict ... I had some other issues going on with my config for the database ... So, i finally got to this actual issue.  Thanks!	2019-06-09 14:35:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692437	\N	@bing0n3 and @parthsharma2 : Can you help us figure out which parts of the conflicts to keep. I think the augur_db.py looks pretty straightforward, but the differences in routes.py are more difficult for me to figure out. 	2019-06-06 13:48:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692438	\N	@sgoggins Done. Check it. 	2019-06-06 14:44:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1693761	\N	You are welcome üëç 	2019-03-29 14:52:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692439	\N	@bing0n3 [this commit](https://github.com/chaoss/augur/pull/292/commits/445ff606882b30b047251877d98cc05a0d2a26cf) seems to have changed some of the formatting of docstrings in the routes file [i.e. a newline after `@apiDesciption` to separate the `@apiParam`]. I'm not sure if it affects the automated creation of docs :sweat_smile:. Otherwise it all seems fine to me @sgoggins 	2019-06-08 16:00:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692440	\N	@parthsharma2 : I generated an apidoc json, it looks good. 	2019-06-09 14:45:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692441	\N	@sgoggins the `routes.py` file seems all good	2019-06-09 15:59:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692442	\N	Thank you Bingwen!	2019-05-31 17:27:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692443	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-05-29 18:49:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1692444	\N	Congrats on merging your first pull request! üéâ \nWe here at Augur are proud of you and we can't wait see what you'll do next!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-05-29 18:55:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277138
1692445	\N	Looks great, thanks Parth!	2019-05-31 16:39:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692446	\N	Looks good! Thank you Parth	2019-05-28 19:09:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692447	\N	@ccarterlandis : We need update the tests to have this Jupyter version: \r\n\r\n ipykernel==5.5.1	2019-05-31 18:30:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692448	\N	Hello @Etoebben, thanks for your report! \r\n\r\nWhile there should not be duplicates of `augur-group26/frontend/app/styles/augur.styl` and `augur-group26/frontend/app/styles/ghdata.styl`, our web compiler framework Brunch takes care of compiling all of our stylesheets into one file at the very end. These duplicate files do not cause issues on the front-end, but we can see how it might be unclear which file to edit. We will remove ghdata.styl once we've got it all migrated into augur.styl.\r\n\r\nI'm not sure what you mean by "the style sheets conflict and cause the page to crash." Even if the duplicate styles were loaded by the user, browsers just override previous styles with new ones. Can you give us an example of a 'conflicting' style that causes the page to crash so that we can see the behavior?\r\n\r\nAlso, we recommend developing off of the master branch. The `dev` branch is very fast-paced and often introduces breaking changes.	2019-05-13 23:00:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692449	\N	Can we merge this into `hotfix` and then into `master`? I'd like to keep the flow of features we've been using (`hotfix` -> `master`) in place, as it'll help make sure that we keep parity among our branches.	2019-05-06 18:56:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692450	\N	I could do that, yes. :) 	2019-05-07 16:12:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692451	\N	I broke the API tests and the Python tests ... will change those. 	2019-05-03 18:20:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692452	\N	I've tested this out pretty thoroughly at this point.  I think its good to go. 	2019-05-03 18:15:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692453	\N	I think eliminating the GHTorrent Schema driven data from the evolution, activity and experimental tabs, combined with only showing graphs with data behind them in a "GHTorrent" part of the new UI will take care of this issue. 	2019-06-23 06:54:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692454	\N	The new front end addresses and solves this issue IMO	2019-09-04 16:12:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692455	\N	The charts referenced are not on our new front end right now, once we add them we will annotate them differently	2019-10-13 21:47:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692456	\N	fixed in pull request #273 	2019-04-26 18:41:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692457	\N	fixed in pull request #273 	2019-04-26 18:41:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692458	\N	I think I am not going to mess with the conflicts. :) Merge when ready. 	2019-04-25 02:42:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692459	\N	`5555` is not a port Augur uses. What do `localhost:5000/api/unstable/` and `localhost:3333` display when running the `make dev` command? @Nebrethar 	2019-04-21 18:08:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692460	\N	None of those work either; I had `5555` in my config up to now because that's the only port I could get brunch to work on previously. I also tried changing to these ports in the config and no luck. Pictures of these are at the bottom.\r\n\r\nThis is a fresh install from master. \r\nI've also run into issues with the brunch build in the past... and they seem to trail back to NPM install\r\n\r\n`localhost:5000`\r\n![image](https://user-images.githubusercontent.com/34951354/56475499-afbaea80-644e-11e9-857d-dc261fd5aa31.png)\r\n\r\n\r\n`localhost:5000/api/unstable/`\r\n![image](https://user-images.githubusercontent.com/34951354/56475505-bb0e1600-644e-11e9-9b23-320f7832ae6d.png)\r\n\r\n`localhost:3333`\r\n![image](https://user-images.githubusercontent.com/34951354/56475523-f7417680-644e-11e9-87be-80290ecd5501.png)\r\n\r\n\r\n	2019-04-21 21:07:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692461	\N	Semi-related, I have had an issue where the frontend only displays as a blank page and it seemed to fix itself after a few hours of messing with it. Not sure what I did for that one though.	2019-04-21 21:12:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692462	\N	I figured out after letting the command `sudo make-dev` run for about four hours that it eventually compiled. Brunch had a note about installing missing NPM packages that I only saw after it was finished. \r\n\r\nMy guess of the issue here is that brunch needed to get NPM packages that `sudo make install-dev` did not cover (a lot of them, apparently). That's my only idea on why it took 4 hours to compile. The dependency tree was massive, too.\r\n\r\nEDIT: Restarting the server went back to a 404	2019-04-21 21:33:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692463	\N	I have not been able to replicate this error. Brunch does have to install a good amount of packages, but usually not enough that it should take 4 hours. Can you post the `frontend.log` file from the `logs/` directory after running `make dev`? Additionally, is it possible that something else on your system is using port `3333`? The backend is working just fine, it seems to be a frontend error of some sort which leads me to believe that @gabe-heim might be able to provide more direction on this than I can.	2019-04-23 19:19:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692464	\N	I figured this out with @gabe-heim just recently. No matter what my server was set to, I've been running into a lot of problems using the port in augur.config.json.\r\n\r\nFor example, if I have port 5555 or 5000 in my augur.config.json and go to that port on localhost, it will work sometimes on that port but otherwise provide weird bugs and errors.\r\n\r\nGave helped me figure out that I need to set the port to 5555 and navigate to localhost:3333 and it worked. I haven't gotten nearly as many errors.	2019-04-25 16:33:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692465	\N	Since the lines_changed_by_week function is for the facade datasource, you will actually have to use the GitEndpoint() function rather than Timeseries(). The dynamic line chart's source should be 'linesChangedByWeek' in your example (the second parameter). And make sure the 3rd parameter in the Timeseries()/GitEndpoint() functions match exactly the name of the python function (ie if the function name in datasources/facade/facade.py is 'lines_changed_by_week', then the function you call in AugurApi.js should be 'GitEndpoint(repo, 'linesChangedByWeek', 'lines_changed_by_week')'. Feel free to reopen if this does not solve your issue.	2019-04-14 18:51:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692466	\N	I know why that issue occurs, but currently I don't know of a fix. During the provisioning process, the `vagrant` process (for whatever reason) doesn't recognize the use of `pip install` flags. It's super weird and I have zero idea why it happens, but it's the reason that after you spin up the vagrant box, you have to do `$AUGUR_PIP install --upgrade .` yourself (as documented in the [README.md](https://github.com/chaoss/augur#tldr)). Doing this will resolve the `pkg_resources.ContextualVersionConflict` error. While this isn't an ideal fix, we currently don't have the bandwidth to try and diagnose what seems to be a problem on Vagrant's end.\r\n\r\nAs far as for the 3 versions of Python are concerned, both Python 2 and 3.5 come already installed on the Ubuntu version. However, we do our development on version 3.7, so that's what get's used in all the `make` commands, as well as in `$AUGUR_PIP` and $AUGUR_PYTHON` for doing other Python things at the command line.	2019-04-12 13:48:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692467	\N	Thanks @bing0n3 !	2019-04-08 12:02:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692468	\N	@GeorgLink my pleasure	2019-04-09 13:43:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692469	\N	@gabe-heim what branch is this? I'm currently in `tre` branch and the charts are updating just fine... I did notice that when I quickly changed from `rails/rails` to `akka/akka`, the charts didn't begin to request the `akka/akka` charts until after the `rails/rails` were fully loaded in, but as soon as it finished the request for pulling the `rails/rails` chart in, it quickly grabbed the `akka/akka` charts, without needing a page refresh or anything	2019-04-07 21:38:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692470	\N	Hey @bing0n3, thanks for catching this typo. I switched the base to point to `hotfix`, as that's where we do all our releases from. I'll take a look at your other PR soon!	2019-04-01 14:04:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692471	\N	I tried to fix the issue. By my understanding, it seems like it can be fixed by changing the attribute "labels" in [DynamicLineChart.vue](https://github.com/chaoss/augur/blob/hotfix/frontend/app/components/charts/DynamicLineChart.vue) line 172 from `!this.showDetail`  to `this.showDetail`. \r\n\r\nOriginal: \r\nhttps://github.com/chaoss/augur/blob/5def6b4799febf91279d807a56fb281fb81fc7af/frontend/app/components/charts/DynamicLineChart.vue#L167-L173\r\n\r\n[Fix](https://github.com/bing0n3/augur/commit/bbb9f7082398343b8c535ded41b6125f06f977a3#diff-e5d0efa0257f40e72c389fe71471bcc8):\r\n```\r\n"axis": {\t                       \r\n    "labels": this.showDetail,\r\n    "format": "%b %Y",\r\n    "title": " "\r\n}\r\n```\r\n\r\nScreenshot:\r\n\r\n<img width="568" alt="image" src="https://user-images.githubusercontent.com/15957393/55675457-ce3ab680-5890-11e9-87d6-c9e945cb4e62.png">\r\n\r\n\r\n If it make sense, I will try to create a pull request. 	2019-04-06 21:34:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692472	\N	The screenshot looks promising :+1	2019-04-07 12:59:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692473	\N	@bing0n3 +1 from me too. Good catch! Feel free to create a PR.	2019-04-07 16:48:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692474	\N	I will create a PR soon. 	2019-04-07 17:00:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1692475	\N	We have a pull request approved and ready to merge, but a few merge conflicts to resolve over the next couple days. 	2019-04-25 02:43:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692476	\N	Fixed in pull request #270 	2019-04-26 18:42:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692477	\N	@ccarterlandis : It seems like there is an issue with database connectivity when I look at the Travis build. I just reran it. Can you assess wha'ts going on? I think its probably one thing in all cases. 	2019-04-02 14:44:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692478	\N	@sgoggins AFAIK currently the Travis Build is configured to use Environment Variables rather than the values from the config files. This results in the following\r\n\r\n> Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.\r\n> Pull requests sent from forked repositories do not have access to encrypted variables or data.\r\nhttps://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions	2019-04-02 15:28:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692479	\N	I think the main issues why the Travis CI build fails is environment variables. Since the database configuration is stored as environment variables and my pull request is external (i.e. not from the same repository or from someone who has write access to the repo), Augur isn't able to read the environment variables and connect to the database. @ccarterlandis @sgoggins could you try running the Travis Build using the `augur.config.json` to load the database config instead of environment variables? 	2019-04-03 11:15:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692480	\N	@parthsharma2 regarding the Travis build problems: the `augur.config.json` is not checked into Git, meaning that Travis will not be able to use it. We also can't unencrypt the variables, as we don't want to expose our credentials to the public! As such, I don't see a way around this issue for now, but I do very much want to investigate this further and find a solution.	2019-04-03 14:40:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692484	\N	@sgoggins @tretrue the Vagrantfile should not have been deleted, I'm assuming that's erroneous but it needs to be restored before this can be merged. Additionally, the Travis CI builds are failing because `setup.py` got renamed as per my review above.\r\n\r\n@tretrue any idea what that `.css.css` file is? I don't think that's supposed to be there either.	2019-03-26 14:28:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692485	\N	@ccarterlandis i renamed setup and deleted the css.css, must have been a duplicate file. where was the Vagrantfile supposed to be located? i can get it back in there real quick.\r\n	2019-03-26 15:56:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692486	\N	@tretrue thanks for making those changes. Have you tested the endpoints?	2019-03-26 16:08:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692487	\N	@ccarterlandis : @howderek said he would look them over because of how much I had to change up the 'facade_cli' file (to get rid of the cursor and what not). I was planning on testing after getting his okay because thats what he suggested i do.	2019-03-26 16:14:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692488	\N	@tretrue okay. I think it would be a good idea for you to test them yourself too and try to diagnose any errors that come up. Start by running `make test-ds SOURCE=facade` and trying to fix the errors you can, I've already found some that aren't related to the implementation changes in `facade_cli.py`.	2019-03-26 16:29:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692489	\N	@ccarterlandis okay sounds good thank you. I have some things going on today, but i should be able to knock out a good chunk of it!	2019-03-26 16:41:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692490	\N	@tretrue : Can you update the status on this? \r\nHave  you tried it yourself? \r\nWould you like to chat about this? 	2019-03-29 16:59:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692491	\N	@tretrue : can you provide a summary of what's in this pull request in terms of functionality that's added and what remains to be done? 	2019-03-29 17:05:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692492	\N	@sgoggins : the status is that it is still needed to be reviewed by Derek. I have fixed all the bugs that should be associated with the files, the big thing is that i had to restructure all the cli functions to get rid of the `cursor` parameter (Derek's idea). Derek suggested that when i am done restructuring to just make a pull request so he can look it over. I haven't really had time over break after implementing to fully try them out, and I was mainly waiting on Derek to check it out, because it probably has some (very minor but crucial) mistakes that he'd be able to very quickly point out for me to fix. I will be back home this Sunday to test them regardless of whether or not Derek reached this, but he told me not really to worry and that there wasn't a huge rush on his end.\r\n\r\nThe functionality of this request is enabling the utilization of the facade cli functions, and provides routes for said functions.	2019-03-29 18:02:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692493	\N	How is the `facade_cli` package installed?	2019-03-31 15:30:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692494	\N	@howderek : Right now I think @tretrue is including it as a file in one of the augur directories. In the long run I think we can pip install facade. I have the ok in principle from @brianwarner to license facade under MIT (though I think our worker architecture will make this immaterial). Right now we are doing POC work. I have a substantially optimized version of facade's worker that I have been developing, so I think Tre and I can circle back together next week. 	2019-03-31 15:52:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692495	\N	In that case, the `facade_cli.py` file should be included in one of these commits\r\n\r\nEdit: ope I see it now, lemme test	2019-03-31 16:43:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692496	\N	@tretrue rather than modify facade_cli.py, we should move the functions into facade.py	2019-03-31 16:48:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277111
1692497	\N	@howderek : Okay, ill get started on getting them over to `facade.py` as soon as I can! 	2019-03-31 17:25:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692498	\N	@sgoggins am I good to merge this?	2019-03-26 15:27:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692499	\N	Merging this into `hotfix` to be released with other bug fixes in v0.9.3. Thanks for catching this and finding the fix @alexcourouble, much appreciated!	2019-03-15 03:39:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692500	\N	What is this? @sgoggins 	2019-04-01 23:55:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692501	\N	See [this](https://github.com/chaoss/augur/pull/249) PR.	2019-04-05 23:02:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692502	\N	@ccarterlandis made the requested changes.	2019-03-11 14:56:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1692503	\N	@gabe-heim not to be that guy, but to be that guy, but would you be able to reword your commit messages for consistency? \r\n\r\nIn their current form, I don't know what 'new use case metrics vizs' means- did you fully implement them, just plan them out, are they half done, or what? Similarly, what are the "tweaks" you made to the use case metrics and the "improvements" to MainControls.vue? I'm sure you know what they are in your head, but I don't know what they are, and I can't read the source code well enough to figure that out at a glance.\r\n\r\nI hope I'm not overstepping my bounds here, it just helps me and the rest of the team have clearer visibility of what you're doing (and we very much appreciate what you're doing). [This](https://chris.beams.io/posts/git-commit/) a good read about how to write a good commit message and why it's important.	2019-03-10 14:45:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692504	\N	Note: you might not be able to edit the second last one, `bef3b6e`. You can edit the last one with `git commit --amend "<your commit message>"` and then `git push --force`.	2019-03-10 14:47:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692505	\N	Merged on the command line as of [this](https://github.com/chaoss/augur/commit/71652ff8d9540d3a8fdc97eddc9ded31be974815) commit.	2019-04-05 23:01:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692506	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Release v0.9.1](https://trello.com/c/5qvyPIaY/22-release-v091)	2019-03-07 21:32:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692507	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Review PR for release v0.9.1](https://trello.com/c/DW8Lmgbw/35-review-pr-for-release-v091)	2019-03-11 23:30:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692508	\N	Fixed in `hotfix` as of [this](https://github.com/chaoss/augur/pull/248/commits/d89eea95173fa134b4ee8f88e429ee0c8ba9b58c) commit.	2019-03-07 20:13:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1693283	\N	Thanks for the reviews @valeriocos .	2019-08-17 13:34:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692509	\N	On a separate machine I got the same output: \r\n```python\r\nvagrant@augur:/vagrant/augur$ augur\r\nTraceback (most recent call last):\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 635, in _build_master\r\n    ws.require(__requires__)\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 943, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 834, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (requests 2.9.1 (/usr/lib/python3/dist-packages), Requirement.parse('requests>=2.14.0'), {'PyGithub'})\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File "/usr/local/bin/augur", line 5, in <module>\r\n    from pkg_resources import load_entry_point\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2927, in <module>\r\n    @_call_aside\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2913, in _call_aside\r\n    f(*args, **kwargs)\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2940, in _initialize_master_working_set\r\n    working_set = WorkingSet._build_master()\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 637, in _build_master\r\n    return cls._build_from_requirements(__requires__)\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 650, in _build_from_requirements\r\n    dists = ws.resolve(reqs, Environment())\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 834, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (requests 2.9.1 (/usr/lib/python3/dist-packages), Requirement.parse('requests>=2.14.0'), {'PyGithub'})\r\nvagrant@augur:/vagrant/augur$ \r\n```	2019-03-07 13:46:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692510	\N	actually forgot to `sudo su - ` first on that computer, but the result is the same either way\r\n```python\r\nvagrant@augur:/vagrant/augur$ sudo su -\r\nroot@augur:~# ls\r\nvagrant-data\r\nroot@augur:~# cd /vagrant/augur\r\nroot@augur:/vagrant/augur# augur\r\nTraceback (most recent call last):\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 635, in _build_master\r\n    ws.require(__requires__)\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 943, in require\r\n    needed = self.resolve(parse_requirements(requirements))\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 834, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (requests 2.9.1 (/usr/lib/python3/dist-packages), Requirement.parse('requests>=2.14.0'), {'PyGithub'})\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File "/usr/local/bin/augur", line 5, in <module>\r\n    from pkg_resources import load_entry_point\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2927, in <module>\r\n    @_call_aside\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2913, in _call_aside\r\n    f(*args, **kwargs)\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 2940, in _initialize_master_working_set\r\n    working_set = WorkingSet._build_master()\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 637, in _build_master\r\n    return cls._build_from_requirements(__requires__)\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 650, in _build_from_requirements\r\n    dists = ws.resolve(reqs, Environment())\r\n  File "/usr/lib/python3/dist-packages/pkg_resources/__init__.py", line 834, in resolve\r\n    raise VersionConflict(dist, req).with_context(dependent_req)\r\npkg_resources.ContextualVersionConflict: (requests 2.9.1 (/usr/lib/python3/dist-packages), Requirement.parse('requests>=2.14.0'), {'PyGithub'})\r\nroot@augur:/vagrant/augur# \r\n```	2019-03-07 13:47:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692511	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Vagrant installation issue](https://trello.com/c/KfrUMGgx/20-vagrant-installation-issue)	2019-03-07 16:33:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692512	\N	This issue occurs because the installed version of `requests` was 2.9.1, while the version required by `PyGithub` was 2.14.0 or greater. Running `pip install --upgrade requests` resolved the issue, but there's probably a more stable fix. For now, I'll add a step to the Vagrant provisioning process that updates all installed Python packages, which should cover this case and others should they arise.	2019-03-07 16:39:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692513	\N	@ccarterlandis : can this be pulled into master before 1pm today? 	2019-03-07 17:16:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692514	\N	@sgoggins: I'm about to commit and open a PR into `master`.	2019-03-07 17:17:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692515	\N	I had to upgrade pip before that worked. FYI.\r\n	2019-03-07 17:17:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692516	\N	Pushed documentation update to `hotfix` in [this](https://github.com/chaoss/augur/commit/57f154d94266f9c8a9b331ac9d2dc179e0429d85) commit.	2019-03-07 17:19:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692517	\N	Actually its not working yet ... 	2019-03-07 17:20:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692518	\N	@ccarterlandis : the new issue is different. closing this one. 	2019-03-07 17:24:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692519	\N	I also think I want to have the commits summary page be the default landing page on login, for the set of repositories, or the "repository group" that is a user's default repository group. \r\n\r\nSo, instead of this page: \r\n![augur](https://user-images.githubusercontent.com/379847/53890179-53f6e800-3fed-11e9-890f-f23093f1adf8.png)\r\n\r\nThe user will see something like (which is just another view of commits in the git-facade repository): \r\n![augur](https://user-images.githubusercontent.com/379847/53890412-cc5da900-3fed-11e9-93ec-e65bcafcf3a2.png)\r\n\r\nAdd a **list** of repositories. \r\n\r\n\r\n	2019-03-06 14:55:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692520	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Commit Graphs](https://trello.com/c/6UzisS6p/1-commit-graphs)	2019-03-06 15:19:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692521	\N	Keep in mind that every tick or circle on the top chart IS a commit, so a different viz showing commits statistics over time would look about the same, this one is a bit hard to read when going in with the desire to look at commits. I'll brainstorm potential options	2019-03-06 18:25:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277109
1692522	\N	What browser and zoom are you using? On Chrome 100 zoom, the whitespace between "...-By Time Period" and "... Authors Visualized" is about half that: \r\n![image](https://user-images.githubusercontent.com/31676518/53915415-7e649780-4025-11e9-80b4-987f0f3a94de.png)\r\n	2019-03-06 21:35:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692523	\N	@tretrue : Here's some additional thoughts from our stakeholder. What they want is the ability to get a list of whose commits are in a time period. Perhaps selected. Perhaps click a spot and pick a date *my question*\r\nSeeing commits question regarding the graph I sent earlier: Would you prefer a table layout or a more finely resolved graph, do you think? \r\n\r\n*quote key*: \r\n**Table layout of the commits associated with a blob,  ie.  click on blob,  get list of commits (and size associated),  with hotlink to actual commit?   Possible?**\r\n\r\n**My Thought** \r\nDepending on the number of commits involved in a period, the graph version may or may not give you a readable set of details. I‚Äôm thinking a list. ?\r\n\r\nLet me know. We will build that. \r\n\r\n**Sorted list. Ding ding!**\r\nAgree sorted list would be more natural to interact with.   Thanks!\r\n	2019-03-07 13:55:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692524	\N	@tretrue: I don't think it's fair to expect users to use any one specific browser, so we should implement things in a way that they still look good on any browser. At a minimum, I think we should focus on Firefox and Google Chrome, since Chrome is quite widespread and I'd wager that many people in the open source community use Firefox.	2019-03-07 16:32:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692525	\N	@ccarterlandis i completely agree with you. Dynamically setting the whitespace should not be that big of a deal, I was curious as to which browser/zoom being used that way i can see it from his angle too just to be safe. I'll play around with both firefox and chrome. Thanks!	2019-03-07 19:03:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1692526	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Show data source for metrics in API docs](https://trello.com/c/apJTJqhg/5-show-data-source-for-metrics-in-api-docs)	2019-03-06 18:37:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692527	\N	Added to `hotfix` as of [this](https://github.com/chaoss/augur/pull/248/commits/642934f5a5c81bb7591bc72544e7ff01520232fa) commit.	2019-03-11 04:20:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692528	\N	![image](https://user-images.githubusercontent.com/31676518/53903516-89113380-4009-11e9-8edb-f8bdb37b5b26.png)\r\n	2019-03-06 18:15:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277119
1693980	\N	This is fine	2019-07-29 19:04:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1692529	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Config section titles](https://trello.com/c/HbmPWQls/10-config-section-titles)	2019-03-06 18:40:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692530	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Merge vagrant work into dev](https://trello.com/c/djZ1ed2C/8-merge-vagrant-work-into-dev)	2019-03-06 18:39:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692531	\N	Merged and pushed via CLI in [this](https://github.com/chaoss/augur/commit/943f52534dacedec3b6599dad17a82fa1520b1e0) commit. While attempting to resolve the merge conflicts, I accidentally merged `vagrant` into `dev` first instead of the other way around.	2019-03-08 16:40:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692532	\N	The CI build has immediately failed. I just wanted to mention this.	2019-02-20 18:04:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692533	\N	@Nebrethar: these changes look good to me. We're about to release the Vagrant stuff, so if it's okay with you, I'd like to pull these changes into `hotfix`, and then merge them into `master` at the same time as the Vagrant stuff for a coordinated release.	2019-02-21 16:33:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692534	\N	@Nebrethar : I think we will wait as @ccarterlandis suggests, but I am also keen to get this online and I think I am the last task person holding @ccarterlandis back right now ... so I will finish my work shortly. (ghtorrent baby copy)	2019-02-21 16:38:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1692535	\N	I'm not quite sure I understand the idea behind the `preinstall` concept (that's probably just a me thing). We don't explicitly depend on Anaconda to make everything work; that is, one can get the project running just fine without it, but it makes the Python version management easier. Additionally, I think that just attempting to install things and observing what fails and what doesn't is just fine. If I'm missing something, by all means please correct me!	2019-02-21 17:14:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692536	\N	#229 Relating to the augur.config.json remark in OP	2019-02-08 22:27:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692537	\N	If there is no `augur.config.json` file present, running the command `augur` will create a default one that looks as follows: \r\n```{\r\n    "Cache": {\r\n        "config": {\r\n            "cache.data_dir": "$(AUGUR)/runtime/cache",\r\n            "cache.lock_dir": "$(AUGUR)/runtime/cache",\r\n            "cache.type": "file"\r\n        }\r\n    },\r\n    "Plugins": []\r\n}\r\n```\r\n\r\nWhile this default config should be changed to reflect what plugins are installed, for the purposes of closing this issue this current default is fine. I propose opening another issue that details a need to create a default config based on the installed plugins.	2019-02-09 03:51:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692538	\N	I haven't run into this issue before. Is this on `dev` or `risk`?	2019-02-08 22:17:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692539	\N	I install dev yesterday and risk today (fresh) and they both had this issue.	2019-02-08 22:21:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692540	\N	I noticed that it seems you're using Python 3.5 to run Augur, would it be possible for you to upgrade to Python 3.6 and test again to see if that fixes anything? I'm not sure how this bug got added, that code hasn't been touched recently.	2019-02-09 03:47:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692541	\N	Sorry for the delay. That's a good thing to try. I will be trying a reinstall today with 3.6.	2019-02-13 15:53:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692542	\N	It seems like the switch to 3.6 fixed the path issue. Thanks!	2019-02-13 17:40:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1692543	\N	I accidentally did this while trying to fix another issue in metrics_status. I'm rolling back metrics status to an earlier version while I try to fix the actual issue.	2019-02-07 01:43:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692544	\N	Fixed in dev as of [this](https://github.com/chaoss/augur/commit/d65c1fa6538d03aa7e8030f96253934ecd57b5aa) commit.	2019-02-10 21:33:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1692545	\N	AFAIK porting grimoirelab to open distro is part of the roadmap, but doing it in 3 days sounds a bit difficult :)\r\n\r\nThe main reasons of being unable to do this task in the short-term are:\r\n- Migrating all current data to the latest open distro version (and make sure that the data is correct).\r\n- Handle breaking changes between the current ES version used in GrimoireLab and the target one.\r\n\r\n@sduenas please share your thoughts	2019-10-11 18:22:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692546	\N	> part of the roadmap\r\n\r\nThat's good to know. I had [searched the issues](https://github.com/chaoss/grimoirelab/issues?utf8=%E2%9C%93&q=is%3Aissue+open+distro) but didn't see anything.\r\n\r\nAnyways, it may be more challenging for a one-day project. Any suggestions on smaller steps that can move us in the right direction and earn an easy win for the Hack Day participants?	2019-10-11 20:18:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692547	\N	https://github.com/chaoss/grimoirelab-sirmordred/issues/330\r\nThe corresponding internal ticket is in the backlog of the roadmap kanban.\r\n\r\nI'll think about suggestions and let you know.	2019-10-11 20:57:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692548	\N	An idea could be to:\r\n- a. have a docker compose with OD and Kibana\r\n- b. install Perceval\r\n- c1. execute Perceval against Git/GitHub/GitLab/Meetup/... repo\r\n- c2. take the JSON documents returned and save them to OD\r\n- d. create visualizations via Kibana\r\n\r\nPoints c1 and c2 would require the participants to write a Python script combining Perceval and ElasticSearch (or requests) library. In this way, they will use part of GrimoireLab and play with OD. WDYT?	2019-10-12 07:35:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692549	\N	What do you mean to port GrimoireLab to OpenDistro? GrimoireLab (especifically Mordred and ELK) only need a ElastickSearch and Kibana endpoints to work. As far as I know, that's what OpenDistro provides.\r\n\r\nSo configuring SirModred would be more than enough if you have running OpenDistro. Am I missing something?	2019-10-12 11:48:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692550	\N	You're right @sduenas, however there are some considerations to take into account.\r\n\r\n- `deploy GrimoireLab with Open Distro for Elasticsearch, matching the same version of Elasticsearch`\r\n\r\n  Our stack is Elasticsearch and Kibiter 6.1.x, the first OD version available is 6.5.4 (https://opendistro.github.io/for-elasticsearch-docs/version-history/). Switching to 6.5.4 it might work, but we've never tested it.\r\n\r\n- `port GrimoireLab to the latest version of Open Distro.`\r\n\r\n  The last OD version is based on ElasticSearch 7.x, and there is at least a breaking change to handle, reported by 2 issues in mordred:\r\n  - https://github.com/chaoss/grimoirelab-sirmordred/issues/330\r\n  - https://github.com/chaoss/grimoirelab-sirmordred/issues/318	2019-10-12 12:29:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692552	\N	that's true, I forgot about the evaluation of @dlumbrer  	2019-10-12 16:57:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692553	\N	While waiting for @dlumbrer feedback, we got the one from @jjmerchante (please, feel free to join the discussion) who is using OD 0.9.0 for Cauldron. The platform seems to work fine at least for the following data sources: git, gitlab, github, meetup. He also reported that there are some minor changes to apply on the docker-compose.\r\n\r\nFor the next time @GeorgLink, it would be great to start this kind of discussions with more than 3 days in advance to be able to help you. 	2019-10-14 07:15:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692554	\N	FYI, there is already possible to use core GrimoireLab with Open Distro for Elasticsearch (ODFE), but not with the latest version of ODFE (check chaoss/grimoirelab-sirmordred#330 and chaoss/grimoirelab-sirmordred#318). But if you wanna play I've created a custom `docker-compose.yml` file for testing ODFE 0.9.0:\r\n\r\nhttps://gitlab.com/jsmanrique/grimoirelab-for-demos#bonus\r\n\r\nThe main differences with [current GrimoireLab full deployment](https://gitlab.com/jsmanrique/grimoirelab-for-demos/blob/master/docker-compose.yml) are: \r\n* that everything related with panels is deactivated in the [custom setp.cfg I've created](https://gitlab.com/jsmanrique/grimoirelab-for-demos/blob/master/grimoirelab-settings/setup.odfe.cfg), so:\r\n  * There is no default Kibana index pattern (you need [to configure it manually in Kibana](https://www.elastic.co/guide/en/kibana/current/tutorial-define-index.html))\r\n  * There is no navigation menu to access to the dashboards.\r\n  * There are pre-loaded dashboards / panels\r\n* @dlumbrer plugins are not pre-loaded, so you would need to load them manually\r\n\r\nHaving said that, perhaps a good project for the hackathon would be: \r\n* update GrimoireLab to use latest version of ODFE, with the minimum requirement of updating GrimoireLab data mappings. \r\n* test and demo it with current [GrimoireLab for demos](https://gitlab.com/jsmanrique/grimoirelab-for-demos) or [analytics demo](https://gitlab.com/Bitergia/lab/analytics-demo).\r\n\r\nBut, IMHO, I am not sure if that should be something for a GrimoireLab hackathon instead of a ODFE hackathon, but I would let the organizers to decide.\r\n\r\nAdditional extra "outcomes" could be:\r\n* create an ODFE docker image with [kbn_network](https://github.com/dlumbrer/kbn_network) and [kbn_dotplot](https://github.com/dlumbrer/kbn_dotplot) already installed to be used in `docker-compose.yml` in [GrimoireLab for demos](https://gitlab.com/jsmanrique/grimoirelab-for-demos) or [analytics demo](https://gitlab.com/Bitergia/lab/analytics-demo). \r\n\r\nAnd perhaps things could be easier if chaoss/grimoirelab-sirmordred#84 gets solved sometime :-)	2019-10-14 08:08:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692555	\N	> @dlumbrer was able to use GrimoireLab with OpenDistro. Probably he can give us more info.\r\n\r\nHe only tested some data dumps with mini mordred and ODFE 0.9.0. A couple of weeks ago, we tested with the latest ODFE and it was when we realized about the mapping issues mentioned before.	2019-10-14 08:11:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692556	\N	> > @dlumbrer was able to use GrimoireLab with OpenDistro. Probably he can give us more info.\r\n> \r\n> He only tested some data dumps with mini mordred and ODFE 0.9.0. A couple of weeks ago, we tested with the latest ODFE and it was when we realized about the mapping issues mentioned before.\r\n\r\nThat's right, I want to add that we can modify the Kibana provided in Open Distro in order to have our Kibiter (that includes menu, colors and plugins installation), because the docker images are available and we can add the features on it.	2019-10-14 08:37:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277239
1692557	\N	> For the next time @GeorgLink, it would be great to start this kind of discussions with more than 3 days in advance to be able to help you.\r\n\r\nSorry about the short notice. I strive to give everyone as much time as possible. I posted the issue as soon as I knew that we needed an issue. With the short time left, I was not expecting the level of detail that everyone provided, but I very much appreciate all of the input here. I think it is great that we have this much information that will be valuable to hackathon participants.	2019-10-14 11:08:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692558	\N	no worries @GeorgLink :) good luck with the hackathon!	2019-10-14 13:17:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692559	\N	Thank you @valeriocos @GeorgLink @jsmanrique @dlumbrer for the discussion and pointing out the potential pitfalls and steps required for resolving this issue. This information was very helpful for me when I was asked about this issue during the Hackathon. Due to the complexity of this issue and the limited time during the Hack day, no one went for this issue. However, someone started and got fairly far with porting the radio chart to open distro for kibana. üëç 	2019-10-16 17:58:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692560	\N	@sduenas has an idea about how to improve the release notes. @sduenas please share your thoughts.	2019-09-24 16:31:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692561	\N	Starting in October we're going to work in a different way to generate the news documents and the way we release the software.\r\n\r\nCurrently, NEWS document is not useful for anyone because it contains the commit logs which usually are very technical and they don't give enough context. It would be better to have something like in Perceval (see https://github.com/chaoss/grimoirelab-perceval/releases/tag/0.10.0). The problem is this releases are done manually.\r\n\r\nMy idea is to create these documents automatically with the software packages too. We'll start with this in Perceval and Arthur. Once we see it works, we will use it in all the packages and in GrimoireLab main repository too.\r\n\r\nI'll keep you posted.	2019-09-24 16:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692562	\N	Excellent. That would be great.\n\nThere is one project where I always enjoy reading the release notes because\nthey are funny: https://www.youneedabudget.com/release-notes/\n	2019-09-24 17:03:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692563	\N	Great! Please, keep mi in the loop!	2019-09-24 17:25:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692564	\N	Also, the release notes don't have to be fancy. The commit logs would already be helpful to get started.	2019-09-24 17:48:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692565	\N	Closing this via chaoss/grimoirelab-elk#691	2019-09-30 15:32:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692566	\N	Hi @asharabu ,\r\n\r\nPlease set to `true` the attributes `gitlab-issues` and `gitlab-merges` in the section `panels` of the dashboard.cfg/setup.cfg. Make sure you have defined in that file and in the projects.json the section `gitlab:issue` and `gitlab:merge` (see example below). Note that the repositories section doesn't exist for GitLab.\r\n\r\n**setup.cfg**\r\n```\r\n[panels]\r\nkibiter_time_from = now-90d\r\n...\r\ngitlab-issues = true\r\ngitlab-merges = true\r\n\r\n...\r\n[gitlab:issue]\r\ncategory = issue\r\nraw_index = ...\r\nenriched_index = ...\r\napi-token = ...\r\nsleep-for-rate = true\r\nno-archive = true\r\n\r\n[gitlab:merge]\r\ncategory = merge_request\r\nraw_index = ...\r\nenriched_index = ...\r\napi-token = ...\r\nsleep-for-rate = true\r\nno-archive = true\r\n```\r\n\r\n**projects.json**\r\n```\r\n{\r\n    "Gitlab": {\r\n        ...\r\n        "gitlab:issue": [\r\n            "https://gitlab.com/....",\r\n            "https://gitlab.com/..."\r\n        ],\r\n        "gitlab:merge": [\r\n            "https://gitlab.com/....",\r\n            "https://gitlab.com/..."\r\n        ],\r\n....\r\n```\r\n\r\nLet us know if this solves your issue, thanks	2019-09-24 07:02:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692628	\N	Hi,\r\n\r\nThe issue not yet solved. The above command returns the below output,\r\n\r\n---\r\n\r\n[2019-08-22 08:49:53,967] - Sir Perceval is on his quest.\r\n[2019-08-22 08:49:54,996] - Sir Perceval completed his quest.\r\n\r\n---\r\n\r\nAlso please see the credentials.cfg file,\r\n  \r\n----\r\n\r\n [github]\r\n api-token = key\r\n\r\n---	2019-08-22 08:53:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692567	\N	Hi,\r\n\r\nThanks for your update.\r\n\r\nI am using dashboard.cfg file and I have added as you mention on dashboard.cfg\r\n\r\n---\r\n[gitlab:issue]\r\ncategory = issue\r\nraw_index = gitlab_grimoirelab-issues\r\nenriched_index = gitlab_grimoirelab_issue\r\napi-token = \\<key\\>\r\nsleep-for-rate = true\r\nno-archive = true\r\n\r\n[gitlab:merge]\r\ncategory = merge_request\r\nraw_index = gitlab_grimoirelab-merges\r\nenriched_index = gitlab_grimoirelab_merge\r\napi-token = \\<key\\>\r\nsleep-for-rate = true\r\nno-archive = true\r\n\r\n---\r\n\r\nShould we pass api-token on dashboard.cfg or can we pass via credentials.cfg which is mount as override.cfg on the container?\r\n\r\nI have added the repo url as below on projects.json file,\r\n\r\n---\r\n    "openproject-git-test": {\r\n        "git": [\r\n            "https://<username>:<key>@<gitlaburl>/ashar_ma/openproject-git-test"\r\n        ],\r\n        "gitlab:issue": [\r\n            "https://<gitlaburl>/ashar_ma/openproject-git-test"\r\n        ],\r\n        "gitlab:merge": [\r\n            "https://<gitlaburl>/ashar_ma/openproject-git-test"\r\n        ]\r\n    }\r\n---\r\n\r\nWe are getting below error,\r\n\r\n---\r\n\r\nTraceback (most recent call last):\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/elk.py", line 229, in feed_backend\r\n    ocean_backend.feed(**params)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 229, in feed\r\n    self.feed_items(items)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 245, in feed_items\r\n    for item in items:\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backend.py", line 160, in fetch\r\n    self.client = self._init_client()\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/gitlab.py", line 214, in _init_client\r\n    self.archive, from_archive)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/gitlab.py", line 423, in __init__\r\n    self._init_rate_limit()\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/gitlab.py", line 646, in _init_rate_limit\r\n    raise error\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/gitlab.py", line 642, in _init_rate_limit\r\n    response = super().fetch(url)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 132, in fetch\r\n    response = self._fetch_from_remote(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 173, in _fetch_from_remote\r\n    raise e\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 168, in _fetch_from_remote\r\n    response.raise_for_status()\r\n  File "/usr/local/lib/python3.5/dist-packages/requests/models.py", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://gitlab.com/api/v4/projects/ashar_ma%2Fopenproject-git-test\r\n2019-09-24 07:59:13,467 - grimoire_elk.elk - ERROR - Error feeding ocean from gitlab (https://gitlab.com/ashar_ma/openproject-git-test): 401 Client Error: Unauthorized for url: https://gitlab.com/api/v4/projects/ashar_ma%2Fopenproject-git-test\r\n\r\n---\r\n\r\nPlease note that our git URL is our own custom domain, not gitlab.com. \r\n\r\n\r\n\r\n	2019-09-24 09:21:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692568	\N	> Should we pass api-token on dashboard.cfg or can we pass via credentials.cfg which is mount as override.cfg on the container?\r\n\r\nIt's probably better to pass it via the credentials.cfg\r\n\r\n> requests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://gitlab.com/api/v4/projects/ashar_ma%2Fopenproject-git-test\r\n> 2019-09-24 07:59:13,467 - grimoire_elk.elk - ERROR - Error feeding ocean from gitlab (https://gitlab.com/ashar_ma/openproject-git-test): 401 Client Error: Unauthorized for url: https://gitlab.com/api/v4/projects/ashar_ma%2Fopenproject-git-test\r\n\r\nThe token is not correctly passed, this is reason of `401 Client Error: Unauthorized for url`\r\n\r\n> Please note that our git URL is our own custom domain, not gitlab.com.\r\n\r\nIf this applies also to your gitlab projects, you should add to the dashboard.cfg the param `enterprise-url`, which is the `Base URL for GitLab Enterprise instance`\r\n\r\n\r\nLet me know if this helps, thanks	2019-09-24 16:15:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692569	\N	Hi,\r\n\r\nCan we use more than one URL at a time for Gitlab URLs? for example gitlab.com and customdomain.com?	2019-09-26 05:37:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692570	\N	It's not possible to pass the entreprise-url via the projects.json. However, you can create other gitlab sections in the dashboard.cfg, where the raw and enriched indexes are the same of the previous gitlab sections you defined. For instance:\r\n```\r\n[gitlab:issue]\r\ncategory = issue\r\nraw_index = gitlab_grimoirelab-issues\r\nenriched_index = gitlab_grimoirelab_issue\r\napi-token = <key>\r\nsleep-for-rate = true\r\nno-archive = true\r\n\r\n[gitlab:issueent]\r\ncategory = issue\r\nraw_index = gitlab_grimoirelab-issues\r\nenriched_index = gitlab_grimoirelab_issue\r\napi-token = <key1>\r\nsleep-for-rate = true\r\nno-archive = true\r\nenterprise-url = ....\r\n\r\n[gitlab:merge]\r\ncategory = merge_request\r\nraw_index = gitlab_grimoirelab-merges\r\nenriched_index = gitlab_grimoirelab_merge\r\napi-token = <key>\r\nsleep-for-rate = true\r\nno-archive = true\r\n\r\n[gitlab:mergeent]\r\ncategory = merge_request\r\nraw_index = gitlab_grimoirelab-merges\r\nenriched_index = gitlab_grimoirelab_merge\r\napi-token = <key1>\r\nsleep-for-rate = true\r\nno-archive = true\r\nenterprise-url = ....\r\n```\r\n\r\nThe new sections should appear also in the projects.json\r\n\r\nLet me know if this helps, thanks	2019-09-26 09:12:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692571	\N	Feel free to reopen the issu @asharabu , thanks	2019-09-27 15:10:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692572	\N	Do you mean for each contributor, how many PRs get accepted and rejected? Or for each maintainer or reviewer, whose PRs they have a accepted or rejected and how many?\r\n\r\nI'm not sure, but for the 1st question there might be data, but it might be a matter of building a visualization, and maybe a custom index. I think @alpgarcia has more expertise than me on this.\r\n\r\nFor the second, there might be data, but not 100% sure. I know there has been some work on this gathering data from Github PRs API endpoint. \r\n\r\nI'm sure @valeriocos and @alpgarcia have more knowledge about this.	2019-09-05 22:35:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692573	\N	I'm asking about the second. I'll revise the first column to "Maintainer".\r\n\r\nHow many times has a "maintainer" clicked the "merge" button or "close" button (assuming the pr stays closed). The PR may have been opened by someone else and I don't care about who created the PR, only who decided to merge or close it.	2019-09-05 22:47:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692574	\N	> I'm asking about the second. I'll revise the first column to "Maintainer".\r\n> \r\n> How many times has a "maintainer" clicked the "merge" button or "close" button (assuming the pr stays closed). The PR may have been opened by someone else and I don't care about who created the PR, only who decided to merge or close it.\r\n\r\nSo, you are asking for a third one ü§£	2019-09-05 23:02:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692575	\N	ü§Ø It can be complicated to describe analyses - we need a CHAOSS metric for this to make it easier.\r\n\r\nWell, is it possible with the current data in GrimoireLab or is new development needed?	2019-09-05 23:18:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692576	\N	> How many times has a "maintainer" clicked the "merge" button or "close" button (assuming the pr stays closed). The PR may have been opened by someone else and I don't care about who created the PR, only who decided to merge or close it.\r\n\r\nWe have the merger, so it is possible to get the number of PRs merged by a given author. What I think we don't have, and please @valeriocos correct me if I'm wrong, is the name of the person closing a PR.	2019-09-06 14:25:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692577	\N	Hi @stoewer , thank you for using GrimoireLab :)\r\n\r\nTry to define more github sections, for instance:\r\n```\r\n{\r\n "internal": {\r\n  "git": [\r\n   "git@internalghe.example.com:another-example/project"\r\n  ],\r\n  "github": [\r\n   "https://internalghe.example.com/another-example/project"\r\n  ]\r\n },\r\n "public": {\r\n  "git": [\r\n   "git@github.com:example/repository"\r\n  ],\r\n  "github:public": [\r\n   "https://github.com/example/repository"\r\n  ]\r\n }\r\n}\r\n```\r\n\r\n```\r\n[github]\r\napi-token = ${GHE_TOKEN}\r\nenterprise-url = https://internalghe.example.com\r\n\r\n[github:public]\r\napi-token = ${GH_TOKEN}\r\nsleep-for-rate = true\r\nno-archive = true\r\n....\r\n```\r\n\r\nFor more examples, please, have a look at:\r\n- https://github.com/chaoss/grimoirelab-sirmordred/blob/master/utils/setup.cfg\r\n- https://github.com/chaoss/grimoirelab-sirmordred/blob/master/utils/projects.json\r\n\r\nHope this helps!	2019-09-04 14:48:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692578	\N	Hi @stoewer , do you have any news on this issue?	2019-09-11 09:27:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692579	\N	@stoewer let's close this issue, feel free to reopen it if needed.	2019-09-12 08:36:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692898	\N	Also see https://github.com/chaoss/grimoirelab/issues/58	2018-12-17 12:06:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277285
1692580	\N	1. Issue/pr comments are in the raw indexes but are not propagated to the dashboards. However, as you can see [here](https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/github.py#L272), comments info is used to derive some metrics such as [time_to_first_attention](https://github.com/chaoss/grimoirelab-elk/blob/c723df770bf8ff5f5bc5ee31551c77b73d89ac2c/grimoire_elk/enriched/github.py#L730)\r\n\r\n2. The information about who un/labels an issue is not present in GrimoireLab. As you mention, this info seems to be available via https://developer.github.com/v3/issues/timeline/. \r\nLabel events can be fetched also via the events API (https://developer.github.com/v3/activity/events/types/#labelevent), however in this case, actor info is not present.	2019-08-30 09:20:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692581	\N	Thank you @valeriocos, my understanding is that:\r\n\r\n1. may be resolved by exposing the available data to the dashboard and building a visualization for it.\r\n\r\n2. requires substantive new development on data ingestion, enrichment, and visualization.	2019-09-05 22:50:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692582	\N	Perceval doesn't fetch GitHub project information and timeline. The inclusion of this new feature requires changes on the whole chain (raw, enrichment, visualziations).	2019-08-30 08:47:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692583	\N	At the moment Perceval doesn't fetch this data. To get it, the token should have read:org scope (something that should be taken into account if we decide to include team data).\r\n\r\n```\r\nThis API is only available to authenticated members of the team's organization. OAuth access tokens require the read:org scope.\r\n```\r\n\r\nGenerally, organization info is handled via SortingHat*, so I'm not sure whether it could be useful to (i) extend SortingHat DB to include the concept of teams, or (ii) just fetch this info for GitHub data. \r\n\r\n(i) will probably require more time than (ii). In any case the inclusion of this feature requires changes on the whole Grimoirelab chain, thus collection, enrichment and visualizations, and if (i) is selected also identities management.\r\n\r\nPlease @sduenas share your thoughts.\r\n\r\n*An overview of SortingHat is available [here](https://www.researchgate.net/profile/Valerio_Cosentino/publication/331088184_SortingHat_Wizardry_on_Software_Project_Members/links/5c651f81299bf1d14cc4d64e/SortingHat-Wizardry-on-Software-Project-Members.pdf)	2019-08-30 08:33:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692584	\N	If option (i) and (ii) both allow to filter by team membership, then I'm okay with either. 	2019-08-30 15:17:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692585	\N	I spoke with @sduenas about this feature request. He agrees with how the data could be integrated with the data model. His biggest concern is around obtaining the information:\r\n\r\n- GitHub Team information may be private or hidden.\r\n\r\nMore details around how a community is using GitHub Teams can help identify how to get the information.	2019-09-05 22:55:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692586	\N	The GitHub issue index contains part of this info. In a nutshell, if an issue contains PR data, the enriched item_type is `pull request` otherwise `issue` (see details at: https://github.com/chaoss/grimoirelab-elk/blob/c723df770bf8ff5f5bc5ee31551c77b73d89ac2c/grimoire_elk/enriched/github.py#L714).  This should be enough to identify issues with PRs and issues without PRs.\r\n\r\nWhat is missing from the issue index is whether the PRs were merged, this info is present in the GitHub pull request index (`merged` attribute: https://github.com/chaoss/grimoirelab-elk/blob/c723df770bf8ff5f5bc5ee31551c77b73d89ac2c/grimoire_elk/enriched/github.py#L600). However, I'm not sure whether the `merged` info is needed, since the goal is to measure talkative issue vs outcome-driven issues (so knowing if a PR was merged may be irrelevant).	2019-08-30 08:10:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692587	\N	@alpgarcia @sduenas feel free to jump into the conversation	2019-08-30 08:11:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692588	\N	To clarify my request.\r\nIssue https://github.com/chaoss/wg-diversity-inclusion/issues/188 was closed automatically by merging pull request https://github.com/chaoss/wg-diversity-inclusion/pull/203\r\n\r\nThe analysis I want to see is the number of issues (like 188) that were linked to a merged pull request (like 203) compared to the rest of the issues	2019-08-30 14:00:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692589	\N	Hi @asharabu \r\n\r\ntry with the following:\r\n\r\nyour projects.json should have this section:\r\n```\r\n"github:repo": [\r\n"https://github.com/asharabu/Testgit123"\r\n]\r\n```\r\n\r\nyour credentials.cfg should include:\r\n```\r\n[github:repo]\r\napi-token = ...\r\n```\r\n\r\nplease check that in the dashboard.cfg you have `github-repos = true` in the section `panels`:\r\n```\r\n[panels]\r\nkibiter_time_from= "now-30y"\r\n...\r\ngithub-repos = true\r\n```\r\n\r\nLet me know how it goes, thanks	2019-08-27 14:16:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692590	\N	Hi,\r\nThanks for your update.\r\nAs you instructed we tried as below,\r\n\r\n    "Ashar-private": {\r\n        "git": [\r\n            "https://asharabu:<key>@github.com/asharabu/Testgit123"\r\n        ],\r\n        "github": [\r\n            "https://github.com/asharabu/Testgit123"\r\n        ],\r\n        "github:repo": [\r\n            "https://github.com/asharabu/Testgit123"\r\n        ]\r\n    }\r\n\r\nBut still getting the below error. \r\n\r\n2019-08-27 15:05:24,724 - grimoire_elk.elk - ERROR - Error feeding ocean from github (https://github.com/asharabu/Testgit123): 404 Client Error: Not Found for url: https://api.github.com/repos/asharabu/Testgit123\r\nTraceback (most recent call last):\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/elk.py", line 229, in feed_backend\r\n    ocean_backend.feed(**params)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 229, in feed\r\n    self.feed_items(items)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 245, in feed_items\r\n    for item in items:\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backend.py", line 162, in fetch\r\n    for item in self.fetch_items(category, **kwargs):\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 305, in __fetch_repo_info\r\n    raw_repo = self.client.repo()\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 663, in repo\r\n    r = self.fetch(path)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 772, in fetch\r\n    response = super().fetch(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 132, in fetch\r\n    response = self._fetch_from_remote(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 173, in _fetch_from_remote\r\n    raise e\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 168, in _fetch_from_remote\r\n    response.raise_for_status()\r\n  File "/usr/local/lib/python3.5/dist-packages/requests/models.py", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://api.github.com/repos/asharabu/Testgit123\r\nCollection for github:repo: finished after 00:00:03 hours\r\n\r\n=====\r\nPlease note that the public repo is working for showing commit messages and Git repo URLs. But when use private repo it is showing commit messages but the github URL not showing on the tab  "GitHub Repositories"  of kibana.	2019-08-28 03:57:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692591	\N	Hi @asharabu,\r\n\r\nYou're welcome :)\r\n\r\n- Have you included in the credentials.cfg the section about `[github:repo]`?\r\n```\r\n[github:repo]\r\napi-token = ...\r\n```\r\n\r\n- Can you share your dashboards.cfg/setup.cfg?\r\n\r\n> Please note that the public repo is working for showing commit messages and Git repo URLs. But when use private repo it is showing commit messages but the github URL not showing on the tab "GitHub Repositories" of kibana.\r\n\r\nGitHub repositories data is not related to Git, it is fetched from the API and declared in a dedicated projects.json and dashboards.cfg section (`github:repo`).	2019-08-28 07:21:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692592	\N	Hi,\r\nThanks for your update. It is working now.\r\n\r\nThere is one more issue we are seeing which is under the "Git" tab on kibana the private URL is displaying with username and key which will affect the \r\n![Screenshot_14](https://user-images.githubusercontent.com/42669995/63847958-7ff79280-c9ac-11e9-81c8-06423e5bc8f9.jpg)\r\nhigh-security issue.	2019-08-28 10:27:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692901	\N	You've got the wrong guy again @jsmanrique please stop tagging me.	2018-06-04 08:12:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277283
1692593	\N	> Thanks for your update. It is working now.\r\n\r\nYou're welcome! Good news!\r\n\r\n> There is one more issue we are seeing which is under the "Git" tab on kibana the private URL is displaying with username and key which will affect the\r\n\r\nThis is due to the fact that the username and password are set in the Git URLs of the projects.json (the URLs are directly mirrored to the dashboards. Please have a look at: https://help.github.com/en/articles/about-ssh, this should solve your problem. \r\n\r\nIf this won't solve your problem, I can check how to modifiy the code (it shouldn't be difficult)	2019-08-28 11:03:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692594	\N	Hi,\r\nIf we use ssh authentication it will not help https://github.com/asharabu/Testgit123 that should be ssh URL git@github.com:asharabu/Testgit123.git . But if we  use ssh URL the projects.json file will not read ssh URL it will read only https URLs. We suspect that there should be code changes on grimoirelab/full which should read the key from override.cfg.	2019-08-28 12:08:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692595	\N	I'll have a look and go back to you in the next days, thanks	2019-08-28 12:17:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692596	\N	Hi @asharabu, a PR is available at: https://github.com/chaoss/grimoirelab-elk/pull/682, it should be merged and be available in the upcoming release.	2019-08-29 14:49:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692597	\N	Comments and emojis are already fetched by Perceval. We could include them in the enriched indexes,\r\nWDYT @alpgarcia ?	2019-08-27 07:17:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692598	\N	Thank you @valeriocos. I would suggest that any information recovered by Perceval should be shown in enriched indexes somehow. It would not make sense to spend effort developing support to retrieve such data to not use it and the end.	2019-08-27 07:48:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692599	\N	You're welcome @jsmanrique . Please @sduenas share your thoughts	2019-08-27 08:07:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692600	\N	User information of reactions and comments are already retrieved from GitHub:\r\n- https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L333\r\n- https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L348\r\n- https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L368\r\n- https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L438\r\n- https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L478\r\n\r\nInstead of having different indexes (github_comments, github_reactions), we could add different types of items to the same existing index (as done in Gerrit). WDYT @alpgarcia ?	2019-08-27 07:16:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692601	\N	Thank you @valeriocos. So it seems that the info is missing in the enriched indexes :-)\r\n\r\nI like the idea of different types in same existing index. I haven't thought about it.	2019-08-27 07:46:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692602	\N	You're welcome @jsmanrique . Please @sduenas share your thoughts	2019-08-27 08:08:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692603	\N	> Instead of having different indexes (github_comments, github_reactions), we could add different types of items to the same existing index (as done in Gerrit). WDYT @alpgarcia ?\r\n\r\nI basically agree, we solved a similar problem in other sources as Gerrit and Jira and I'd follow a similar approach here, unless anyone has any concern about that solution.\r\n\r\nSee:\r\nhttps://github.com/chaoss/grimoirelab-elk/pull/616\r\nhttps://github.com/chaoss/grimoirelab-elk/pull/661\r\n\r\nPlease @valeriocos add any other reference I could have missed if you think it is useful here.	2019-08-27 15:25:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692604	\N	Hi @GeorgLink,\r\n\r\nThe idea sounds interesting, I have some questions :)\r\n\r\nDo you have some references to read more about this method? A reference that compares/evaluates this approach with other ones (e.g., quality models) would be helpful too.\r\n\r\nOnce the method/model is trained, what does it happen with new text? It should be automatically tagged within GrimoireLab or it will be the input of Samantha's machinery?\r\n\r\nHow many times in your opinion the analysis should be executed: every time some new text appears, every month, every quarter, etc.?\r\n\r\nBased on your initial description, a solution could be to define a study (or an external script) that creates an index with items of the following shape:\r\n```\r\ncreated_at: ...\r\ntext: ...\r\ndata_source: ...\r\nuuid: ...\r\nparent_uuid: ... (original perceval item)\r\n```\r\nThis will expose the input needed by Samantha.\r\nExternal scripts can take this index and perform topic and SC labeling/classification (this should be Samantha's work).\r\nThe output of the external scripts can be then used to update the index with additional attributes (e.g., topic and SC labels). The update could be scheduled every month/quarter/... or executed when needed (a button) to produce reports.\r\n\r\nWDYT?	2019-08-25 13:26:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692605	\N	I expect that we'll discuss all these things in CHAOSS meetings because I\nwould like this to be an official CHAOSS metric, if others agree.\n\nI don't know all the implementation specifics at this time. We can revisit\nthem later.\n	2019-08-25 14:17:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692606	\N	I just sent an email to the mailing list, requesting that we discuss Social Currency Metrics on tomorrow's community call.	2019-08-26 16:30:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692607	\N	This sounds interesting and related to the recent work of Qiu et al. on social capital in open source projects: https://www.win.tue.nl/~aserebre/ICSE2019.pdf\r\n\r\nHuilian Sophie Qiu, Alexander Nolte, Anita Brown, Alexander Serebrenik, Bogdan Vasilescu. Going Farther Together: The Impact of Social Capital on Sustained Participation in Open Source 41st International Conference on Software Engineering (ICSE 2019), 2019, pp. 688-699 	2019-08-26 17:54:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277252
1692608	\N	Thank you @aserebrenik for sharing that reference, I'll read it.	2019-08-26 18:39:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692609	\N	Thank you @aserebrenik for sharing. The [Survey Instrument](https://github.com/CMUSTRUDEL/oss-social-capital-icse2019/raw/2.1/survey_instrument.pdf) from the paper is indeed interesting. Tomorrow, I hope to discuss a different approach that does not require a survey.	2019-08-26 19:19:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692610	\N	@GeorgLink Unfortunately I will not be able to attend the meeting tomorrow but it will be my pleasure to learn about your approach.	2019-08-26 20:29:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277252
1692611	\N	Awesome, I will make sure to take notes during the meeting and hopefully\ndocument a new CHAOSS metric.\n	2019-08-26 22:36:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692778	\N	Thanks for the report and the remedy!\r\n\r\nThis is fixed in #167 so it should come in the next release of the containers...	2019-01-07 21:43:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692612	\N	It seems this issue has been opened a bit too early, since the closing conditions require some clarifications (e.g., https://github.com/chaoss/grimoirelab/issues/206#issuecomment-524630360) and the outcome of CHAOSS meetings discussions (which are still ongoing).\r\n\r\nAlthough the Social Currency method is really interesting and promising, this issue should be closed (or marked as blocked) until the aformentioned requirements have been clarified. \r\nIt would be helpful to reference the summary of the discussions about this candidate metric here.\r\n\r\nplease @sduenas share your thoughts\r\n	2019-08-29 07:34:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692613	\N	I know it looks bad to have an issue open for too long üòî \r\n\r\nIf you want to close it, that's fine.	2019-08-29 15:23:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692614	\N	@aserebrenik, here are the notes from our conversation on Tuesday: https://lists.linuxfoundation.org/pipermail/chaoss/2019-August/000740.html	2019-08-29 16:21:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692615	\N	@GeorgLink This sounds interesting. If "sentiment" in their discussion is similar to "sentiment" in "sentiment analysis", then there are multiple research prototype tools capable of identifying sentiment (polarity) of a software engineering text. 	2019-08-29 17:51:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277252
1692616	\N	@samanthavenialogan thank you for posting your answers here and on the CHAOSS mailing list. I will reply more fully on the mailing list, because I think we can move the discussion forward there better.	2019-09-03 18:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692617	\N	closing this issue, since the discussion has been moved elsewhere.	2019-09-11 09:38:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692618	\N	Hi @asharabu, sorry for the late reply. I'm looking into it.\r\n	2019-08-20 12:36:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692619	\N	The analysis of private repos on GitHub is not fully supported. A workaround is to include the credentials in the projects.json as follows:\r\n```\r\n"git": [\r\n            "https://<username-github>:<api-token>@github.com/asharabu/Testgit123"\r\n        ],\r\n```\r\n\r\nPlease let me know if this solves your issue, thanks	2019-08-20 13:26:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692620	\N	Hi,\r\nThanks for your update.\r\nIt is not working. It seems there should change on api related codes.  Please check and let me know.	2019-08-20 14:44:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692621	\N	Can you share your dashboard.cfg and projects.json, please?	2019-08-20 15:15:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692622	\N	/$ cat dashboard.cfg\r\n#Mordred configuration file (Dashboard)\r\n#Parameters related to the dashboard and how it is produced\r\n#This is usually updated by the person maintaining the dashboard\r\n#\r\n#List: [val1, val2 ...]\r\n#Int: int_value\r\n#Int as string: "Int"\r\n#List as string: "[val1, val2 ...]"\r\n#String: string_value\r\n#None: None, none\r\n#Boolean: true, True, False, false\r\n\r\n[general]\r\n#Update incrementally, forever\r\nupdate = true\r\n#Don't start a new update earlier than (since last update, seconds)\r\nmin_update_delay = 300\r\n#Produce debugging data for the logs\r\ndebug = true\r\n\r\n[es_enrichment]\r\n#Refresh identities and projects for all items after enrichment\r\nautorefresh = true\r\n\r\n[sortinghat]\r\n#Run affilation\r\naffiliate = True\r\n#How to match to unify\r\nmatching = [email]\r\n#How long to sleep before running again, for identities tasks\r\nsleep_for = 100\r\n\r\n[panels]\r\n#Dashboard: default time frame\r\nkibiter_time_from = "now-1y"\r\n#Dashboard: default index pattern\r\nkibiter_default_index = "git"\r\n#GitHub repos panels\r\ngithub-repos = true\r\n\r\n[phases]\r\ncollection = true\r\nidentities = true\r\nenrichment = true\r\npanels = true\r\n\r\n[git]\r\n#Names for raw and enriched indexes\r\nraw_index = git_grimoirelab-raw\r\nenriched_index = git_grimoirelab\r\nstudies = [enrich_demography:git, enrich_areas_of_code:git, enrich_onion:git]\r\n\r\n[github]\r\n#Names for raw and enriched indexes\r\nraw_index = github_grimoirelab-raw\r\nenriched_index = github_grimoirelab\r\n#Sleep it GitHub API rate is exhausted, waited until it is recovered\r\nsleep-for-rate = true\r\n\r\n[pipermail]\r\n#Names for raw and enriched indexes\r\nraw_index = mail_grimoirelab-raw\r\nenriched_index = mail_grimoirelab\r\n\r\n#Studies\r\n\r\n[enrich_demography:git]\r\n#no_incremental = true   # default: false\r\n\r\n[enrich_areas_of_code:git]\r\nin_index = git_grimoirelab-raw\r\nout_index = git_aoc_grimoirelab-enriched\r\n#sort_on_field = metadata__timestamp\r\n#no_incremental = false\r\n\r\n[enrich_onion:git]\r\nin_index = git_grimoirelab\r\nout_index = git_onion_grimoirelab-enriched\r\n#data_source = git\r\n#contribs_field = hash\r\n#timeframe_field = grimoire_creation_date\r\n#sort_on_field = metadata__timestamp\r\n#no_incremental = false\r\n\r\n\r\n--------------\r\nprojects.json\r\n-------------\r\n\r\n{\r\n    "TestAsharTest": {\r\n        "git": [\r\n            "https://asharabu:key@github.com/asharabu/Testgit123",\r\n            "https://github.com/asharabu/First-repo",\r\n            "https://asharabu:key@github.com/asharabu/ttt.git"\r\n        ],\r\n        "github": [\r\n            "https://asharabu:key@github.com/asharabu/Testgit123",\r\n            "https://github.com/asharabu/First-repo",\r\n            "https://asharabu:key@github.com/asharabu/ttt.git"\r\n        ]\r\n    }\r\n}\r\n\r\n	2019-08-21 04:56:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692623	\N	You don't need to pass the username and token to GitHub repos, since the token you set in `credentials.cfg` should have the right scope to access your GitHub data (e.g., issue, issue comments, etc.).\r\n\r\nTry with the projects.json below.\r\n```\r\n{\r\n"TestAsharTest": {\r\n"git": [\r\n   "https://asharabu:key@github.com/asharabu/Testgit123",\r\n   "https://github.com/asharabu/First-repo",\r\n   "https://asharabu:key@github.com/asharabu/ttt.git"\r\n],\r\n"github": [\r\n   "https:/github.com/asharabu/Testgit123",\r\n   "https://github.com/asharabu/First-repo",\r\n   "https://github.com/asharabu/ttt.git"\r\n]\r\n}\r\n}\r\n```\r\n\r\nNote that you can try to get access to your private Git repos via ssh (instead of passing the username and password on the projects.json), please check these links:\r\n- https://stackoverflow.com/questions/2505096/cloning-a-private-github-repo\r\n- https://github.community/t5/How-to-use-Git-and-GitHub/Clone-private-repo/td-p/12616\r\n\r\nHope it helps	2019-08-21 08:39:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692624	\N	Hi,\r\n\r\nDirect cloning is working in the container using the username and key OR ssh key. But the cloning is still not possible using projects.json.\r\n\r\nI tried as you suggested on projects.json but still getting the below error,\r\n\r\n-----------\r\n2019-08-21 10:09:47,789 - grimoire_elk.elk - ERROR - Error feeding ocean from github (https://github.com/asharabu/ttt.git): 404 Client Error: Not Found for url: https://api.github.com/repos/asharabu/ttt.git/issues?sort=updated&state=all&since=1970-01-01T00%3A00%3A00%2B00%3A00&per_page=100&direction=asc\r\nTraceback (most recent call last):\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/elk.py", line 229, in feed_backend\r\n    ocean_backend.feed(**params)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 229, in feed\r\n    self.feed_items(items)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 245, in feed_items\r\n    for item in items:\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backend.py", line 162, in fetch\r\n    for item in self.fetch_items(category, **kwargs):\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 244, in __fetch_issues\r\n    for raw_issues in issues_groups:\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 790, in fetch_items\r\n    response = self.fetch(url_next, payload=payload)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 772, in fetch\r\n    response = super().fetch(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 132, in fetch\r\n    response = self._fetch_from_remote(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 173, in _fetch_from_remote\r\n    raise e\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 168, in _fetch_from_remote\r\n    response.raise_for_status()\r\n  File "/usr/local/lib/python3.5/dist-packages/requests/models.py", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://api.github.com/repos/asharabu/ttt.git/issues?sort=updated&state=all&since=1970-01-01T00%3A00%3A00%2B00%3A00&per_page=100&direction=asc\r\nCollection for github: finished after 00:00:11 hours\r\n	2019-08-21 10:14:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692625	\N	Hi @asharabu \r\nThe error is now different from the one you reported originaly. Git works fine, the problem is with fetching GitHub data.\r\nIs it possible that the credentials.cfg is not properly configured? The other option could be that the token doesn't have permission to access that repo.\r\n\r\nIn order to discard the second option, would you mind execute perceval from command line:\r\n```\r\nperceval github asharabu ttt --category issue -t <your-tken> --sleep-for-rate\r\n```	2019-08-21 11:11:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692626	\N	any news on this issue @asharabu ?	2019-08-22 07:52:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692627	\N	Hi,\r\n\r\nThe issue is not yet solved. The above command returns the below output,\r\n\r\n---\r\n\r\n[2019-08-22 08:49:53,967] - Sir Perceval is on his quest.\r\n[2019-08-22 08:49:54,996] - Sir Perceval completed his quest.\r\n\r\n---\r\n\r\nAlso please see the credentials.cfg file,\r\n  \r\n----\r\n\r\n [github]\r\n api-token = key\r\n\r\n---	2019-08-22 08:53:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692902	\N	Sorry @jgb. I meant @jgbarah. Sorry so much!	2018-06-04 08:19:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692629	\N	> [2019-08-22 08:49:53,967] - Sir Perceval is on his quest.\r\n> [2019-08-22 08:49:54,996] - Sir Perceval completed his quest.\r\n\r\nThis means that the token has the right permissions to access your private repo. \r\nThe problem should be in the configuration. Your `credentials.cfg` looks OK, maybe the `credentials.cfg` is not correctly set with `$(pwd)/credentials.cfg:/override.cfg` (see full command below). Do you have other `credentials.cfg` files?\r\n\r\n```\r\n$ docker run -p 127.0.0.1:5601:5601 -v $(pwd)/credentials.cfg:/override.cfg -t grimoirelab/full\r\n```	2019-08-22 09:46:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692630	\N	Hi,\r\n\r\nI have already verified the file credentials.cfg is correctly mounting to inside the container as the name override.cfg on the location root (/). But the issue still persists.  I suspect that the issue on the GitHub API calls on Grimorielab code.	2019-08-22 14:19:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692631	\N	thank you for the info. I'll check on some private repos and get back to you.	2019-08-22 14:23:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692632	\N	Hi @asharabu,\r\n\r\nI don't see any issue when fetching github data from private repos. These are the steps I followed and the output of the container.\r\n- create dir `/tmp/test-full`\r\n\r\n- create the `credentials.cfg`\r\n```\r\nslimbook@slimbook-KATANA:/tmp/test-full$ cat credentials.cfg \r\n[github]\r\napi-token = 747...\r\n```\r\n\r\n- create the `projects.json`\r\n```\r\nslimbook@slimbook-KATANA:/tmp/test-full$ cat projects.json \r\n  \r\n{\r\n    "grimoire": {\r\n        "git": [\r\n            "https://github.com/chaoss/grimoirelab-toolkit"\r\n        ],\r\n        "github": [\r\n            "https://github.com/Bitergia/<private-repo>"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n- execute the following command :\r\n```\r\n/tmp/test-full$ docker run -p 127.0.0.1:5601:5601 -v $(pwd)/credentials.cfg:/override.cfg -v $(pwd)/projects.json:/projects.json -t grimoirelab/full\r\n```\r\n\r\n- output\r\n```\r\nslimbook@slimbook-KATANA:/tmp/test-full$ docker run -p 127.0.0.1:5601:5601 -v $(pwd)/credentials.cfg:/override.cfg -v $(pwd)/projects.json:/projects.json -t grimoirelab/full\r\nStarting container: 0926b08da55a\r\nStarting Elasticsearch\r\n[ ok ] Starting Elasticsearch Server:.\r\nWaiting for Elasticsearch to start...\r\ntcp        0      0 0.0.0.0:9200            0.0.0.0:*               LISTEN      -                   \r\nElasticsearch started\r\nStarting MariaDB\r\n[ ok ] Starting MariaDB database server: mysqld.\r\nWaiting for MariaDB to start...\r\ntcp6       0      0 :::3306                 :::*                    LISTEN      -                   \r\nMariaDB started\r\nStarting Kibiter\r\nWaiting for Kibiter to start...\r\n..Kibiter started\r\nStarting SirMordred to build a GrimoireLab dashboard\r\nThis will usually take a while...\r\nCollection for github: starting...\r\nCollection for git: starting...\r\nLoading blacklist...\r\n0/0 blacklist entries loaded\r\nLoading unique identities...\r\nCollection for github: finished after 00:00:03 hours\r\nCollection for git: finished after 00:00:04 hours\r\n53/53 unique identities loaded\r\nExecuting for git the studies ['enrich_demography:git', 'enrich_areas_of_code:git', 'enrich_onion:git']\r\nLoading blacklist...\r\n0/0 blacklist entries loaded\r\nLoading unique identities...\r\n53/53 unique identities loaded\r\nLoading blacklist...\r\n0/0 blacklist entries loaded\r\n```\r\n\r\nHope it helps, let me know if this solves your problem.	2019-08-26 02:10:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692633	\N	Hi,\r\n\r\nI can see that you have given public repo under git.\r\n\r\n slimbook@slimbook-KATANA:/tmp/test-full$ cat projects.json \r\n\r\n \r\n{\r\n    "grimoire": {\r\n        **"git": [\r\n            "https://github.com/chaoss/grimoirelab-toolkit"**\r\n        ],\r\n        "github": [\r\n            "https://github.com/Bitergia/\\<private-repo\\>"\r\n        ]\r\n    }\r\n}\r\n\r\nPlease use private repo instead of public on git and see.	2019-08-26 06:35:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692634	\N	I understood that the error with git was solved using the urls https://user:key@github.com... since the error you posted at https://github.com/chaoss/grimoirelab/issues/205#issuecomment-523393506 was just about github. \r\nI changed the projects.json, followed the steps at https://github.com/chaoss/grimoirelab/issues/205#issuecomment-524689912 and no error was thrown (see details below).\r\n\r\nNote that repos in the github section shouldn't end with `.git` as visible within the logs posted at https://github.com/chaoss/grimoirelab/issues/205#issuecomment-523393506\r\n\r\n**projects.json**\r\n```\r\ntmp/test-full$ cat projects.json \r\n{\r\n    "grimoire": {\r\n        "git": [\r\n            "https://valeriocos:74....@github.com/Bitergia/<private-repo>"\r\n        ],\r\n        "github": [\r\n            "https://github.com/Bitergia/<private-repo>"\r\n        ]\r\n    }\r\n}\r\n\r\n```\r\n\r\n**logs**\r\n```\r\ntmp/test-full$ docker run -p 127.0.0.1:5601:5601 -v $(pwd)/credentials.cfg:/override.cfg -v $(pwd)/projects.json:/projects.json -t grimoirelab/full\r\nStarting container: 70c8eb228ae9\r\nStarting Elasticsearch\r\n[ ok ] Starting Elasticsearch Server:.\r\nWaiting for Elasticsearch to start...\r\ntcp        0      0 0.0.0.0:9200            0.0.0.0:*               LISTEN      -                   \r\nElasticsearch started\r\nStarting MariaDB\r\n[ ok ] Starting MariaDB database server: mysqld ..\r\nWaiting for MariaDB to start...\r\ntcp6       0      0 :::3306                 :::*                    LISTEN      -                   \r\nMariaDB started\r\nStarting Kibiter\r\nWaiting for Kibiter to start...\r\n...Kibiter started\r\nStarting SirMordred to build a GrimoireLab dashboard\r\nThis will usually take a while...\r\nCollection for github: starting...\r\nCollection for git: starting...\r\nLoading blacklist...\r\n0/0 blacklist entries loaded\r\nLoading unique identities...\r\nCollection for github: finished after 00:00:02 hours\r\nCollection for git: finished after 00:00:04 hours\r\n53/53 unique identities loaded\r\nExecuting for git the studies ['enrich_demography:git', 'enrich_areas_of_code:git', 'enrich_onion:git']\r\nLoading blacklist...\r\n0/0 blacklist entries loaded\r\nLoading unique identities...\r\n53/53 unique identities loaded\r\nLoading blacklist...\r\n0/0 blacklist entries loaded\r\nLoading unique identities...\r\n53/53 unique identities\r\n```	2019-08-26 07:16:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692635	\N	plese, can you check on your side @asharabu ?	2019-08-26 07:17:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692636	\N	I didn't detect any issue @asharabu , let's close this issue. Feel free to reopen it if needed, Thanks	2019-08-26 08:15:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692637	\N	Hi,\r\n\r\nThanks. It was working and displaying the output when we give only git and github section on projects.json.\r\n\r\nWhen adding the github:repo for private repo, it is still showing the error and the repository is not showing under tab "GitHub Repositories" on kibana dashboard. Please note that commit message counts are showing for the private repo on kibana dashboard under Overview.\r\n\r\nPlease see the ebtries which I gave on projects.json\r\n\r\n    "Ashar-private": {\r\n        "git": [\r\n            "https://asharabu:<key>@github.com/asharabu/Testgit123"\r\n        ],\r\n        "github": [\r\n            "https://github.com/asharabu/Testgit123"\r\n        ],\r\n        "github:repo": [\r\n            "https://asharabu:<key>@github.com/asharabu/Testgit123"\r\n        ]\r\n    }\r\n\r\nThe error message is getting,\r\n\r\n2019-08-27 10:15:08,298 - grimoire_elk.elk - ERROR - Error feeding ocean from github (https://github.com/asharabu/Testgit123): 404 Client Error: Not Found for url: https://api.github.com/repos/asharabu/Testgit123\r\nTraceback (most recent call last):\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/elk.py", line 229, in feed_backend\r\n    ocean_backend.feed(**params)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 229, in feed\r\n    self.feed_items(items)\r\n  File "/usr/local/lib/python3.5/dist-packages/grimoire_elk/raw/elastic.py", line 245, in feed_items\r\n    for item in items:\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backend.py", line 162, in fetch\r\n    for item in self.fetch_items(category, **kwargs):\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 305, in __fetch_repo_info\r\n    raw_repo = self.client.repo()\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 663, in repo\r\n    r = self.fetch(path)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/backends/core/github.py", line 772, in fetch\r\n    response = super().fetch(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 132, in fetch\r\n    response = self._fetch_from_remote(url, payload, headers, method, stream, verify)\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 173, in _fetch_from_remote\r\n    raise e\r\n  File "/usr/local/lib/python3.5/dist-packages/perceval/client.py", line 168, in _fetch_from_remote\r\n    response.raise_for_status()\r\n  File "/usr/local/lib/python3.5/dist-packages/requests/models.py", line 940, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://api.github.com/repos/asharabu/Testgit123\r\nCollection for github:repo: finished after 00:00:04 hours\r\n	2019-08-27 10:24:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277250
1692638	\N	@GeorgLink can u please create two short links? We need one before you apply the change and another one after you filter out the organization.\r\n\r\nIn order to create short links you must be logged in (click on Login on bottom left)	2019-08-19 19:03:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1692639	\N	Snapshot before filter: https://chaoss.biterg.io/goto/b1475c26efeefbae1791dd583c8c7434\r\nSnapshot after filter: https://chaoss.biterg.io/goto/a0022929b170187423e5966d4deacdc4\r\n\r\n-----\r\n\r\nI may have found something...\r\n\r\nScreenshot when I created the snapshot short URL\r\n<img width="635" alt="Screen Shot 2019-08-19 at 12 05 49 PM" src="https://user-images.githubusercontent.com/8862021/63292075-b9782180-c279-11e9-9737-136d27c55161.png">\r\n\r\nI noticed, that when you open the short URL, the legend on the right of the heatmap is different:\r\n<img width="634" alt="Screen Shot 2019-08-19 at 12 09 26 PM" src="https://user-images.githubusercontent.com/8862021/63292314-37d4c380-c27a-11e9-940b-b9c6a6c862fb.png">\r\n\r\n\r\nI have a suspicion, that the legend on the right with the coloring schema does not update properly. You can see that behavior also when setting Custom Ranges and use the "Apply Changes" button. The following screenshot shows the legend still with an old number, not the new one that I typed in at the bottom right.\r\n\r\n<img width="1482" alt="Screen Shot 2019-08-19 at 12 11 51 PM" src="https://user-images.githubusercontent.com/8862021/63292498-a154d200-c27a-11e9-8b70-80754a9141ed.png">\r\n	2019-08-19 19:14:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692673	\N	Is it possible that you have data from different ES versions (from the log above `Caused by: java.lang.IllegalArgumentException: Unexpected field [mapping_version]`) ?	2019-06-10 11:00:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693307	\N	issue links are from #187 and #188	2019-07-03 14:48:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1692640	\N	I reproduced the error @GeorgLink . This is what I did:\r\n* click on https://chaoss.biterg.io/goto/b1475c26efeefbae1791dd583c8c7434\r\n* using the dropdown menu on the left I select "Bitergia" and I click on the (-) filter on top to filter out Bitergia\r\n* the legend is not updated\r\n![imagen](https://user-images.githubusercontent.com/326719/63293008-45fd0100-c2c7-11e9-8a35-d4314e4ee61e.png)\r\n* if I hide the legend and click again to display it, the number is refreshed\r\n![imagen](https://user-images.githubusercontent.com/326719/63293048-5e6d1b80-c2c7-11e9-8ee5-cae2833d5152.png)\r\n\r\nThis is a Kibiter error and should be reported. I can do it if you don't have the time to create the report. Up to you :) 	2019-08-19 19:23:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1692641	\N	I don't know where to report it - If you could do it, that would be great üëç \r\n\r\nThanks for confirming the bug.	2019-08-19 19:24:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692642	\N	Already reported at https://github.com/chaoss/grimoirelab-kibiter/issues/113	2019-08-19 19:28:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1692643	\N	Hi @rootsongjc ,\r\n\r\nCan you share the setup.cfg? it may be possible that in the section `panels` the param `github-repos` is set True?	2019-08-19 11:02:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692644	\N	I can't find the `setup.cfg`, do you mean the `dashboard.cfg`?\r\n\r\n**dashboard.cfg**\r\nI just keep it like the original as the docker image.\r\n\r\n```\r\n# Mordred configuration file (Dashboard)\r\n# Parameters related to the dashboard and how it is produced\r\n# This is usually updated by the person maintaining the dashboard\r\n#\r\n# List: [val1, val2 ...]\r\n# Int: int_value\r\n# Int as string: "Int"\r\n# List as string: "[val1, val2 ...]"\r\n# String: string_value\r\n# None: None, none\r\n# Boolean: true, True, False, false\r\n\r\n[general]\r\n# Update incrementally, forever\r\nupdate = true\r\n# Don't start a new update earlier than (since last update, seconds)\r\nmin_update_delay = 300\r\n# Produce debugging data for the logs\r\ndebug = true\r\n\r\n[es_enrichment]\r\n# Refresh identities and projects for all items after enrichment\r\nautorefresh = true\r\n\r\n[sortinghat]\r\n# Run affilation\r\naffiliate = True\r\n# How to match to unify\r\nmatching = [email]\r\n# How long to sleep before running again, for identities tasks\r\nsleep_for = 100\r\n\r\n[panels]\r\n# Dashboard: default time frame\r\nkibiter_time_from = "now-1y"\r\n# Dashboard: default index pattern\r\nkibiter_default_index = "git"\r\n# GitHub repos panels\r\ngithub-repos = true\r\n\r\n[phases]\r\ncollection = true\r\nidentities = true\r\nenrichment = true\r\npanels = true\r\n\r\n[git]\r\n# Names for raw and enriched indexes\r\nraw_index = git_grimoirelab-raw\r\nenriched_index = git_grimoirelab\r\nstudies = [enrich_demography:git, enrich_areas_of_code:git, enrich_onion:git]\r\n\r\n[github]\r\n# Names for raw and enriched indexes\r\nraw_index = github_grimoirelab-raw\r\nenriched_index = github_grimoirelab\r\n# Sleep it GitHub API rate is exhausted, waited until it is recovered\r\nsleep-for-rate = true\r\n\r\n[pipermail]\r\n# Names for raw and enriched indexes\r\nraw_index = mail_grimoirelab-raw\r\nenriched_index = mail_grimoirelab\r\n\r\n# Studies\r\n\r\n[enrich_demography:git]\r\n#no_incremental = true   # default: false\r\n\r\n[enrich_areas_of_code:git]\r\nin_index = git_grimoirelab-raw\r\nout_index = git_aoc_grimoirelab-enriched\r\n#sort_on_field = metadata__timestamp\r\n#no_incremental = false\r\n\r\n[enrich_onion:git]\r\nin_index = git_grimoirelab\r\nout_index = git_onion_grimoirelab-enriched\r\n#data_source = git\r\n#contribs_field = hash\r\n#timeframe_field = grimoire_creation_date\r\n#sort_on_field = metadata__timestamp\r\n#no_incremental = false\r\n```\r\n\r\nI want to figure out why these errors came out because I want to monitor the GitHub repos.\r\n	2019-08-19 11:26:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277254
1692645	\N	Thank you for sharing it. Try to modify your setup.cfg and projects.json in the following way:\r\n\r\nsetup.cfg\r\n```\r\n[github:repo]\r\nraw_index = github_grimoirelab_stats-raw\r\nenriched_index = github_grimoirelab_stats\r\ncategory = repository\r\nno-archive = true\r\nsleep-for-rate = true\r\n```\r\n\r\nprojects.json\r\n```\r\n{\r\n    "SOFAStack": {\r\n        "git": [\r\n            "https://github.com/sofastack/sofa-boot",\r\n            "https://github.com/sofastack/sofa-rpc",\r\n            "https://github.com/sofastack/sofa-mosn",\r\n            "https://github.com/sofastack/sofa-tracer",\r\n            "https://github.com/sofastack/sofa-lookout",\r\n            "https://github.com/sofastack/sofa-registry",\r\n            "https://github.com/sofastack/sofa-dashboard",\r\n            "https://github.com/sofastack/sofa-bolt",\r\n            "https://github.com/sofastack/sofa-jraft",\r\n            "https://github.com/sofastack/sofa-acts",\r\n            "https://github.com/sofastack/sofastack.tech"\r\n        ],\r\n        "github": [\r\n            "https://github.com/sofastack/sofa-boot",\r\n            "https://github.com/sofastack/sofa-rpc",\r\n            "https://github.com/sofastack/sofa-mosn",\r\n            "https://github.com/sofastack/sofa-tracer",\r\n            "https://github.com/sofastack/sofa-lookout",\r\n            "https://github.com/sofastack/sofa-registry",\r\n            "https://github.com/sofastack/sofa-dashboard",\r\n            "https://github.com/sofastack/sofa-bolt",\r\n            "https://github.com/sofastack/sofa-jraft",\r\n            "https://github.com/sofastack/sofa-acts",\r\n            "https://github.com/sofastack/sofastack.tech"\r\n        ],\r\n        "github:repo": [\r\n            "https://github.com/sofastack/sofa-boot",\r\n            "https://github.com/sofastack/sofa-rpc",\r\n            "https://github.com/sofastack/sofa-mosn",\r\n            "https://github.com/sofastack/sofa-tracer",\r\n            "https://github.com/sofastack/sofa-lookout",\r\n            "https://github.com/sofastack/sofa-registry",\r\n            "https://github.com/sofastack/sofa-dashboard",\r\n            "https://github.com/sofastack/sofa-bolt",\r\n            "https://github.com/sofastack/sofa-jraft",\r\n            "https://github.com/sofastack/sofa-acts",\r\n            "https://github.com/sofastack/sofastack.tech"\r\n        ]\r\n    },\r\n    "alipay": {\r\n        "git": [\r\n            "https://github.com/alipay/SoloPi"\r\n        ],\r\n        "github": [\r\n            "https://github.com/alipay/SoloPi"\r\n        ],\r\n        "github:repo": [\r\n            "https://github.com/alipay/SoloPi"\r\n        ]\r\n    },\r\n    "seata": {\r\n        "git": [\r\n            "https://github.com/seata/seata"\r\n        ],\r\n        "github": [\r\n            "https://github.com/seata/seata"\r\n        ],\r\n       "github:repo": [\r\n            "https://github.com/seata/seata"\r\n        ]\r\n    },\r\n    "SQLFlow": {\r\n        "git": [\r\n            "https://github.com/sql-machine-learning/sqlflow"\r\n        ],\r\n        "github": [\r\n            "https://github.com/sql-machine-learning/sqlflow"\r\n        ],\r\n        "github:repo": [\r\n            "https://github.com/sql-machine-learning/sqlflow"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\n> I want to figure out why these errors came out because I want to monitor the GitHub repos.\r\n\r\nSorry, the documentation is problaby not good enough.\r\nIf the param `github-repos = true` is set to True (panels section of the setup.cfg), the dashboards to show repo statistics will be uploaded to Kibiter. In this case, `github:repo` sections should be included in the projects.json and in the setup.cfg.\r\n\r\nI will update the doc at: https://github.com/chaoss/grimoirelab-sirmordred/blob/master/README.md#panels, to make it explict that github:repo sections should be declared if `github-repos = true` is set to True\r\n	2019-08-19 11:35:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692646	\N	Feel free to close the issue @rootsongjc if the problem is solved, and don't hesitate to leave comments on the referenced PR if you think it's missing something. Thanks	2019-08-19 11:51:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692647	\N	@valeriocos Thank you, I am working on it, if I have any new progress, I will leave a comment here.	2019-08-19 12:00:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277254
1692648	\N	@valeriocos I didn't find the `setup.cfg` file. Here are my config files.\r\n\r\n**dashboard.cfg**\r\n\r\n```\r\n# Mordred configuration file (Dashboard)\r\n# Parameters related to the dashboard and how it is produced\r\n# This is usually updated by the person maintaining the dashboard\r\n#\r\n# List: [val1, val2 ...]\r\n# Int: int_value\r\n# Int as string: "Int"\r\n# List as string: "[val1, val2 ...]"\r\n# String: string_value\r\n# None: None, none\r\n# Boolean: true, True, False, false\r\n\r\n[general]\r\n# Update incrementally, forever\r\nupdate = true\r\n# Don't start a new update earlier than (since last update, seconds)\r\nmin_update_delay = 300\r\n# Produce debugging data for the logs\r\ndebug = true\r\n\r\n[es_enrichment]\r\n# Refresh identities and projects for all items after enrichment\r\nautorefresh = true\r\n\r\n[sortinghat]\r\n# Run affilation\r\naffiliate = True\r\n# How to match to unify\r\nmatching = [email]\r\n# How long to sleep before running again, for identities tasks\r\nsleep_for = 100\r\n\r\n[panels]\r\n# Dashboard: default time frame\r\nkibiter_time_from = "now-1y"\r\n# Dashboard: default index pattern\r\nkibiter_default_index = "git"\r\n# GitHub repos panels\r\ngithub-repos = true\r\n\r\n[phases]\r\ncollection = true\r\nidentities = true\r\nenrichment = true\r\npanels = true\r\n\r\n[git]\r\n# Names for raw and enriched indexes\r\nraw_index = git_grimoirelab-raw\r\nenriched_index = git_grimoirelab\r\nstudies = [enrich_demography:git, enrich_areas_of_code:git, enrich_onion:git]\r\n\r\n[github]\r\n# Names for raw and enriched indexes\r\nraw_index = github_grimoirelab-raw\r\nenriched_index = github_grimoirelab\r\n# Sleep it GitHub API rate is exhausted, waited until it is recovered\r\nsleep-for-rate = true\r\n\r\n[github:repo]\r\nraw_index = github_grimoirelab_stats-raw\r\nenriched_index = github_grimoirelab_stats\r\ncategory = repository\r\nno-archive = true\r\nsleep-for-rate = true\r\n\r\n[pipermail]\r\n# Names for raw and enriched indexes\r\nraw_index = mail_grimoirelab-raw\r\nenriched_index = mail_grimoirelab\r\n\r\n# Studies\r\n\r\n[enrich_demography:git]\r\n#no_incremental = true   # default: false\r\n\r\n[enrich_areas_of_code:git]\r\nin_index = git_grimoirelab-raw\r\nout_index = git_aoc_grimoirelab-enriched\r\n#sort_on_field = metadata__timestamp\r\n#no_incremental = false\r\n\r\n[enrich_onion:git]\r\nin_index = git_grimoirelab\r\nout_index = git_onion_grimoirelab-enriched\r\n#data_source = git\r\n#contribs_field = hash\r\n#timeframe_field = grimoire_creation_date\r\n#sort_on_field = metadata__timestamp\r\n#no_incremental = false\r\n```\r\n**infra.cfg**\r\n\r\n```\r\n# Mordred configuration  (Infra)\r\n# Parameters related to the infrastructure (services, directories...)\r\n# This is updated usually by the person maintaining the infrastructure\r\n#\r\n# Version for grimoirelab/install & grimoirelab/full containers\r\n# Servers in localhost, default ports, credentials in grimoirelab/full\r\n#\r\n# List: [val1, val2 ...]\r\n# Int: int_value\r\n# Int as string: "Int"\r\n# List as string: "[val1, val2 ...]"\r\n# String: string_value\r\n# None: None, none\r\n# Boolean: true, True, False, false\r\n\r\n[general]\r\n# Directory for logs\r\nlogs_dir = /logs\r\n# File with aliases definitions\r\naliases_file = /aliases.json\r\n# File with menu defintions\r\nmenu_file = /menu.yaml\r\n\r\n[projects]\r\nprojects_file = /projects.json\r\n\r\n[es_collection]\r\n# Elasticsearch for data collection (raw indexes)\r\nurl = http://localhost:9200\r\nuser =\r\npassword =\r\n\r\n[es_enrichment]\r\n# Elasticsearch for enriched data\r\nurl = http://localhost:9200\r\nuser =\r\npassword =\r\n\r\n[sortinghat]\r\n# Infrastructure for SortingHat (MariaDB/MySQL database)\r\nhost = localhost\r\nuser = grimoirelab\r\npassword = grimoirelab\r\ndatabase = grimoirelab_sh\r\n\r\n# Use organizations file\r\nload_orgs = false\r\norgs_file = /orgs.json\r\n\r\n# Identities file in GrimoireLab format\r\nidentities_file = [/identities.yaml]\r\nidentities_format = grimoirelab\r\n\r\n[panels]\r\n# Kibitter / kibana entry point\r\nkibiter_url = http://localhost:5601\r\n```\r\n\r\n**project.cfg**\r\n\r\n```\r\n[general]\r\nshort_name = CHAOSS\r\n\r\n[sortinghat]\r\n# Use organizations file\r\nload_orgs = false\r\norgs_file = orgs.json\r\n\r\n# Organization name for people not affiliated to any organization\r\nunaffiliated_group = Unknown\r\n\r\n# Ids known to be bots\r\nbots_names = [Beloved Bot]\r\n\r\n# How to autoprofile\r\nautoprofile = [CHAOSS:manual,git,github]\r\n```\r\n\r\nEvery time I open <http://localhost:5601>, the link below repositories didn't appear.\r\n\r\n![image](https://user-images.githubusercontent.com/3328185/63266273-2f07e000-c2c2-11e9-812a-3edf96ec688f.png)\r\n\r\n`github_repositories` index has no data.\r\n\r\n![image](https://user-images.githubusercontent.com/3328185/63266542-b6555380-c2c2-11e9-8901-32a3845332fc.png)	2019-08-19 12:48:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277254
1692649	\N	> @valeriocos I didn't find the setup.cfg file. Here are my config files.\r\n\r\nThe dashboard.cfg should be fine.\r\n\r\nCan you share the output of:\r\n- https://localhost:9200/_cat/indices\r\n- https://localhost:9200/_alias?pretty	2019-08-19 12:59:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692650	\N	```bash\r\ncurl http://localhost:9200/_cat/indices\r\nyellow open github_grimoirelab-raw         NQdR4Y93Q86mnmtqszp5QA 5 1   5293    23  33.6mb  33.6mb\r\nyellow open git_grimoirelab-raw            za01Kt3_RnqLvhiMQhLXGw 5 1  12693    14  30.3mb  30.3mb\r\nyellow open git_onion_grimoirelab-enriched zipnNtfJTy6NVDSw1dxEHQ 5 1   5234     0   1.5mb   1.5mb\r\nyellow open github_grimoirelab_stats-raw   6wXS_FyNT92Qu9SAMy2s3g 5 1     88     0   2.2mb   2.2mb\r\nyellow open github_grimoirelab             _yJOKgVZT0GQvycjSMorUA 5 1   5288  4267  11.6mb  11.6mb\r\nyellow open git_grimoirelab                78FFpON0Ty6G6eRGjQBzcA 5 1  12693    51  48.3mb  48.3mb\r\nyellow open github_grimoirelab_stats       _dVnoqaZRpCS-jA1rI--BA 5 1     88     8 513.6kb 513.6kb\r\nyellow open .kibana                        obJQwYoCSo-_8OuIIOpW5g 1 1    199     3   242kb   242kb\r\nyellow open git_aoc_grimoirelab-enriched   v0xGBHIWSu-rdWjWxbhX4Q 5 1 187461 73484 198.7mb 198.7mb\r\n```\r\n\r\n```bash\r\ncurl http://localhost:9200/_alias?pretty\r\n{\r\n  "github_grimoirelab-raw" : {\r\n    "aliases" : {\r\n      "github-raw" : { }\r\n    }\r\n  },\r\n  "git_grimoirelab-raw" : {\r\n    "aliases" : {\r\n      "git-raw" : { }\r\n    }\r\n  },\r\n  "git_onion_grimoirelab-enriched" : {\r\n    "aliases" : {\r\n      "all_onion" : { }\r\n    }\r\n  },\r\n  "github_grimoirelab_stats-raw" : {\r\n    "aliases" : { }\r\n  },\r\n  "github_grimoirelab" : {\r\n    "aliases" : {\r\n      "github_issues" : { },\r\n      "github_issues_enrich" : { },\r\n      "issues_closed" : { },\r\n      "issues_created" : { },\r\n      "issues_updated" : { }\r\n    }\r\n  },\r\n  "git_grimoirelab" : {\r\n    "aliases" : {\r\n      "affiliations" : { },\r\n      "demographics" : { },\r\n      "git" : { },\r\n      "git_author" : { },\r\n      "git_enrich" : { }\r\n    }\r\n  },\r\n  "github_grimoirelab_stats" : {\r\n    "aliases" : {\r\n      "github" : { }\r\n    }\r\n  },\r\n  ".kibana" : {\r\n    "aliases" : { }\r\n  },\r\n  "git_aoc_grimoirelab-enriched" : {\r\n    "aliases" : {\r\n      "git_areas_of_code" : { }\r\n    }\r\n  }\r\n}\r\n```\r\n	2019-08-19 13:08:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277254
1692651	\N	Thank you for sharing.\r\nThere is data about github repo stats (`github_grimoirelab_stats`), however the alias on that index is not correctly set (I'll check why).\r\nTo fix your problem, try the following:\r\n- In kibiter, click on the wrench on the left, a console will appear\r\n- write and execute the following instructions:\r\n```\r\nPOST /_aliases\r\n{\r\n    "actions" : [\r\n        { "add" : { "index" : "github_grimoirelab_stats", "alias" : "github_repositories" } }\r\n    ]\r\n}\r\n```\r\nthis will add the alias `github_repositories` to the index `github_grimoirelab_stats`\r\n\r\n```\r\nPOST /_aliases\r\n{\r\n    "actions" : [\r\n        { "remove" : { "index" : "github_grimoirelab_stats", "alias" : "github" } }\r\n    ]\r\n}\r\n```\r\nthis will remove the alias `github` from the index `github_grimoirelab_stats`\r\n\r\nyou should end up with something like this:\r\n![captura_31](https://user-images.githubusercontent.com/6515067/63269686-f7d00980-c296-11e9-81dc-d74edebaa02e.png)\r\n\r\nTo make sure the modifications on the aliases took place, execute again the command `curl http://localhost:9200/_alias?pretty`	2019-08-19 13:37:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692652	\N	@valeriocos It works, thank you. I think we should update the [Grimoirelab Tutorial](https://chaoss.github.io/grimoirelab-tutorial) to guide users on how to monitor GitHub repositories correctly.	2019-08-19 13:48:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277254
1692653	\N	Thank you for your feeback, it would be great if you could contribute to the tutorial (@jgbarah can help you on this).	2019-08-19 13:59:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692782	\N	Is this issue somehow related to: https://github.com/chaoss/grimoirelab-perceval/issues/429#issuecomment-422724682 ?	2018-12-10 13:20:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693390	\N	Please have a look @jgbarah, @aswanipranjal.	2019-06-25 19:41:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692654	\N	Hi @alangsto , the issue is related to the missing index `github_repositories`. Please check your setup.cfg, in the `panels` section you should set `github-repos = false`. On the other hand, if you want github repos stats, please add in the setup.cfg and projects.json something similar to:\r\n- https://github.com/chaoss/grimoirelab-sirmordred/blob/master/utils/setup.cfg#L101\r\n- https://github.com/chaoss/grimoirelab-sirmordred/blob/master/utils/projects.json#L12\r\n\r\nLet me know if this solves your issue, thanks	2019-07-15 15:55:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692655	\N	Hi @valeriocos,\r\n\r\nThis did fix the issue! Is there any other place that this was documented? It might be useful for a new user (like myself) to have this be more permanently documented. \r\n\r\nThanks for your help!	2019-07-15 20:34:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277255
1692656	\N	You're welcome @alangsto . The description of the panel section params is at: https://github.com/chaoss/grimoirelab-sirmordred#panels. If you find it useful, feel free to submit a PR to improve the doc. Thanks!	2019-07-16 06:32:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692657	\N	@alangsto let's close this issue. Feel free to submit a PR to improve the doc, thanks!	2019-07-17 07:56:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692658	\N	Reopening, because this seems like a valid issue. In fact, I see that current version of Kibiter (6.1.4) is no longer supported by SearchGuard...\r\n\r\n@alangsto, did you close this for some specific reason?	2019-06-25 17:58:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692659	\N	@jgbarah I originally reported this issue because I thought it was causing an error with my image, although I actually believe the issue I was having was due to an elasticsearch connection problem. \r\n\r\nI haven't retested the secured image, so maybe it was related to the searchguard version.	2019-06-25 18:19:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277255
1692660	\N	Thanks! I was observing that very same behavior with a local docker container, so i think it is a valid issue. I will still re-test it, just to be sure.	2019-06-25 18:24:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692661	\N	Not sure who to ping on this but @sduenas you or @jgbarah seem to be the most recent active people üôè \r\n\r\nlet me know if there's anything else i need to do or add to get this link fixed =)	2019-06-17 20:35:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277243
1692662	\N	@jgbarah thanks! and yeah im totally happy for this to be overwritten later if there's a smarter better way to do it.	2019-06-26 12:39:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277243
1692663	\N	Let's keep it that way only for this one. I'd like to review those files and to improve them.	2019-06-06 15:39:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692664	\N	Python 3.5 and 3.6 are also supported. Sorry for the mistake. I think we should add more labels to the classifiers. It works with 3.5 and 3.6 too. We couldn't test it with newer versions.\r\n\r\nAnd you are right. We need to consider to deprecate the support for 3.4 during the next months since it was deprecated in March, I think. 	2019-06-06 15:18:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692665	\N	Hi @FredaPinto , thank you for reporting this issue. \r\n\r\n> 2019-06-03 10:21:16,388 Can't create index http://localhost:9200/git (400)\r\n\r\nIt seems that you didn't have permission to create the git index. Which version of ELK and elasticsearch are you using ?\r\n\r\nI tried with the following docker-compose https://github.com/chaoss/grimoirelab-sirmordred/blob/master/README.md#source-code-and-docker and the master branch of ELK, and I didn't detect any problem. Please find below the params of p2o:\r\n```\r\n--enrich\r\n--index perceval_git_raw\r\n--index-enrich perceval_git\r\n-e https://admin:admin@localhost:9200\r\n--no_inc\r\n--debug\r\n--db-host 127.0.0.1\r\n--db-sortinghat test_sh\r\n--db-user root\r\ngit https://github.com/chaoss/grimoirelab-perceval\r\n```	2019-06-03 13:23:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692666	\N	Hi Valerio,\r\nThe elasticsearch is 7.1.1\r\nAnd i had installed grimoirelab through python library by using command pip3 install grimoirelab so it should be standard one that comes with grimoirelab 0.2.14\r\nI can't find ELK version ,could you please guide me to check same ?\r\n\r\nRegards,\r\nFreda\r\n	2019-06-03 16:41:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692667	\N	Please try with elasticsearch 6.1.0 (recent versions are not guaranteed to work).\r\nThe grimoirelab version is enough to know the version of ELK (I thought you were using only the ELK repository). Btw, you can check the version of ELK for grimoirelab 0.2.14 at: https://github.com/chaoss/grimoirelab/commit/6a922ab56f7b6ccb6209296f91a1dc033a0d0bcc#diff-db7d281f2bc6a16ae8cd42a319150ff6R6\r\n\r\nCheers,\r\nValerio	2019-06-03 16:59:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692668	\N	Hi @FredaPinto , were you able to resolve this issue ?	2019-06-05 12:18:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692669	\N	Hi Valerio,\r\n\r\nI uninstalled 7.1.1 and installed 6.1.4 but getting below error.\r\ncurl: (7) Failed to connect to localhost port 9200: Connection refused\r\nI am checking this if you know something about it please let me know.\r\nThank you.\r\n\r\nRegards,\r\nFreda	2019-06-05 19:18:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692670	\N	Sorry for the late reply, Freda. \r\nThe error is due because the port 9200 is already in use by another process in your system.\r\n\r\nyou can check the applications using ports with: `sudo netstat -tulpn`, more info at:\r\nhttps://www.cyberciti.biz/faq/unix-linux-check-if-port-is-in-use-command/	2019-06-07 08:32:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692671	\N	Besides, and just in case, update your grimoirelab version:\r\n\r\n```\r\npip install grimoirelab --upgrade\r\n```\r\n\r\nCurrent version is 0.2.23. You can find out your version with:\r\n\r\n```\r\ngrimoirelab --version\r\n``` 	2019-06-07 16:38:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692672	\N	Hi Valerio and Jesus,\r\n\r\nThanks for suggesting above steps but no luck error still exists.\r\n@valeriocos--> port is not occupied i checked given command.I looked up error and installed xpack even downgraded java jdk version.\r\n@jgbarah updated the grimioirelab version.\r\nThe error log of elasticsearch is as below:-\r\n[2019-06-08T11:54:48,100][ERROR][o.e.b.Bootstrap          ] Exception\r\norg.elasticsearch.ElasticsearchException: java.io.IOException: failed to read [id:20, legacy:false, file:/var/lib/elasticsearch/nodes/0/indices/wjnwtj4HQkSjNDmeRckFrg/_state/state-20.st]\r\n\tat org.elasticsearch.ExceptionsHelper.maybeThrowRuntimeAndSuppress(ExceptionsHelper.java:196) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.gateway.MetaDataStateFormat.loadLatestState(MetaDataStateFormat.java:334) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.common.util.IndexFolderUpgrader.upgrade(IndexFolderUpgrader.java:90) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.common.util.IndexFolderUpgrader.upgradeIndicesIfNeeded(IndexFolderUpgrader.java:128) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.gateway.GatewayMetaState.<init>(GatewayMetaState.java:87) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.node.Node.<init>(Node.java:421) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.node.Node.<init>(Node.java:245) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Bootstrap$5.<init>(Bootstrap.java:212) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Bootstrap.setup(Bootstrap.java:212) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Bootstrap.init(Bootstrap.java:322) [elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.init(Elasticsearch.java:121) [elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.execute(Elasticsearch.java:112) [elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.cli.EnvironmentAwareCommand.execute(EnvironmentAwareCommand.java:86) [elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.cli.Command.mainWithoutErrorHandling(Command.java:124) [elasticsearch-cli-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.cli.Command.main(Command.java:90) [elasticsearch-cli-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:92) [elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.bootstrap.Elasticsearch.main(Elasticsearch.java:85) [elasticsearch-6.1.4.jar:6.1.4]\r\nCaused by: java.io.IOException: failed to read [id:20, legacy:false, file:/var/lib/elasticsearch/nodes/0/indices/wjnwtj4HQkSjNDmeRckFrg/_state/state-20.st]\r\n\tat org.elasticsearch.gateway.MetaDataStateFormat.loadLatestState(MetaDataStateFormat.java:327) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\t... 15 more\r\nCaused by: java.lang.IllegalArgumentException: Unexpected field [mapping_version]\r\n\tat org.elasticsearch.cluster.metadata.IndexMetaData$Builder.fromXContent(IndexMetaData.java:1259) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.cluster.metadata.IndexMetaData$2.fromXContent(IndexMetaData.java:1305) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.cluster.metadata.IndexMetaData$2.fromXContent(IndexMetaData.java:1296) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.gateway.MetaDataStateFormat.read(MetaDataStateFormat.java:202) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\tat org.elasticsearch.gateway.MetaDataStateFormat.loadLatestState(MetaDataStateFormat.java:322) ~[elasticsearch-6.1.4.jar:6.1.4]\r\n\t... 15 more\r\n	2019-06-08 11:49:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1693161	\N	grimoirelab/reports moved to chaoss/grimoirelab-manuscripts	2018-01-18 23:48:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692674	\N	Hi valerio,\r\n\r\nI am not sure about that but i tried again uninstalling 6.1.4 and installing 7.1.1 that works fine with url but gives error when i try to create dashboard as before.\r\nI am checking for that error but no luck also i am trying to deploy via dockerhub the whole grimoirelab project.I will update you if that works for me.\r\nThank you.\r\n\r\nRegards,\r\nFreda Pinto	2019-06-10 22:52:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692675	\N	Hi @FredaPinto , any news about this issue ?  thanks :)	2019-06-12 18:59:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692676	\N	Hi Valerio,\r\n\r\nI have been trying to connect via dockerhub but facing issue with that too.\r\nCan you check if im my input is correct,i have followed the document still facing issue.\r\ncommand:-\r\nsudo docker run -p 127.0.0.1:5601:5601     -v $(pwd)/credentials.cfg:/override.cfg     -t grimoirelab/full\r\n\r\noutput:-\r\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:345: starting container process caused "process_linux.go:424: container init caused \\"rootfs_linux.go:58: mounting \\\\\\"/home/freda/credentials.cfg\\\\\\" to rootfs \\\\\\"/var/lib/docker/overlay2/f61a4c0aebec3e91213266223248dfdc173b591df868d436c463b124fe2c90f6/merged\\\\\\" at \\\\\\"/var/lib/docker/overlay2/f61a4c0aebec3e91213266223248dfdc173b591df868d436c463b124fe2c90f6/merged/override.cfg\\\\\\" caused \\\\\\"not a directory\\\\\\"\\"": unknown: Are you trying to mount a directory onto a file (or vice-versa)? Check if the specified host path exists and is the expected type.\r\n	2019-06-13 21:49:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692677	\N	Hi Freda,\r\n\r\nThe error should be related to the fact that the file `credentials.cfg` is missing.\r\n\r\nPlease try to create a file `credentials.cfg`, with the following content:\r\n```\r\n[github]\r\napi-token = <your-github-token>\r\n```\r\n\r\nand then execute again:\r\n```\r\nsudo docker run -p 127.0.0.1:5601:5601 -v $(pwd)/credentials.cfg:/override.cfg -t grimoirelab/full\r\n```	2019-06-14 07:37:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692678	\N	@FredaPinto you seem to be determined to get a GrimoireLab dashboard to work.  :smile:\r\n\r\nI ran into similar issues but I have been able to get a dashboard to work. I can offer a video call with you to trouble shoot issues together. Ping me at georglink@bitergia.com if you are interested.	2019-06-14 07:54:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692679	\N	@valeriocos definitely will try doing this and let you know.\r\n\r\n@GeorgLink :-thanks will reach out to you for some help :)	2019-06-14 12:25:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692680	\N	@FredaPinto please let us know if you need some help, or feel free to close this issue (in case you were able to create the dashboard).\r\n \r\nFeel also free to submit a PR to the [tutorial](https://github.com/chaoss/grimoirelab-tutorial), if you want to improve the documentation wrt how to create a dashboard.\r\n\r\nThanks :)	2019-06-16 16:16:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692681	\N	@valeriocos: I met with @FredaPinto today but we had technical issues connecting and will try to meet again tomorrow.	2019-06-17 17:50:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692682	\N	Hi @FredaPinto , how is it going with this issue, can we close it ?	2019-06-24 09:04:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692683	\N	Hi Valerio,\r\n\r\nI am trying different version of grimoirelab as suggested by @GeorgLink but facing different issue posted on Gitlab.\r\nI am trying that demo grimoirelab dashboard if it goes well i will close this issue or else i would post update on older method that i tried.\r\n\r\nRegards,\r\nFreda	2019-06-24 23:51:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692684	\N	Thanks @FredaPinto , let us know if we can help you in some way.	2019-06-25 07:04:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692685	\N	Hi All,\r\n I am closing this issue as the other solution worked finally.\r\nThanks to @GeorgLink for all the support and help and @valeriocos thanks a lot for your constant feedback and help.\r\n\r\nRegards,\r\nFreda Pinto	2019-06-26 17:01:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277257
1692686	\N	Great news! Thank you @FredaPinto , don't hesitate to ping us if you experience other problems.	2019-06-26 17:40:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692687	\N	It seems all changes in this pr are already in master, so closing this one. Thanks!	2019-06-03 17:05:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692688	\N	Developers and users were informed used GrimoireLab mailing list. The date to start with DCO was set to April 1st.\r\n\r\nI've just activated https://github.com/apps/dco for all GrimoireLab repositories. If everything is configured, I think we can close this issue and the series of issues openened in other repositories.	2019-04-01 00:08:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692689	\N	I've just added a note in `CONTRIBUTING.md` about this. I think we could close this issue once that pr, #190, is accepted.	2019-04-01 08:54:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692690	\N	Thanks @sduenas and @jgbarah 	2019-04-02 13:27:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692691	\N	@GeorgLink do you think we are done with this or is there anything else needed to close the issue?	2019-04-16 12:26:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692692	\N	Yes, thank you!	2019-04-16 13:27:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692693	\N	@jgbarah can we close this issue, thanks?	2019-03-29 13:34:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692694	\N	Yes, I think it is fixed in the latest release. Thanks!	2019-04-01 09:52:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692695	\N	Hey @dicortazar, Is this issue open for taking ? I would like to work on this.\r\nIf yes, can you let me know how to start with? 	2019-03-08 10:37:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1692696	\N	@apoorvkhare07 thanks for your interest!\r\nAre you applying for any of the GSoC projects or are you willing to work on this on your own? I'm asking as I can ask others that will be mentoring this.\r\n\r\nIn any case, the point about how to start is to mainly work on the Grimoire-ELK project that enriches the information. The enricher can be found at [1]. As you can see in lines such as [2] this is translating fields from the raw index to an enriched index through a dictionary.\r\n\r\nThus, what we have to do is to look in the raw index in each of the emails, what emails have a parent_id empty and then those are the emails starting threads :). Then we can list all of the emails that are answering this first 'root' email and we have the expected time.\r\n\r\nAnd finally there's a need for the incremental mode. As new emails come to the mailing list, there's a need to double check if those are answering an email that started a thread. If this is that first email then we calculate again the first time to answer.\r\n\r\nHope this helps!\r\n\r\n[Adding @sduenas to the loop in case he has some more ideas]\r\n\r\n[1] https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/mbox.py\r\n[2] https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/mbox.py#L125	2019-03-09 01:14:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1692697	\N	Hey @dicortazar, Thanks for the help and Yes, I am looking for applying on a GSOC project.\r\nI am working on this issue in the direction you gave. \r\nI was facing an issue regarding viewing of the tutorial on this link https://grimoirelab.gitbooks.io/tutorial. I think the tutorial is on an earlier version of gitbook so anyone with account on newer version of gitbook cant access that and new accounts cant be created on the older version. \r\nCan you help me with how can I get access to the tutorial or in case you need any help with porting of the tutorial to newer version, I would love to help. 	2019-03-09 14:44:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1692698	\N	@apoorvkhare07 please have a look at https://chaoss.github.io/grimoirelab-tutorial/.\r\n\r\nAdding @alpgarcia to the discussion as well.	2019-03-09 22:07:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1692699	\N	@dicortazar, @sduenas should we close this?	2019-03-22 10:46:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692700	\N	Not yet. I need to review the PR needed to upload panels and aliases with Mordred.	2019-03-22 11:24:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692701	\N	This feature was added to the last release: [0.2.14]( https://github.com/chaoss/grimoirelab/releases/tag/0.2.14).\r\n	2019-04-01 13:09:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692702	\N	Hi, I am pretty interested in this GSOC project! I will look into the micros soon.	2019-02-28 06:47:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277258
1692703	\N	Hi @VertexC, thanks for the interest!\r\n\r\nWe'll be more than happy to solve your questions (if any) and help you if needed.\r\n\r\nCheers,\r\nAlberto.	2019-03-05 08:33:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692704	\N	Hi @VertexC, thank you for your comment!\r\n\r\nWe are glad you are interested in the project, feel free to drop us any questions or comments you may have!\r\n\r\nBest, \r\nMiguel-√Ångel	2019-03-06 17:11:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277259
1692705	\N	Hola @alpgarcia y @mafesan ,\r\n¬øQu√© tal? A mi tambi√©n me interesa mucho esta idea para el Google Summer of Code :-)\r\nHe llegado aqu√≠ gracias a Manrique, que ha puesto en el Slack de Open Source Weekends el enlace a las ideas de GSoC.\r\n\r\n¬°Muchas gracias!\r\nSaludos,\r\nJacinto	2019-03-07 22:38:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277260
1692706	\N	Hi :)\r\nI'm Pranshu, a final year cs undergrad. Glad to see chaoss, can't wait to contribute in GSoC 2019! With my acquired python, advanced analytics, and ML skills acquired over the years from my data science startup work experience, I'm excited to finally use it for open source. This project seems the perfect place to start, have started working on the microtasks! Any tips/guidance apart from the ones above are welcome and will be very useful.\r\n\r\nBest,\r\nPranshu Diwan	2019-03-08 18:46:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277261
1692707	\N	Hello,\r\n\r\nI am interested in this project and I look forward to work on it @GSOC. I will take a look at the microtasks and start working on them.\r\n\r\nCheers,\r\nOctavian	2019-03-11 15:20:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277262
1692708	\N	Hello everyone!\r\n\r\nthanks for the interest. A good place to start, further than reading documentation, would be trying to use [micro mordred](https://github.com/chaoss/grimoirelab-sirmordred/blob/master/README.md#micro-mordred) to start retrieving some data.\r\n\r\nI usually work with [PyCharm CE](https://www.jetbrains.com/pycharm/) and Python virtual environments. Just clone and locally install all the repos in the requirements and you can start playing with it.\r\n\r\nThere are 3 options to get all the components you'll need up & running:\r\n* Installing them manually. You will need ElasticSearch, Kibana and a [SortingHat database](https://github.com/chaoss/grimoirelab-sortinghat).\r\n* Using docker compose [1]. It's the one I use, except for MariaDB, because I rely on a local MySQL database I already had.\r\n* Using a [GrimoireLab docker container](https://chaoss.github.io/grimoirelab-tutorial/sirmordred/container.html). By default it runs Mordred, so it may be useful for having some data, but maybe a bit confusing in our case (we want to use `micro.py` to control tasks and being able to easily modify and test code) \r\n\r\n\r\n[1] Here you have the yaml files I currently use in my daily work. Feel free to use another images instead:\r\n```\r\nelasticsearch:\r\n  image: bitergia/elasticsearch:6.1.0-secured\r\n  command: /elasticsearch/bin/elasticsearch -E network.bind_host=0.0.0.0\r\n  ports:\r\n    - "9200:9200"\r\n  environment:\r\n    - ES_JAVA_OPTS=-Xms2g -Xmx2g\r\n\r\nkibiter:\r\n  image: bitergia/kibiter:secured-v6.1.4-1\r\n  links:\r\n    - elasticsearch\r\n  ports:\r\n    - "5601:5601"\r\n  environment:\r\n    - ELASTICSEARCH_URL=https://elasticsearch:9200 \r\n```\r\nFor MariaDB it should be:\r\n```\r\nmariadb:\r\n  restart: on-failure:5\r\n  image: mariadb:10.0\r\n#  volumes:\r\n#    - /data/docker/storage/mariadb/mysql:/var/lib/mysql\r\n  expose:\r\n    - "3306"\r\n  ports:\r\n    - "3306:3306"\r\n  environment:\r\n    - MYSQL_ROOT_PASSWORD=\r\n    - MYSQL_ALLOW_EMPTY_PASSWORD=yes\r\n    - MYSQL_DATABASE=test_sh\r\n  command: --wait_timeout=2592000 --interactive_timeout=2592000 --max_connections=300\r\n  log_driver: "json-file"\r\n  log_opt:\r\n      max-size: "100m"\r\n      max-file: "3"\r\n```	2019-03-12 09:41:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692709	\N	Thanks to @valeriocos there is a new section in **sirmordred** README that may be useful for you: https://github.com/chaoss/grimoirelab-sirmordred#getting-started	2019-03-15 15:33:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692710	\N	Hi @alpgarcia ,\r\nI have started work on this idea's microtask, they are very interesting indeed, but I might need your help regarding timeline and goals to be achieved in 3 months period.Are you available on grimoirelab channel? Also I have created pull request in governance repo.	2019-03-17 09:45:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692711	\N	@alpgarcia @mafesan \r\n\r\nFor micro[3], in the [definitions](https://github.com/chaoss/metrics) ,\r\n- [Bus Factor](https://github.com/chaoss/metrics/blob/master/activity-metrics/bus-factor.md) and Pony Factor have the same definitions, I'm not sure what the difference between the two is.\r\nI'd like you to help me figure out.\r\n\r\nThanks !	2019-03-17 18:04:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277264
1692712	\N	> @alpgarcia @mafesan\r\n> \r\n> For micro[3], in the [definitions](https://github.com/chaoss/metrics) ,\r\n> \r\n> * [Bus Factor](https://github.com/chaoss/metrics/blob/master/activity-metrics/bus-factor.md) and Pony Factor have the same definitions, I'm not sure what the difference between the two is.\r\n>   I'd like you to help me figure out.\r\n> \r\n> Thanks !\r\n\r\nOops, that's was our mistake, these are two names to refer to the same factor. I've updated task description to fix this. Thanks for noting this!	2019-03-18 09:40:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692713	\N	> Hi @alpgarcia ,\r\n> I have started work on this idea's microtask, they are very interesting indeed, but I might need your help regarding timeline and goals to be achieved in 3 months period.Are you available on grimoirelab channel? Also I have created pull request in governance repo.\r\n\r\nThanks for the PR! I'm not usually there. If you don't mind, please write here your doubts. This way all students having same or similar questions will be in the loop too and we'll keep improving the task and the documentation all together.	2019-03-18 09:52:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692779	\N	Thanks a lot for your proposal and heads-up about this topic, but I think it is the other way around: usually we refer to it as "GrimoireELK" (or Gelk, for short), to avoid confusion with the ELK stack (Elasticsearch-Logstash-Kibana). In fact, GrimoireELK could be defined, to some etxtent, as "the modure of GrimoireLab working with the ELK stack).\r\n\r\nTherefore, I'm addressing this in reverse in #176, and that's why I'm closing thiis pull request.	2019-01-08 19:07:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692714	\N	Please checkout dashboard image i uploaded in this repo  https://github.com/miscellaneously/gsoc2019_grimoire and would be great if you can answer these:\r\n\r\n1. Would we just have to implement metrics available in chaoss workgroups or develop them from scratch?\r\n2. I just wanted to confirm here tht in microtask 4 by this statement\r\n> Use the number of lines of code changed per user\r\n\r\nyou mean sum of addedlines and removedlines property.  Should we build a new property for it because I couldn't find a way to add them on the fly, for adding visualization, as of now?\r\n\r\n3. Any source other than kibana docs to read more about visualizations, which you think might be useful?\r\n\r\n4. Although it is tough to generalize , but how many metrics do organization expect from students to be completed in gsoc period?	2019-03-18 14:40:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692715	\N	> Please checkout dashboard image i uploaded in this repo https://github.com/miscellaneously/gsoc2019_grimoire and would be great if you can answer these:\r\n> \r\n> 1. Would we just have to implement metrics available in chaoss workgroups or develop them from scratch?\r\n\r\nIf a metric is already defined, don't reinvent the wheel ;) \r\n\r\n(just add the reference to the definition to let us know what you are following, even if it is a definition that comes from other place, or even if it is your own definition)\r\n\r\n> 2. I just wanted to confirm here tht in microtask 4 by this statement\r\n> \r\n> > Use the number of lines of code changed per user\r\n> \r\n> you mean sum of addedlines and removedlines property. Should we build a new property for it because I couldn't find a way to add them on the fly, for adding visualization, as of now?\r\n> \r\n\r\nWell, these are just suggestions. Potentially you could define your own metrics :)\r\n\r\nYou can go for a field like in Git index or you can try to find a solution or workaround in Kibana. We want to keep it as open as possible to get several different solutions from you. Please don't feel this like an exam to get the perfect result, but as an exploratory task to see how you deal with these open problems.\r\n\r\n> 3. Any source other than kibana docs to read more about visualizations, which you think might be useful?\r\n\r\nI fear I learnt about Kibana by practice. Sometimes I find a blog post here or there on how to build a particular visualization that could teach some new stuff. For instance:\r\nhttps://www.elastic.co/blog/timelion-tutorial-from-zero-to-hero\r\n\r\nThere are some videos on Youtube too, but nothing I can personally recommend, just because I didn't use them before. \r\n\r\nHave a look at our panels in [Sigils](https://chaoss.github.io/grimoirelab-sigils/) and the WIP in [Bitergia Panel Collections](https://bitergia.gitlab.io/panel-collections/) to get ideas of what kind of visualizations can be built.\r\n\r\nAlso have in mind that Kibiter contains some open source visualizations created by @dlumbrer that are not available by default in Kibana (you can of course install them as plugins).\r\n\r\nGitLab shared a video from a session we had, as a company, to show how a dashboard can be built. It is based on their particular use cases, but you can have a look at it just in case it could be useful for you:\r\nhttps://www.youtube.com/watch?v=29RQkxL9Des\r\n\r\n> 4. Although it is tough to generalize , but how many metrics do organization expect from students to be completed in gsoc period?\r\n\r\nWe don't have a minimum, it depends more on quality and knowledge. Microtasks are there to let you show what you have learnt and, somehow, your abilities to solve problems related to this topic. We are going to review your work, no matter how many things you are done.\r\n\r\nIn a nutshell, we are not excluding anyone, we just try to find students that fit the requirements. Some people can decide to go for a micro task and go beyond what we wrote to show the things they are able to do it, while others could prefer to solve everything with less detail. At the end both could be more than enough.\r\n\r\n	2019-03-18 16:29:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692716	\N	Hi, I just completed my proposal, please have a look, https://docs.google.com/document/d/1IzX7zWt44C_55TWifNYCE8S93bYt4yX2hRW_Cxhiu_s/edit?usp=sharing and suggest changes if required either in approach or timeline projection.\r\n\r\nAlso I might complete micro task 1,4 in 2-3 days, and 5 one during proposal period starting form 25 mar.\r\n\r\nThanks\r\n	2019-03-20 09:12:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692717	\N	**Quick advice**: have a look to [CHAOSS dashboard](https://chaoss.biterg.io/app/kibana#/dashboard/Overview?_g=()) to see some metrics in action through a number of panels.\r\n	2019-03-21 08:44:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692718	\N	For those of you working on the microtasks, I would like to share a repo of another GSoC idea that is a good example on how you could organize your work:\r\nhttps://github.com/inishchith/chaoss-microtasks	2019-03-22 10:49:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692719	\N	@alpgarcia @mafesan \r\n\r\nI'm trying to get studies running from p2o, following [this document](https://github.com/chaoss/grimoirelab-elk/blob/master/doc/studies.md#running-studies-from-p2o), (without sortinghat database, ES Host and Kibiter running on the usual ports, and an [input index named git_aoc-raw](https://github.com/chaoss/grimoirelab-elk/blob/master/doc/studies.md#requirements)).\r\n \r\nI'm using the command,\r\n```\r\np2o.py --only-enrich --only-studies \\\r\n-e http://localhost:9200 \\\r\ngit https://github.com/grimoirelab/GrimoireELK.git\r\n```\r\nBut, running into the following error,\r\n```\r\n2019-03-27 22:51:08,031 Running only studies (no SH and no enrichment)\r\n2019-03-27 22:51:08,031 Error enriching ocean from git (https://github.com/grimoirelab/GrimoireELK.git): 'NoneType' object is not iterable\r\nTraceback (most recent call last):\r\n  File "/home/dhruv/.local/share/virtualenvs/chaoss-stable-lTaV2Km1/lib/python3.7/site-packages/grimoire_elk/elk.py", line 595, in enrich_backend\r\n    do_studies(ocean_backend, enrich_backend, studies_args)\r\n  File "/home/dhruv/.local/share/virtualenvs/chaoss-stable-lTaV2Km1/lib/python3.7/site-packages/grimoire_elk/elk.py", line 491, in do_studies\r\n    selected_studies = [(s['name'], s['params']) for s in studies_args if s['type'] == study.__name__]\r\nTypeError: 'NoneType' object is not iterable\r\n2019-03-27 22:51:08,031 Done git \r\n2019-03-27 22:51:08,031 Enrich backend completed\r\n2019-03-27 22:51:08,031 Finished in 0.00 min\r\n```\r\n\r\nI suspect I'm missing/using wrong params for the command. It'll be great if you could help me with a correct/working example command.	2019-03-27 17:55:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277264
1692720	\N	Hi @dhruv-chauhan thank you for reporting this. Studies are not supported by p2o, please use micro mordred: https://github.com/chaoss/grimoirelab-sirmordred#micro-mordred.	2019-03-27 18:58:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692721	\N	hi @alpgarcia and other maintainers,\r\nI made few changes to proposal as per @alpgarcia comments, however I strongly feel they still need some changes,can you review it and suggest more changes as per requirements.Also as per your suggestions I changed microtasks repo and have made updates for mt1 and mt2, and close to complete mt3 and mt4. \r\nthanks.\r\n\r\n https://docs.google.com/document/d/1IzX7zWt44C_55TWifNYCE8S93bYt4yX2hRW_Cxhiu_s/edit?usp=sharing	2019-03-28 16:13:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692722	\N	Hi! I'm working on microtask 2. I have a question, is the [study_ceres_aoc.py](https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/study_ceres_aoc.py)\r\nsupposed to create the index for us to work on the dashboard directly? Or we should write some code to make the script work?\r\n\r\n-Which repositories' data should we retrieve? Every single one in the chaoss github account? or the analysis is going to be from an specific one?	2019-03-31 02:44:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277265
1692723	\N	> hi @alpgarcia and other maintainers,\r\n> I made few changes to proposal as per @alpgarcia comments, however I strongly feel they still need some changes,can you review it and suggest more changes as per requirements.Also as per your suggestions I changed microtasks repo and have made updates for mt1 and mt2, and close to complete mt3 and mt4.\r\n> thanks.\r\n> \r\n> https://docs.google.com/document/d/1IzX7zWt44C_55TWifNYCE8S93bYt4yX2hRW_Cxhiu_s/edit?usp=sharing\r\n\r\nThank you for the updates @miscellaneously. I have added some comments to your document, please have a look at them.\r\n\r\nBest!	2019-04-01 10:27:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277259
1692724	\N	Hi @quirroone,\r\n\r\n> Hi! I'm working on microtask 2. I have a question, is the [study_ceres_aoc.py](https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/study_ceres_aoc.py)\r\n> supposed to create the index for us to work on the dashboard directly? Or we should write some code to make the script work?\r\n\r\nGrimoireLab's code do generate ES indexes, but you have to apply the right configuration from [micro mordred](https://github.com/chaoss/grimoirelab-sirmordred/blob/master/README.md#micro-mordred).\r\n\r\nPlease have in mind that the goal is to generate a dashboard from the existing code and extend it to improve the dashboard's content.\r\n\r\n> -Which repositories' data should we retrieve? Every single one in the chaoss github account? or the analysis is going to be from an specific one?\r\n\r\nThis is your choice, there is no specific requirement for the repositories to use for the analysis. We recommend you to start with one or two repositories to make sure that all is working as expected. Then, you can use a wider set of repositories, for instance the set from CHAOSS project. Here is a link to the **sources** file that would be needed for it: https://gitlab.com/Bitergia/c/CHAOSS/sources/blob/master/projects.json\r\n\r\nBest!\r\n\r\n	2019-04-01 10:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277259
1692783	\N	> Is this issue somehow related to: [chaoss/grimoirelab-perceval#429 (comment)](https://github.com/chaoss/grimoirelab-perceval/issues/429#issuecomment-422724682) ?\r\n\r\nYes, it might be. I've seen that the `base_url`I've used for testing with Perceval was wrong (`gnome.gitlab.org`) instead of `gitlab.gnome.org`	2018-12-10 13:39:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692893	\N	@acs, please, let me know if the last commit fixes everything, and if you find my proposal of leaving those two dictionaries for now as acceptable. If not, just let me know and I will make that change too.	2017-10-09 21:53:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692725	\N	Okay thanks for that! Right now I have a better understanding, but I'm still not able to generate the Index. I understand that I need a config file and another for projects and I'm trying to generate the index with this command which comes in the [micro mordred](https://github.com/chaoss/grimoirelab-sirmordred/blob/master/README.md#micro-mordred) documentation just to test\r\n`micro.py --raw --enrich ./setup.cfg --backends git `\r\n but can't achieve anything. Is there a guide to generate a .cfg file?\r\n\r\nAnother thing that i'm confused about is the way in which the [study_ceres_aoc](https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/study_ceres_aoc.py) is going to generate the index. Do I need to run it like a normal python script with the same parameters used for the `micro.py --raw --enrich ./setup.cfg --backends git ` command?\r\n\r\nThanks!	2019-04-02 00:17:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277265
1692726	\N	@quirroone are you getting any error message?\r\n\r\nhave you added a valid API token for GitHub to the config file?\r\nsee lines saying:\r\n```\r\napi-token = xxxx\r\n```	2019-04-02 07:20:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692727	\N	@quirroone,\r\n\r\n@valeriocos just told me there was an error in micro mordred documentation, the line you are trying to use should be (documentation has been updated accordingly):\r\n```\r\nmicro.py --raw --enrich --cfg ./setup.cfg --backends git \r\n```	2019-04-02 07:43:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692728	\N	Yes, I actually changed that but I'm receiving this error\r\n`[2019-04-02 05:34:15,980 - urllib3.connectionpool - DEBUG] - Starting new HTTPS connection (6): localhost:9200\r\n[2019-04-02 05:34:15,981 - urllib3.util.retry - DEBUG] - Incremented Retry for (url='/'): Retry(total=15, connect=15, read=8, redirect=5, status=None)`\r\n\r\nThis is my current setup.cfg file:\r\n`\r\n[general]\r\nshort_name = Grimoire\r\nupdate = false\r\nmin_update_delay = 10\r\ndebug = true\r\nlogs_dir = logs\r\nbulk_size = 100\r\nscroll_size = 100\r\nmenu_file = ../menu.yaml\r\naliases_file = ../aliases.json\r\n\r\n[projects]\r\nprojects_file = ./projects.json\r\n\r\n[es_collection]\r\nredis_url = redis://localhost/8\r\nurl = https://admin:admin@localhost:9200\r\n\r\n[es_enrichment]\r\nurl = https://admin:admin@localhost:9200\r\n\r\n[sortinghat]\r\nhost = mariadb\r\nuser = \r\npassword = \r\ndatabase = grimoirelab_sh\r\nload_orgs = true\r\norgs_file = data/orgs_sortinghat.json\r\nidentities_api_token = \r\nidentities_file = [data/perceval_identities_sortinghat.json]\r\naffiliate = true\r\nunaffiliated_group = Unknown\r\nautoprofile = [customer,git,github]\r\nmatching = [email]\r\nsleep_for = 120\r\nbots_names = [Beloved Bot]\r\n\r\n[panels]\r\nkibiter_time_from= "now-30y"\r\nkibiter_default_index= "gitlab"\r\nkibiter_url = http://localhost:5601\r\ncommunity = true\r\ngitlab-issues = true\r\ngitlab-merges = true\r\ngithub-repos = true\r\n\r\n[phases]\r\ncollection = true\r\nidentities = true\r\nenrichment = true\r\npanels = true\r\n\r\n[git]\r\nraw_index = git_chaoss\r\nenriched_index = git_chaoss_enriched\r\nlatest-items = true\r\ncategory = commit\r\nstudies = [enrich_demography:git, enrich_areas_of_code:git, enrich_onion:git]\r\n\r\n[github]\r\nraw_index = github_issues_chaoss\r\nenriched_index = github_issues_chaoss_enriched\r\napi-token = '4fb813308ec1b88e677'\r\nsleep-for-rate = true\r\nno-archive = true\r\ncategory = issue\r\nsleep-time = 300\r\n\r\n[github:pull]\r\nraw_index = github_pulls_chaoss\r\nenriched_index = github_pulls_chaoss_enriched\r\napi-token = '4fb813308ec1b88e677'\r\nsleep-for-rate = true\r\nno-archive = true\r\ncategory = pull_request\r\nsleep-time = 300\r\nstudies = [enrich_onion:github]\r\n\r\n[github:repo]\r\nraw_index = github_pulls_chaoss\r\nenriched_index = github_repo_enriched\r\ncategory = repository\r\nno-archive = true\r\n\r\n[enrich_demography:git]\r\ndate_field = utc_commit\r\nauthor_field = author_uuid\r\n\r\n[enrich_areas_of_code:git]\r\n#no_incremental = true\r\nin_index = git_chaoss\r\nout_index = git-aoc_chaoss_enriched\r\n\r\n[enrich_onion:git]\r\nin_index = git_chaoss_enriched\r\nout_index = git-onion_enriched\r\ncontribs_field = hash\r\nno_incremental = false\r\n\r\n[enrich_onion:github]\r\nin_index_iss = github_issues_chaoss_enriched\r\nin_index_prs = github_pulls_chaoss_enriched\r\nout_index_iss = github_issues_onion-enriched\r\nout_index_prs = github_prs_onion-enriched\r\ndata_source_iss = github-issues\r\ndata_source_prs = github-prs\r\n\r\n[jenkins]\r\nraw_index = jenkins_raw\r\nenriched_index = jenkins_enriched\r\nno-archive = true\r\n\r\n[gitlab:issue]\r\nraw_index = test_gitlab-issue-raw\r\nenriched_index = test_gitlab-issue\r\napi-token = '4fb813308ec1b88e677'\r\nno-archive = true\r\nsleep-for-rate = true\r\n\r\n[gitlab:merge]\r\nraw_index = test_gitlab-merge-raw\r\nenriched_index = test_gitlab-merge\r\napi-token = '4fb813308ec1b88e677'\r\nno-archive = true\r\ncategory = merge_request\r\nsleep-for-rate = true\r\n`\r\n\r\nThis is my current setup.cfg file. I removed half of the characters of the API key to paste it here, just wanted to know if I'm typing it right. I created a personal access token on github with all the permissions	2019-04-02 11:40:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277265
1692729	\N	Looking at your log lines it seems micro mordred is not finding the ElasticSearch server.\r\n\r\n@quirroone it seems ElasticSearch is not responding. Have you checked the connection at https://admin:admin@localhost:9200 after initializing the docker compose file (see https://github.com/chaoss/grimoirelab/issues/183#issuecomment-471926555)?\r\n	2019-04-03 09:19:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692730	\N	Hi @alpgarcia ,\r\nI'm very much interested in this GSoc Idea. \r\nI have previously worked on elasticsearch and mongodb, syncing my mongodb data with elastic indices.\r\nLooking forward to completing the microtasks. Any resources that you can suggest on using grimoirelab \r\n\r\nThank you	2019-04-05 13:09:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277266
1692731	\N	hi @alpgarcia, @mafesan ,\r\nPlease review draft before final submission,although I made changes as per your comments, if something is amiss, I would be happy to know and improve it.	2019-04-09 04:29:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692732	\N	hey @alpgarcia , @mafesan \r\nI had submitted my proposal for this idea, and currently been working on kibana visualisations, learning from documentation and some other sources. I don't have any email or any other method to contact regarding review of my proposal submitted, would you please share any communication channel, appropriate to your method of interaction with students?\r\n\r\nDo I need to make any updates regarding review proposal?\r\n\r\nThanks\r\n	2019-04-28 15:22:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692733	\N	Hello @miscellaneously,\r\n\r\nthe reviews are done through the GSoC infrastructure. The selection process is currently in progress and takes into account all proposals sent to CHAOSS organization ideas. Selected students for CHAOSS projects will be contacted directly by Google.	2019-04-29 08:48:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692734	\N	hi @alpgarcia @mafesan \r\n\r\nWell, thanks for so much transparency and community buildup so far, because I don't know why my proposal was rejected or what improvements I could have done, and this happening even when your organization was literally created for open source health and encouragement. \r\n\r\nWith your novel innovation of github issue page as primary communication channel between members, you guys must be feeling proud.I mean who needs mailing list, email addresses or irc, when github issue page is there, I wonder if this is also the way your organization's discussion happening between developers.\r\n\r\nWithout proper review and discussion, how do you guys believe others would understand your expectation and just come up with out of box ideas for visualization for metrics that aren't defined yet.I kind of start interacting with organization from mar 17 and after two months I don't know any email,chatroom where I can contact concerned developers other than posting here, well i can only say if, this, your method is so good for public record and future reference, why other OS organizations are still stuck with mailing lists,irc or in general why did ever slack,other similar platforms were developed if this "forum type communication" was to be sole method.\r\n\r\nI am sad about proposal rejection, and i totally blame it on me,however, I feel more disappointed for lack of proper communication channel. I understand you stand strongly for your privacy, but if you are expecting to be mentoring a project in open source community, you might have to open up slightly more and if this is how you guys stand for transparency, community development and all metrics your organization have developed, one does not need to wonder, why contributions are not coming from people outside the organization.I know it because I pulled this repo and other grimoirelab repos.\r\n\r\nThanks to my rejection, now I know another interesting thing, don't rely on faux advocates of open source for any opportunity to get yourself familiar and contribute to OSS. If possible just pass up them for other organizations.\r\n\r\nI do hope this message stays for next year students, or you might have to answer twice to same query, defeating your principle motto.\r\n\r\n	2019-05-07 10:39:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277263
1692735	\N	Thanks a lot for your comments, @miscellaneously. I'm sorry that you dind't find the communication channels provided as appropriate for this task. I personally take not of your opinions, and I'm sure that we as a commuity will do so. Thanks also for your interest in our project, and for taking the time to share your thoughts with us.	2019-05-07 21:59:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692884	\N	@jgb it is pretty hard to respond you to all the comments above. As we have talked this morning, we can approve the PR and start working with new PRs to work in above issues.\r\n\r\nWhat do you think? You can then open new issues using the ticketing system in GitHub and we can fix them.	2017-10-27 16:53:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692736	\N	> Well, thanks for so much transparency and community buildup so far, because I don't know why my proposal was rejected or what improvements I could have done, and this happening even when your organization was literally created for open source health and encouragement.\r\n\r\nYou are totally right on this, this is my first year on this and I also missed a way to communicate some feedback on your final proposal to let you know what we had expected. \r\n\r\nWe basically decided the selected students based not only on their proposals, but the work they did, and in this case other students works were more complete that yours. Basically they were able to provide better solutions to the proposed micro tasks. Most of them sent also a number of PRs to several projects.\r\n\r\n\r\n> I am sad about proposal rejection, and i totally blame it on me,however, I feel more disappointed for lack of proper communication channel. I understand you stand strongly for your privacy, but if you are expecting to be mentoring a project in open source community, you might have to open up slightly more and if this is how you guys stand for transparency, community development and all metrics your organization have developed, one does not need to wonder, why contributions are not coming from people outside the organization.I know it because I pulled this repo and other grimoirelab repos.\r\n\r\nI'm particularly disapointed about your message because we reviewed your work, adding public comments to your draft in Google docs and we tried to answer questions here.\r\n\r\nMaybe we could have another communication channels as it seems it didn't work and you feel you were alone in your way. \r\n\r\n> I do hope this message stays for next year students, or you might have to answer twice to same query, defeating your principle motto.\r\n\r\nIt is not about answering twice, it is about of having the answer publicly available for all students in the same place.\r\n\r\n\r\n\r\n	2019-05-08 08:33:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692737	\N	Thank you for your feedback @miscellaneously, though I am sorry to read your comments.\r\n\r\nI would like to add some clarifications. You said there was no proper review and discussion, but your questions were answered and your document was reviewed by two different people. As a personal advice for future contributions, during the review I missed more documentation about the work you did.\r\n \r\nHaving said that, thanks for your time and effort. Please don't miss the opportunity to contribute to CHAOSS! Here are some ideas where you can contribute:\r\n- There are some issues for specific projects where you can help (for instance, https://github.com/chaoss/grimoirelab-perceval/issues/432).\r\n- You will find more generic issues from [grimoirelab](https://github.com/chaoss/grimoirelab) and [grimoirelab-tutorial](https://github.com/chaoss/grimoirelab-tutorial) repositories, affecting to several projects under CHAOSS. \r\n- Any ideas you may have to improve the platform are more than welcome!	2019-05-08 12:16:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277259
1692738	\N	Why is Pycharm necessary? Does it have something to do with Graal or SoftwareHeritage? 	2019-02-09 06:08:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692739	\N	Hi @Polaris000 sorry for the late reply. Pycharm is not related to Graal or SoftwareHeritage, however is the IDE we commonly use with GrimoireLab. It has a good debug mode and allows to create a virtual env where to install external packages. Furthermore, it provides a mechanism to define a project structure (which allows to execute the source code of different packages without installing them via pip), so you can easily work on features that may require changes in several GrimoireLab components at the same time.\r\nWhich IDE are you familiar with?	2019-02-10 14:49:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692740	\N	Thanks for the reply! I used  pycharm in 2017 and 2018, mainly for basic data analytics and backend web development with django. \r\nI was just curious as to why you specifically mentioned pycharm, though I agree with your logic. Pycharm is indeed a powerful tool.\r\nAs of now I don't use an IDE, just a text editor (sublime text). Though I do miss out on several features, I love the simple lightweight experience of sublime  text.	2019-02-10 18:10:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692741	\N	I'm interested in this Project and have been working on the microtasks.\r\n\r\n@jgbarah @valeriocos I had some doubts though.\r\n\r\n1. Microtask [ 0, 1 & 5 ] are mostly related to environment setup related to the tool and getting familiarized with it. How do i show the work on my Microtasks repository, a `Readme.md` file with some steps?\r\n2. Had to similar doubt as mentioned in [this](https://github.com/chaoss/wg-gmd/issues/81#issuecomment-470081357) thread about sharing our work.\r\n\r\nThanks\r\n	2019-03-06 15:23:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692742	\N	Thank you @inishchith for your interest in this idea.\r\n\r\nFor task 0 it is not needed to show something. WRT tasks 1 and 5, a screenshot of the configurations should be enough, something like the image below, for instance\r\n![captura de pantalla de 2019-03-06 16-32-45](https://user-images.githubusercontent.com/6515067/53892987-9fc98180-402d-11e9-8e65-dc1dc6c72c4d.png)\r\n\r\nWRT 2., you can work on a private repo if it suits you. What do you think @jgbarah ?\r\n	2019-03-06 15:37:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692743	\N	@valeriocos Thanks for the response üëç \r\n	2019-03-06 17:16:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692744	\N	@jgbarah @valeriocos @aswanipranjal \r\nI've worked on the Microtasks mentioned above and would be looking out for improvements on it from here on and soon will start working on the proposal. I had some questions .\r\n\r\n1. One of the aims mentioned "Evaluating the implementation with projects of different sizes", I'm unsure if i understand this clearly, can you please elaborate on this?\r\n2. I've read through the discussion [here](https://github.com/chaoss/governance/issues/86) . I'm planning to make my `Microtasks` repository public before the submission for proposal starts, is there any way we can get some feedback on the tasks we've performed?\r\n\r\nThanks	2019-03-14 17:51:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692745	\N	great @inishchith !\r\n\r\nwrt 1, the idea is to take projects (e.g., github repositories) made of 1000, 10000 or more commits and benchmark the time needed by graal to process them. Ideally, this will allow to better understand where optimization efforts should be applied in the future.\r\ndoes this sound more clear?\r\n\r\nwrt 2. sure! if you point us to your repo (public or private), we will have a look and give feedback.\r\nis it ok for you?	2019-03-14 18:08:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692746	\N	@valeriocos Thanks for the response.\r\n>wrt 1, the idea is to take projects (e.g., github repositories) made of 1000, 10000 or more commits and benchmark the time needed by graal to process them. Ideally, this will allow to better understand where optimization efforts should be applied in the future.does this sound more clear?\r\n\r\nYes, Thanks ;)\r\n>wrt 2. sure! if you point us to your repo (public or private), we will have a look and give feedback.\r\nis it ok for you?\r\n\r\nI've got a private repository as of now. Do i add mentors as collaborators? if there's any other way i could give access, please do let me know.\r\n\r\n	2019-03-14 18:13:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692747	\N	yes, add us as collaborators.\r\nthank you!	2019-03-14 20:31:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692748	\N	Hii, I am Sumit Kumar Jangir, I am really interested in this project and have done some microtasks as well and will try to solve all.	2019-03-14 20:54:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277270
1692749	\N	welcome @sumitskj ! don't hesitate to ping us if you have some questions or need feedback on your microtasks.	2019-03-14 21:58:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693391	\N	Please have a look @jgbarah.	2019-06-28 10:01:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692750	\N	Hi! So I've been going through the tutorial. When I run Kibiter (Which I decided to use over Kibana), I get the following warning:\r\n\r\n`[warning] You're running Kibana 6.1.4-3 with some different versions of Elasticsearch. Update Kibana or Elasticsearch to the same version to prevent compatibility issues: v6.1.0 @ 127.0.0.1:9200 (127.0.0.1)`\r\n\r\nI am running [Kibiter community-v6.1.4-3](https://github.com/chaoss/grimoirelab-kibiter/releases/tag/community-v6.1.4-3) which is based on Kibana 6.1.0. So, I decided to install ElasticSearch 6.1.0 as well. Was I supposed to install some other version? The [ElasticSearch support matrix](https://www.elastic.co/support/matrix#matrix_compatibility) says that all 6.1.x versions of ElasticSearch are compatible with all 6.1.x versions of Kibana. Is there anything I can (or should) do to take that warning away? 	2019-03-15 04:21:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277271
1692751	\N	Hi @apoorvaanand1998 sorry for the late reply. Ideally ElasticSearch and Kibana should have the same versions (at least major and minor), however some time ago we decided to use Kibana 6.1.4 to benefit of some new features. You can ignore the warning, since it doesn't break anything in the platform.\r\n\r\nBtw, I have prepared some docs to get started with grimoirelab (https://github.com/chaoss/grimoirelab-sirmordred/blob/master/README.md#getting-started). Hope this helps (and any feedback is welcome).	2019-03-15 10:56:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692752	\N	@valeriocos I've added all the mentors as collaborators to the repository as you suggested. Looking forward for suggestions ;)\r\nThanks.	2019-03-15 13:54:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692753	\N	Hi @valeriocos, I am very interested in this project and have already completed several microtasks.\r\nHowever, when I was doing microtask 6, I encountered a problem and need your help.\r\nI have already successfully created a Python script to execute Graal via its Python interface using the CoCom backends. \r\nUnfortunately, when I was trying CoLic backends, I initialized CoLic object with function : `CoLic(uri=repo_uri, git_path=repo_dir, exec_path=path)`, **but I don't know what parameter 'exec_path' means**. \r\nI have tried a lot, but this problem remains unsolved. Could you help me? Thank you very much.	2019-03-16 14:34:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277272
1692754	\N	@SunflowerPKU `CoLic` backend uses `ScanCode` and `Nomos` tools in order to process license related information. \r\n`exec_path` is the executable path of the particular tool. You can install them using [these instructions](https://github.com/chaoss/grimoirelab-graal#how-to-installcreate-the-executables).	2019-03-16 14:42:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692755	\N	Hi @SunflowerPKU, thank you for your interest in this project.\r\n\r\nThe `exec_path` is the local path of the executable of `nomos` or `scancode` (the tools currently supported by `CoLic`). For instance, if you plan to use nomos, you should:\r\n- clone the repo: https://github.com/fossology/fossology/tree/master/src/nomos\r\n- follow the instructions at: http://archive15.fossology.org/projects/fossology/wiki/Nomos_Test_Cases#standalone-Nomos to get the `nomossa` executable\r\n- set the local path of `nomossa` to `exec_path` (e.g., `/home/graal-libs/nomossa`)\r\n\r\nIf you plan to use scancode, you should:\r\n- clone the repo or download one of the releases here: https://github.com/nexB/scancode-toolkit/releases\r\n- set the local path of `scancode` to `exec_path` (e.g., `/home/graal-libs/scancode-toolkit/scancode`)	2019-03-16 14:49:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692756	\N	sorry @inishchith I have just seen your message	2019-03-16 14:49:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692757	\N	@valeriocos I was doing microtask 8 and I got stuck at how to checkout at a given commit SHA. I searched graal documentation and other things but I didn't get it. Can you help?	2019-03-16 18:54:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277270
1692758	\N	Hi @sumitskj\r\nplease have a look at these methods: https://github.com/chaoss/grimoirelab-graal/blob/master/graal/graal.py#L316  and https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/git.py#L1294    \r\n\r\nHope this helps	2019-03-16 19:39:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692759	\N	@valeriocos \r\n\r\n> Hi @sumitskj\r\n> please have a look at these methods: https://github.com/chaoss/grimoirelab-graal/blob/master/graal/graal.py#L316 and https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/git.py#L1294\r\n> \r\n> Hope this helps\r\n\r\nThanks it worked	2019-03-17 10:32:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277270
1692760	\N	@valeriocos @jgbarah I have done the microtasks and I have also made a private repo to show what I have done. Can I add you both the mentors as collaborators to my repo, to give me feedback on any improvements that can be made.	2019-03-21 20:38:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277270
1692761	\N	@sumitskj feel free to add me as collaborator, thank you	2019-03-22 08:33:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692762	\N	@jgbarah @valeriocos \r\nOne of the aims mentioned for the project idea is "Producing analytics with Graal data and including them in Sigils".\r\nWhat i understood from this is, we're expected to create Kibana dashboards related to analytics produced using data retrieved from Graal and import the panels to [grimoirelab-sigils](https://github.com/chaoss/grimoirelab-sigils).\r\n\r\nWhen i was exploring the codebase, i found out that [`e2k.py`](https://github.com/chaoss/grimoirelab-elk/blob/845a6f10699a8d104eb29e6f2bbf175df0e2d416/utils/e2k.py) script 's `create_dashboard` method facilitates creation of kibana dashboard from Enriched indexes.\r\nBut the import of the [method](https://github.com/chaoss/grimoirelab-elk/blob/845a6f10699a8d104eb29e6f2bbf175df0e2d416/utils/e2k.py#L30) is invalid as it's defined under `kidash.py` script of [grimoirelab-kidash](https://github.com/chaoss/grimoirelab-kidash) package.\r\nOther way is to use [grimoirelab-sirmordred](https://github.com/chaoss/grimoirelab-sirmordred).\r\n\r\nPlease do let me know if there's something i missed out or there's a different way to create a dashboard. :)\r\nThanks	2019-03-24 14:44:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692781	\N	It seems that Perceval fails to get the data too:\r\n```\r\nfrom datetime import datetime\r\nfrom perceval.backends.core.gitlab import GitLab\r\ndata_repository = GitLab(base_url='https://gnome.gitlab.org/', owner='GNOME', repository='Nautilus', api_token='*****', sleep_for_rate = True)\r\nitems = []\r\nfor item in data_repository.fetch(from_date = datetime.strptime('2018-08-01', '%Y-%m-%d')):\r\n    items.append(item)\r\nprint('gitlab items: {}'.format(len(items)))\r\n```\r\n\r\nThe ouput I get is:\r\n```\r\nConnectionError: HTTPSConnectionPool(host='gnome.gitlab.org', port=443): Max retries exceeded with url: /api/v4/projects/GNOME%2FNautilus (Caused by NewConnectionError('<urllib3.connection.VerifiedHTTPSConnection object at 0x7fa40cdfbc88>: Failed to establish a new connection: [Errno -2] Name or service not known',))\r\n```	2018-12-10 13:07:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692885	\N	OK, let's do it that way. But please, try to keep the above modifications in mind to have them implemented as soon as possible.	2017-10-30 08:00:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692763	\N	Hi @inishchith , the dashboards are created directly in Kibiter (soft-fork of Kibana) and then exported with [kidash](https://github.com/chaoss/grimoirelab-kidash), For example, the command below allows to export a dashboard with id `f2f2f0d0-4bcc-11e9-a2bb-75841b49fd70` located in the ElasticSearch at `https://admin:admin@localhost:9200`. The exported dashboard will be saved as `scava-test.json`\r\n\r\n```\r\nkidash -g\r\n-e https://admin:admin@localhost:9200\r\n--dashboard f2f2f0d0-4bcc-11e9-a2bb-75841b49fd70\r\n--export scava-test.json\r\n```\r\n\r\nFor testing the platform, we currently use [micro-mordred](https://github.com/chaoss/grimoirelab-sirmordred/blob/master/utils/micro.py), which provides the same functionalities of mordred except for the scheduling. Thus, micro-mordred also allows to upload the dashboards related to a setup.cfg (by calling Kidash). They are loaded from [Sigils](https://github.com/chaoss/grimoirelab-sigils/tree/master/json), which contains all dashboards provided by GrimoireLab.\r\n\r\nIf you want to know more about micro-mordred, please have a look at: https://github.com/chaoss/grimoirelab-sirmordred#micro-mordred\r\nIf you plan to use pycharm, you should clone mordred, create a Pycharm project with it and add to the project structure the Grimoirelab components (see the image below).\r\n\r\n![Captura de pantalla de 2019-03-24 17-34-48](https://user-images.githubusercontent.com/6515067/54882536-4d74c700-4e5b-11e9-8fed-211a0942e688.png)\r\n\r\nLet me know if you have more questions :)\r\n	2019-03-24 16:46:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692764	\N	@valeriocos Thanks for the response. The configuration really helped :)\r\nAs i am about to start working on a Proposal for the project, i had a thought over.\r\n- As it's known that Graal provides analysis related to code complexity, quality, dependencies, security and licensing. Defining and calculating metrics related to source code analysis data provided by Graal needs some clarity and discussion as there are only a few defined under [CHAOSS metrics](https://github.com/chaoss/metrics). Some of them being related to LOC, Licenses. and some missing related to Code Complexity.\r\n- IMO, there has to be a proper discussion related to this. Is it expected to be discussed with mentors during the period? If not can you please give a gist of the idea. \r\n\r\nPlease do let me know if i got something wrong here.\r\nThanks.	2019-03-25 16:10:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692765	\N	Thank you @inishchith for raising this point. I'd say that it will be discussed with mentors during the period. Probably we could start with some metrics already defined in CHAOSS (LOC, licenses), and then based on the data extracted with Graal, add more (e.g., code complexity) or refine the existing ones.\r\n\r\nWe could also focus just on some category metrics, for instance only the ones about licenses and code complexity since the corresponding backends are agnostic wrt the programming languages used in a repository, thus the work done during GSoC could be applied to a wide range of projects.\r\n\r\nWhat do you think @jgbarah @inishchith  ?	2019-03-25 18:40:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692766	\N	@valeriocos Thanks for the response. This gives some clarity. And Yes, discussion with mentors would also be beneficial during the period.\r\n\r\n> We could also focus just on some category metrics, for instance only the ones about licenses and code complexity since the corresponding backends are agnostic w.r.t the programming languages used in a repository, thus the work done during GSoC could be applied to a wide range of projects.\r\n\r\nYes. I feel this can be incremental even during the GSoC period.  \r\n- Also is there any way we could get our proposals reviewed by the mentors before the application period ends ( after we add our details to GSoC Interested students) ?\r\n\r\nThanks\r\n\r\n	2019-03-26 14:04:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692767	\N	Sorry @inishchith for the late reply. I guess it is possible, any thoughts @jgbarah ?	2019-03-27 18:05:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692768	\N	@valeriocos @jgbarah  Can we have an issue ticket open at [Graal](https://github.com/chaoss/grimoirelab-graal) in order to have discussions related to improvements in existing analyzers and for addition of new ones under corresponding backends, I feel that would work as a guide for future work.\r\nIn case if there's some alternate way of having such discussion, please do let me know.\r\nThanks.	2019-03-30 07:06:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692769	\N	Sure @inishchith ! Thanks\r\n\r\nThe issue for improvements is here: https://github.com/chaoss/grimoirelab-graal/issues/18	2019-03-30 08:22:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692770	\N	@valeriocos @jgbarah can you review my proposal https://docs.google.com/document/d/1K2i_nPKQqTCFxi6mNhQGll83Mr-C4KqTaK3W2tL7Qvk/edit?usp=sharing	2019-04-05 12:42:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277270
1692771	\N	I've submitted my Final Proposal for the project.\r\nAll the best to other candidates :)	2019-04-09 17:01:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692772	\N	@valeriocos @jgbarah @aswanipranjal\r\nI had thought of opening a discussion regarding defining the metrics related to the source code, Is it okay if we open an issue ticket at the [metrics](https://github.com/chaoss/wg-gmd/tree/master/metrics) repository for having further discussions related to it with the working group.\r\n\r\nLet me know what you think :)\r\nThanks	2019-04-16 19:18:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692773	\N	Thank you @inishchith , that's a good idea in my opinion.\r\nWhat do you think @jgbarah @aswanipranjal ?	2019-04-17 07:45:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692774	\N	Thanks for the response @valeriocos  and @aswanipranjal for a üëç .\r\nI've add an issue ticket https://github.com/chaoss/metrics/issues/139 \r\nPlease do have a look when you get time.\r\n\r\nThanks	2019-04-19 09:10:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1692775	\N	A [summary](https://inishchith.github.io/blog/2019/08/coding-period-3-11.html) and [details](https://inishchith.github.io/blog/) of the work carried on for this idea are available @inishchith blog. \r\nA demo has been also produced, feel free to have a look at it: https://youtu.be/RXZeuJt0UXM.	2019-08-28 09:29:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692776	\N	Thanks for the report. However, I'm not sure where the bug is. If I understand your scenario, you already had grimoirelab installed (version 0.2.0), and you wanted to update to the newest version. If this is the case, the way to do it with pip is:\r\n\r\n```\r\npip install grimoirelab --upgrade\r\n```\r\n\r\nIf you don't specify `--upgrade`, pip just looks for any version of `grimoirelab`, finds it already installed (0.2.0 in you case), and considers it's done. With `--upgrade` pip checks with pypi if there are newer versions, and if so, installs them.\r\n\r\nI'm closing, just in case I'm right. But if I'm missing something, and you still consider this is still an issue, please reopen.	2019-01-15 13:37:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692777	\N	Ups, I have expected that if a newer version is available, it will upgrade automatically or at least, it will mention it. My fault.\r\n\r\nThanks @jgbarah for the explanation.	2019-01-15 14:16:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692780	\N	Fixed by https://github.com/chaoss/grimoirelab-elk/pull/530	2019-02-25 23:01:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692784	\N	sorry for the late reply @jsmanrique \r\nI executed micro-mordred on https://gitlab.gnome.org/GNOME/nautilus and didn't detect any problem. Find below the snippet of the setup.cfg and projects.json\r\n\r\n**setup.cfg**\r\n[gitlab:issue]\r\nraw_index = test_gitlab-issue-raw-gnome\r\nenriched_index = test_gitlab-issue-gnome\r\napi-token = X3KPDASbCxwenNc31oQs\r\nenterprise-url = https://gitlab.gnome.org\r\nno-archive = true\r\nsleep-for-rate = true\r\n\r\n[gitlab:merge]\r\nraw_index = test_gitlab-merge-raw-gnome\r\nenriched_index = test_gitlab-merge-gnome\r\napi-token = X3KPDASbCxwenNc31oQs\r\nenterprise-url = https://gitlab.gnome.org\r\nno-archive = true\r\ncategory = merge_request\r\nsleep-for-rate = true\r\n\r\n**projects.json**\r\n```\r\n"gitlab:issue": ["https://gitlab.gnome.org/GNOME/nautilus"],\r\n"gitlab:merge": ["https://gitlab.gnome.org/GNOME/nautilus"],\r\n```\r\n\r\nNote that the `api-token` has to be generated in the section `Access tokens` after subscribing to https://gitlab.gnome.org. A normal GitLab token won't work.\r\n	2018-12-10 15:28:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692785	\N	So, it seems that my mistake was not including the `enterprise-url` in the setup.cfg file. Time to try again.	2018-12-10 15:30:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692786	\N	as you said before, the param `enterprise-url` is kind of hidden, we should improve that part of documentation.\r\nFeel free to close the issue if you don't detect the problem anymore.	2018-12-10 15:40:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692787	\N	> as you said before, the param `enterprise-url` is kind of hidden, we should improve that part of documentation.\r\n> Feel free to close the issue if you don't detect the problem anymore.\r\n\r\nProbably it's solved, by I am not getting any data yet (and any error message too). Probably, something is broken in my configuration	2018-12-10 17:03:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692788	\N	Data is processed in bulks of 1000 items by default (you can change this param in the [setup.cfg](https://github.com/chaoss/grimoirelab-sirmordred/blob/master/tests/test.cfg#L24)). In the case of GitLab, since the API is pretty slow, you may have to wait some time before seeing the first issues or MRs in your GrimoireLab.	2018-12-10 21:44:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692789	\N	It seems that the issue opened has been solved. Thank you @valeriocos 	2018-12-11 07:57:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692790	\N	Hi @flaviobeck ,\r\nSure it is possible, but currently GrimoireLab doesn't provide visualizations for Pull request data (i.e., reviews, reviewers). You can collect pull request data using the Perceval GitHub backend with category `pull_request`. You will have data about: submitters, mergers, review comments, requested reviewers and commits in PR (see code at: https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L240).\r\n\r\nTo collect and enrich PR data you should include in your setup.cfg and projects.json something like this:\r\n\r\n**setup.cfg**\r\n```\r\n[github:pull]\r\nraw_index = ...\r\nenriched_index = ...\r\napi-token = xxxx\r\nsleep-for-rate = true\r\ncategory = pull_request\r\n...\r\n```\r\n**projects.json**\r\n```\r\n"github:pull": [\r\n            "https://github.com/..."\r\n        ],\r\n```\r\nOnce you have the enriched data in your ElasticSearch, you can either create your own visualizations in Kibiter or write scripts to perform the analysis you need.\r\n\r\nLet me know if you have any problem to collect this data.	2018-12-10 08:38:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692791	\N	@flaviobeck I would close this issue . Feel free to reopen it if needed.	2018-12-17 09:01:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692792	\N	hi @flaviobeck , in your projects.json try to remove the last slash for the repos kibana and elasticsearch in the git and github entries.	2018-12-06 10:18:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692793	\N	Works!\r\nSorry for my mistake...\r\nIt was 1am here in Brazil. :) \r\n\r\nAnother question:\r\nI have changed projects.json like this:\r\n\r\n```\r\n{\r\n    "Argentum": {\r\n      "git": [\r\n          "http://github.com/flaviobeck/argentum-web"\r\n      ],\r\n      "github": [\r\n          "http://github.com/flaviobeck/argentum-web"\r\n      ]\r\n    }\r\n}\r\n\r\n```\r\nAfter restart grimoirelab. when I go to localhost:5601 I still see the old data:\r\n\r\n![image](https://user-images.githubusercontent.com/33756592/49621998-e831be80-f9ae-11e8-8b11-acb101001817.png)\r\n\r\nhow to reset the dashboard data and reindex the new one acording the new projects.json ?\r\n\r\ntks	2018-12-07 01:31:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277275
1692794	\N	@flaviobeck no problem! :)\r\n\r\nThe simplest solution should be to delete all indexes (`curl -XDELETE http://localhost:9200/<name-of-your-index>`) in your ElasticSearch and restart GrimoireLab. However, if you tell me the indexes you have in your ElasticSearch (`localhost:9200/_aliases?pretty`), we can try to perform some operations on these indexes and avoid fetching again the data you already collected.\r\n	2018-12-07 10:29:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692795	\N	Hello, these are my indexes. I really dont know what neeed to be deleted..\r\n\r\n```\r\n{\r\n  "git_aoc_grimoirelab-enriched" : {\r\n    "aliases" : { }\r\n  },\r\n  "github_grimoirelab-raw" : {\r\n    "aliases" : {\r\n      "github-raw" : { }\r\n    }\r\n  },\r\n  ".kibana" : {\r\n    "aliases" : { }\r\n  },\r\n  "git_grimoirelab-raw" : {\r\n    "aliases" : {\r\n      "git-raw" : { }\r\n    }\r\n  },\r\n  "github_grimoirelab" : {\r\n    "aliases" : {\r\n      "affiliations" : { },\r\n      "github_issues" : { },\r\n      "github_issues_enrich" : { },\r\n      "issues_closed" : { },\r\n      "issues_created" : { },\r\n      "issues_updated" : { }\r\n    }\r\n  },\r\n  "git_grimoirelab" : {\r\n    "aliases" : {\r\n      "affiliations" : { },\r\n      "demographics" : { },\r\n      "git" : { },\r\n      "git_author" : { },\r\n      "git_enrich" : { }\r\n    }\r\n  }\r\n}\r\n```	2018-12-08 17:24:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277275
1692796	\N	It is possible that in the same indexes you have items coming from the old and new projects.json. I would suggest to delete the indexes and restart GrimoireLab. The following command will delete all indexes but `.kibana`: `curl -XDELETE http://localhost:9200/git*`	2018-12-09 17:23:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692797	\N	Great!! it is working fine now!\r\nThank you @valeriocos 	2018-12-10 01:46:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277275
1692798	\N	Any problem with this patch? I would need to work properly with 0.2.2...	2018-12-14 12:35:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692799	\N	Thanks, @valeriocos. I pushed a new patch, hopefully addressing your concerns.	2019-01-08 19:17:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692800	\N	Thank you @jgbarah , the PR LGTM, if @sduenas agrees it can be merged.	2019-01-08 21:51:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692801	\N	Will the library API (or an evolution of it) be maintained? And the command line interface?	2018-11-19 19:45:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692802	\N	Yes. There are more details here: https://github.com/chaoss/grimoirelab-sortinghat/wiki/Roadmap-to-Sorting-Hat-1.0	2018-11-19 20:06:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693462	\N	@klumb will take care of this.	2018-11-14 17:20:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692803	\N	You need to use `projects.json`, here's mine;\r\n```\r\n$ cat projects.json\r\n{\r\n    "Elastic": {\r\n      "git": [\r\n          "http://github.com/elastic/kibana/",\r\n          "http://github.com/elastic/elasticsearch/",\r\n          "http://github.com/elastic/logstash",\r\n          "http://github.com/elastic/beats"\r\n      ],\r\n        "github": [\r\n            "http://github.com/elastic/kibana/",\r\n            "http://github.com/elastic/elasticsearch/",\r\n            "http://github.com/elastic/logstash",\r\n            "http://github.com/elastic/beats"\r\n        ],\r\n        "discourse": [\r\n          "https://discuss.elastic.co"\r\n        ]\r\n    }\r\n}\r\n```\r\n\r\nAnd then to pass it to docker;\r\n```\r\n$ docker run -p 127.0.0.1:5601:5601 -v $(pwd)/credentials.cfg:/override.cfg -v $(pwd)/logs:/logs -v $(pwd)/es-data:/var/lib/elasticsearch -v $(pwd)/projects.json:/projects.json -t grimoirelab/full\r\n```	2018-10-18 03:00:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277277
1692804	\N	Yes. You have some more data about this in [SirMordred in a container]](https://chaoss.github.io/grimoirelab-tutorial/sirmordred/container.html) (have a look at the section "Running grimoirelab/full", about midway). Some more info about `projects.json` is in [The projects file](https://chaoss.github.io/grimoirelab-tutorial/sirmordred/projects.html).	2018-10-18 16:24:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692805	\N	@flaviobeck can we close this?	2018-10-18 16:24:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692806	\N	Yes...  now I can get data from my repo!!  thank you!	2018-10-23 03:01:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277275
1692807	\N	Worked after installing \r\n\r\nsudo apt-get install python3-dev\r\nsudo apt-get install build-essential\r\n\r\nIf they are needed, include them in the documentation	2018-10-11 02:37:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277278
1692808	\N	Thanks for the heads up. It seems that the fact that you need them or not depends on the platform you are in. But I will update the documentation to have that into account.	2018-10-15 22:43:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692809	\N	Closing this one, after opening a related issue in the grimoirelab-tutorial repo: chaoss/grimoirelab-tutorial#45.	2018-10-18 16:29:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692810	\N	Some improvements have been already integrated to the [code base](https://github.com/chaoss/grimoirelab-elk/commit/8ffd1f50e995647f0af4218f054c2ab43cebbf1c). The demography study is now generic and uses update operations to refresh the data. It can be easily plugged to any enricher, currently [git](https://github.com/chaoss/grimoirelab-elk/commit/057c10ae524d6c70619036d5363e00a7aa643d38) and [gerrit](https://github.com/chaoss/grimoirelab-elk/commit/23deeaaa0a520ff01aa169787be33d39cf5053ac) support it.\r\n\r\nWRT the number of items to update, since I didn't find a way to iterate over paginated results of aggregations, the number has been increased and set up to [30000](https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/enriched/enrich.py#L1060).	2018-10-25 11:38:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692811	\N	We can close this ticket then as this enhancement has been included in the code.	2018-10-25 14:42:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692812	\N	Any comment about this, @valeriocos @sduenas?	2018-10-25 21:11:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692813	\N	Any comment about this, @valeriocos @sduenas?	2018-11-09 09:15:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692814	\N	sorry @jgbarah for the late reply. LGTM\r\nWhat  do you think @sduenas?	2018-11-09 11:47:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692815	\N	Ping @sduenas (or I will just merge, based on the review by @valeriocos).	2018-11-14 22:04:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692816	\N	OK. Merging...	2018-10-04 11:32:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692817	\N	@jsmanrique do you need any help? If you want, I can try to split the pr and make the edits myself on your behalf.	2018-09-24 12:26:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692818	\N	I don't know how to make the changes you mention. Sorry, I am not used to this machinery	2018-11-13 11:47:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692819	\N	The rationale is as follows:\r\n\r\n* We're trying all packages in GrimoireLab to follow [semver](https://semver.org/). This is different for the convention we're using now for GrimoireLab (as a whole) releases, based on time.\r\n* It is weird to start a package in 18.09.02, for example.\r\n\r\nBoth things together lead me to use a different, semver-based, schema for grimoirelab, the package.\r\n\r\nThis said, I'm open to other options. In fact, I acknowlege it is weird having different ones for the release and the package... But the only way out I see is re-designing once again the id for releases, to follow semver, and the numbers we're using in the grimoirelab package.\r\n\r\nWhat do you think, @acs @sduenas any other?	2018-09-19 09:00:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692820	\N	GrimoireLab is a distribution of already existing packages, so for me, it is a bit weird to apply `semver` to it. But I don't have a strong point against it. I think that it is more important to use the same version for the GrimoireLab release and the python package.\r\n\r\n	2018-09-19 09:52:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692821	\N	For the release id, I agree that we may apply semver or not. But for the grimoirelab package, I think it would be convenient. And that's where the two ids appear (well, in addition to having 18.x as id, but that's secondary). That's why I find the only way out is to use semver, and the distribution level (as much as possible) to grimoirelab.\r\n\r\nBut any decision that you all agree on is good for me, including starting to use 18.9.2 for the grimoirelab Python package.	2018-09-19 10:11:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692822	\N	Any comment here, or can we close this?	2018-10-02 17:49:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692823	\N	IMHO we can close this and probably continue we the current approach until a decision is taken.\r\n\r\nClosing it.\r\n\r\nThanks @jgbarah for the explanation!	2018-10-02 18:24:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692824	\N	In my opinion we should use the same version for both. Since `grimoirelab` is just a meta-package in makes sense to use the same number for the release. I suggest to move to semver, so people can understand what kind of changes they can find which each release.\r\n\r\nTo avoid confusion with old release numbers, we can move the previous releases descriptions to an attic folder. \r\n\r\nI also suggest to use this numeration starting on the next release.\r\n\r\nComments?	2018-10-03 12:16:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692886	\N	Opened issues: #16, #17, #18, #19, #20, #21; and pull requests: #15.	2017-10-30 08:38:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692894	\N	Could any of you please review this change? I can merge it later.	2017-09-28 12:39:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692825	\N	Fine with me!\r\n\r\nThen: numbers for both the grimoirelab Python package and the GrimoireLab release file will be like `0.1.4`, trying to follow semver. We will move all release files currently in `/releases`to `/releases/old`.\r\n\r\nClosing the ticket with this conclusion. @acs (or anybody else), if you want to discuss this issue further, just reopen the ticket. Otherwise, we will use this schema for the next release.	2018-10-03 12:23:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692826	\N	@jgbarah  CC \r\ni think the 404 is related to this github repo.\r\nhttps://github.com/chaoss/grimoirelab-tutorial\r\n\r\n	2018-09-07 09:19:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277279
1692827	\N	Thanks, @MalloZup \r\n\r\nThat's an old version of the tutorial, that was maintained in GitBooks until it stopped using free software for the production of the HTML version. Now, the tutorial can be read on-line at https://chaoss.github.io/grimoirelab-tutorial/\r\n\r\nThanks in any case for pointing out, I did delete the old version, to avoid confusion.\r\n\r\nI'm clossing the issue, please feel free to reopen if you feel that's still convenient.	2018-09-11 20:52:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692828	\N	Thanks a lot for the comment. Could you read this in https://chaoss.github.io/grimoirelab-tutorial/ and in particular in the current [The basics chapter](https://chaoss.github.io/grimoirelab-tutorial/basics/components.html) and the [Installation for the impatient section](https://chaoss.github.io/grimoirelab-tutorial/basics/quick.html#installation-for-the-impatient)?	2018-09-11 20:54:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692829	\N	@jgbarah thx yop we can close	2018-09-12 07:43:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277279
1692830	\N	Thx!	2018-09-12 18:05:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692831	\N	@BenLloydPearson, is this fixed?	2018-09-11 20:55:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692832	\N	Yes, this has been resolved. Thank you.	2018-09-16 20:03:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277280
1692833	\N	Superseed by chaoss/grimoirelab#141	2018-08-24 11:03:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692834	\N	Here are some additional details.\r\n\r\nMy mordred config file:\r\n\r\n ```\r\n# Mordred configuration file (Dashboard)\r\n# Parameters related to the dashboard and how it is produced\r\n# This is usually updated by the person maintaining the dashboard\r\n#\r\n# List: [val1, val2 ...]\r\n# Int: int_value\r\n# Int as string: "Int"\r\n# List as string: "[val1, val2 ...]"\r\n# String: string_value\r\n# None: None, none\r\n# Boolean: true, True, False, false\r\n\r\n[general]\r\nshort_name = Oath\r\n# Update incrementally, forever.\r\nupdate = false\r\n# Don't start a new update earlier than (since last update, seconds)\r\nmin_update_delay = 50\r\n# Produce debugging data for the logs\r\ndebug = true\r\n\r\n[es_enrichment]\r\n# Refresh identities and projects for all items after enrichment\r\nautorefresh = true\r\n\r\n[sortinghat]\r\n# Run affilation\r\naffiliate = true\r\nunaffiliated_group = Other\r\nautoprofile = [github, git]\r\n# How to match to unify\r\nmatching = [github, username, email]\r\n# How long to sleep before running again, for identities tasks\r\nsleep_for = 20\r\nbots_names = [greenkeeperio-bot]\r\nload_orgs = true\r\norgs_file = orgs.json\r\n\r\n[panels]\r\n# Dashboard: default time frame\r\nkibiter_time_from= "now-90d"\r\n# Dashboard: default index pattern\r\nkibiter_default_index= "git"\r\n\r\n[phases]\r\ncollection = true\r\nidentities = true\r\nenrichment = true\r\npanels = true\r\n\r\n[git]\r\n# Names for raw and enriched indexes\r\nraw_index = git_grimoirelab-raw\r\nenriched_index = git_grimoirelab\r\n\r\n[github]\r\n# Names for raw and enriched indexes\r\nraw_index = github_grimoirelab-raw\r\nenriched_index = github_grimoirelab\r\n# Sleep it GitHub API rate is exhausted, waited until it is recovered\r\nsleep-for-rate = true\r\n```\r\n	2018-08-23 14:32:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277280
1692835	\N	I hope this is fixed in the new containers we're about to release. Please, stay tuned for the message in the mailing list, and if you don't mind, let us know if they fix this problem. In addition, check the Mordred configuration files in the [docker dir in the grimoirelab repo](https://github.com/chaoss/grimoirelab/tree/master/docker) (*.cfg files), but only after the pull request for the new release is merged, https://github.com/chaoss/grimoirelab/pull/140 (hopefully in a little while).	2018-08-24 10:25:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692836	\N	This issue is resolved. Thank you so much!	2018-08-30 00:20:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277280
1692837	\N	All of that sounds great! I would support that.\r\n\r\nThe tutorial would arguably be one of the first things a new (potential) user would read. A reasonable new-user journey would be: land on the grimoirelab page and then very quickly click on "Docs" to land on the tutorial. From that perspective, perhaps it could use a review to make it gentler and aimed at users with little understanding of the architecture.\r\n\r\nThe READMEs in each repo could therefore be a bit more developer-centric, and more detailed with respect to the particular project. I think reviewing each repo's README (some have multiple, embedded in subdirectories!) from that angle would be helpful as well. I fully support adding a `CONTRIBUTING.md` file. Worth noting that how GitHub displays this file is different from READMEs: GitHub highlights this file when people file issues or are creating pull requests (and calls it out even more for a person filing issues/PRs for the first time). With that in mind, I think a `CONTRIBUTING.md` could be written up to include instructions directed at the contributor: what do they have to do or consider before filing an issue or sending a pull request? Do they need to sign a CLA? Hint to search the issue tracker first for an existing issue? Does the pull request have a related issue filed? Worth considering that each repo can have its own README / CONTRIBUTING and even issue and pull request templates, and each one could contain information that is more relevant to that particular repo.\r\n\r\nFinally, the automatically-generated API references, I think, would be very helpful, especially if those are generated from comments within the code, or code itself, directly.\r\n\r\nI am happy to help with any of these efforts! I am, however, still learning the project, so could use some direction :)	2018-07-23 16:12:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277281
1692838	\N	i will create some notes for setting up grimoireLab https://github.com/MalloZup/luce-on-grimoirelab\r\n\r\n@jgbarah If you find any utility feel free to take/copy them, atm there will be only notes for me to remember how the setup and mechanism etc works. :sunflower: \r\nI just post them here so you can have a feedback if you are interested otherwise for me are usefull :dango: 	2018-08-31 17:29:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277279
1692887	\N	Again @acs  please try to use @jgbarah instead of my handle here for notifications.	2017-10-30 08:47:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277283
1692895	\N	Thanks, @sduenas , merging...	2017-10-04 08:02:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692899	\N	https://github.com/chaoss/grimoirelab/issues/58 focused on Gerrit is closed and thus this issue is partially solved.	2019-05-06 17:04:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1693463	\N	I think #53 fixed all this.	2018-11-28 17:10:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692839	\N	small feedback https://github.com/chaoss/grimoirelab/issues/144  on elastic-search.\r\n\r\n___\r\nGlobally and in answer with this issue,  i have the same opinion as @jgbarah but only one concern as i am a newbie now the grimoirelab experience :smile: \r\n\r\nto me seems more comfortable to have a webpage (tutorial or official webpage) that have a global `installation`. ( just to really minimalist and easy like create your dashboard with 10 commands) \r\n\r\n```pip install grimoirelab``` is really nice shot to install quite everything. ( or also docker is ok)\r\n\r\nHaving a global webpage ( or central readme) that say the basic about grimoireab to get the dashboard is more helpfull and less painfull to go through every github repository ( which should happen later when user want more advanced infos). This can help afaik. \r\n\r\nIn github repository to me should be more documented the tool as single detailed one , so having the scope of the tool + developers infos for contributing + api 	2018-09-03 15:54:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277279
1692840	\N	As I have previously mentioned on the grimoirelab mailing list (and opened a [pull request](https://github.com/chaoss/grimoirelab-tutorial/pull/58)), the grimoirelab tutorial website also lacks a favicon image which should appear in a browser's tab when visiting the website.\r\n	2019-01-24 12:04:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1692841	\N	Hi,\r\nI found Bitergia through LinkedIn, as I'm currently on the job hunt. I thought I could break the ice, by contributing to your open source project. Do you still need support with this issue?	2019-03-26 19:47:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277282
1692842	\N	Hi @MonikaEve, thank you for your interest in GrimoireLab, and indeed you are more than welcome to contribute to it. If you want to get a glimpse of GrimoireLab, you can start with the [tutorial](https://chaoss.github.io/grimoirelab/). Feel free to have a look also to the GSoC ideas for this year [1] or to the GrimoireLab components [2]. If you enjoying reading, we have also a nice [blog](https://blog.bitergia.com/) and some research papers [3] waiting for you. WRT to job hunt, probably @jgbarah , @sduenas and @jsmanrique can help you with this.\r\n\r\n[1] GSoC ideas\r\n- [Implementing CHAOSS Metrics in Kibana Dashboards](https://github.com/chaoss/grimoirelab/issues/183)\r\n- [Implementing CHAOSS metrics with Perceval](https://github.com/chaoss/wg-gmd/issues/81)\r\n- [Support of Source Code Related Metrics](https://github.com/chaoss/grimoirelab/issues/182)\r\n\r\n[2] GrimoireLab components\r\n- [Perceval](https://github.com/chaoss/grimoirelab-perceval) - data collector\r\n- [Graal](https://github.com/chaoss/grimoirelab-graal)  - source code data collector\r\n- [KingArthur](https://github.com/chaoss/grimoirelab-kingarthur) - scheduler\r\n- [SortingHat](https://github.com/chaoss/grimoirelab-sortinghat) - identity manager\r\n- [ELK](https://github.com/chaoss/grimoirelab-elk) - data processor and enricher\r\n- [SirMordred](https://github.com/chaoss/grimoirelab-sirmordred) - orchestrator\r\n- [Sigils](https://github.com/chaoss/grimoirelab-sigils) - visualizations\r\n- [Kibiter](https://github.com/chaoss/grimoirelab-kibiter) - visualizations mananger\r\n- Anything that starts with https://github.com/chaoss/grimoirelab-*\r\n\r\n[3] Research papers\r\n- [SortingHat: Wizardry on Software Project Members](https://www.researchgate.net/publication/331088184_SortingHat_Wizardry_on_Software_Project_Members)\r\n- [Graal: The Quest for Source Code Knowledge](https://www.researchgate.net/publication/326942711_Graal_The_Quest_for_Source_Code_Knowledge)\r\n- [Perceval: Software Project Data at Your Will](https://www.researchgate.net/publication/325334393_Perceval_Software_Project_Data_at_Your_Will)	2019-03-26 20:49:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692843	\N	Hi @MonikaEve! Thank you very much for your interest. We always need help with this ticket. Another project that might be interesting is [GrimoireLab Hatstall](https://github.com/chaoss/grimoirelab-hatstall), the web app that connects and manages [SortingHat](https://github.com/chaoss/grimoirelab-sortinghat). Since we are adding creating a GraphQL API for SortingHat, there is a work in progress to create a React based UI for Hatstall ... Sadly, there is not much doc about that (CC @sduenas @dlumbrer )	2019-03-27 09:03:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692844	\N	> Hi @MonikaEve! Thank you very much for your interest. We always need help with this ticket. Another project that might be interesting is [GrimoireLab Hatstall](https://github.com/chaoss/grimoirelab-hatstall), the web app that connects and manages [SortingHat](https://github.com/chaoss/grimoirelab-sortinghat). Since we are adding creating a GraphQL API for SortingHat, there is a work in progress to create a React based UI for Hatstall ... Sadly, there is not much doc about that (CC @sduenas @dlumbrer )\r\n\r\nHi @MonikaEve!!, @jsmanrique is right. As he said, we are working on the development of a new React based web app, this app will have the same aim than the [GrimoireLab Hatstall](https://github.com/chaoss/grimoirelab-hatstall) based on Django: provide a user interface in order to manage [SortingHat](https://github.com/chaoss/grimoirelab-sortinghat), but now, using the new version of SorthingHat that is has a GraphQL API.\r\n\r\nThis is the [repository](https://github.com/dlumbrer/Hatstall-React) where the project is being developed. There is no doc yet, the project is still "new", but as I said before, the aim of this new web app is the same that the old Django  [GrimoireLab Hatstall](https://github.com/chaoss/grimoirelab-hatstall) has, but using the new GraphQL API of Sortginhat, so we are including all the functionality that the old app has as the new GraphQL API is having more "queries/mutations" (the way that a GraphQL API is). Therefore, we need more improvements and development in this app, in terms of general layout and in terms of complete the functionality. We are using React because is a powerful library in order to build user interfaces and we are used to working with Kibana, also based (most of it) on React.js.	2019-03-27 10:31:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277239
1692845	\N	Hi All,\n\nThanks a lot for your replies :) I started going through the tutorial last\nnight and I'll continue tonight and I'll definitely check out GrimoireLab\nHatshall and SortingHat. The project looks really interesting, so I'm\nexcited to get started :) I will let you know once I've read through the\ndocumentation and probably ask more questions.\n\n\nOn Wed, Mar 27, 2019, 11:31 David Moreno Lumbreras <notifications@github.com>\nwrote:\n\n> Hi @MonikaEve <https://github.com/MonikaEve>! Thank you very much for\n> your interest. We always need help with this ticket. Another project that\n> might be interesting is GrimoireLab Hatstall\n> <https://github.com/chaoss/grimoirelab-hatstall>, the web app that\n> connects and manages SortingHat\n> <https://github.com/chaoss/grimoirelab-sortinghat>. Since we are adding\n> creating a GraphQL API for SortingHat, there is a work in progress to\n> create a React based UI for Hatstall ... Sadly, there is not much doc about\n> that (CC @sduenas <https://github.com/sduenas> @dlumbrer\n> <https://github.com/dlumbrer> )\n>\n> Hi @MonikaEve <https://github.com/MonikaEve>!!, @jsmanrique\n> <https://github.com/jsmanrique> is right. As he said, we are working on\n> the development of a new React based web app, this app will have the same\n> aim than the GrimoireLab Hatstall\n> <https://github.com/chaoss/grimoirelab-hatstall> based on Django: provide\n> a user interface in order to manage SortingHat\n> <https://github.com/chaoss/grimoirelab-sortinghat>, but now, using the\n> new version of SorthingHat that is has a GraphQL API.\n>\n> This is the repository <https://github.com/dlumbrer/Hatstall-React> where\n> the project is being developed. There is no doc yet, the project is still\n> "new", but as I said before, the aim of this new web app is the same that\n> the old Django GrimoireLab Hatstall\n> <https://github.com/chaoss/grimoirelab-hatstall> has, but using the new\n> GraphQL API of Sortginhat, so we are including all the functionality that\n> the old app has as the new GraphQL API is having more "queries/mutations"\n> (the way that a GraphQL API is). Therefore, we need more improvements and\n> development in this app, in terms of general layout and in terms of\n> complete the functionality. We are using React because is a powerful\n> library in order to build user interfaces and we are used to working with\n> Kibana, also based (most of it) on React.js.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/grimoirelab/issues/135#issuecomment-477085840>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AYGLpt4HnfspDHUJu-j-PdgehTm7qCj_ks5va0h_gaJpZM4VaHN3>\n> .\n>\n	2019-03-27 11:14:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277282
1692846	\N	Hi,\n\nI finally went through the documentation and installed the new version of\nSortingHat :) I'm currently working with react and I think it would be the\neasiest to start with the documentation of the new SortingHat. So maybe I\ncould add some general info (taken from the old SortingHat and tutorial) to\nthe readme file. I could also add a "How to install" chapter. How does that\nsound?\n\nRegards,\nMonika\n\nOn Wed, Mar 27, 2019, 12:13 Moni Eversmann <moni.eversmann@gmail.com> wrote:\n\n> Hi All,\n>\n> Thanks a lot for your replies :) I started going through the tutorial last\n> night and I'll continue tonight and I'll definitely check out GrimoireLab\n> Hatshall and SortingHat. The project looks really interesting, so I'm\n> excited to get started :) I will let you know once I've read through the\n> documentation and probably ask more questions.\n>\n>\n> On Wed, Mar 27, 2019, 11:31 David Moreno Lumbreras <\n> notifications@github.com> wrote:\n>\n>> Hi @MonikaEve <https://github.com/MonikaEve>! Thank you very much for\n>> your interest. We always need help with this ticket. Another project that\n>> might be interesting is GrimoireLab Hatstall\n>> <https://github.com/chaoss/grimoirelab-hatstall>, the web app that\n>> connects and manages SortingHat\n>> <https://github.com/chaoss/grimoirelab-sortinghat>. Since we are adding\n>> creating a GraphQL API for SortingHat, there is a work in progress to\n>> create a React based UI for Hatstall ... Sadly, there is not much doc about\n>> that (CC @sduenas <https://github.com/sduenas> @dlumbrer\n>> <https://github.com/dlumbrer> )\n>>\n>> Hi @MonikaEve <https://github.com/MonikaEve>!!, @jsmanrique\n>> <https://github.com/jsmanrique> is right. As he said, we are working on\n>> the development of a new React based web app, this app will have the same\n>> aim than the GrimoireLab Hatstall\n>> <https://github.com/chaoss/grimoirelab-hatstall> based on Django:\n>> provide a user interface in order to manage SortingHat\n>> <https://github.com/chaoss/grimoirelab-sortinghat>, but now, using the\n>> new version of SorthingHat that is has a GraphQL API.\n>>\n>> This is the repository <https://github.com/dlumbrer/Hatstall-React>\n>> where the project is being developed. There is no doc yet, the project is\n>> still "new", but as I said before, the aim of this new web app is the same\n>> that the old Django GrimoireLab Hatstall\n>> <https://github.com/chaoss/grimoirelab-hatstall> has, but using the new\n>> GraphQL API of Sortginhat, so we are including all the functionality that\n>> the old app has as the new GraphQL API is having more "queries/mutations"\n>> (the way that a GraphQL API is). Therefore, we need more improvements and\n>> development in this app, in terms of general layout and in terms of\n>> complete the functionality. We are using React because is a powerful\n>> library in order to build user interfaces and we are used to working with\n>> Kibana, also based (most of it) on React.js.\n>>\n>> ‚Äî\n>> You are receiving this because you were mentioned.\n>> Reply to this email directly, view it on GitHub\n>> <https://github.com/chaoss/grimoirelab/issues/135#issuecomment-477085840>,\n>> or mute the thread\n>> <https://github.com/notifications/unsubscribe-auth/AYGLpt4HnfspDHUJu-j-PdgehTm7qCj_ks5va0h_gaJpZM4VaHN3>\n>> .\n>>\n>\n	2019-04-04 08:46:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277282
1692888	\N	@acs please note I'm not @jgbarah	2017-10-20 21:53:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277283
1692896	\N	I personally would love to have this feature and happy to help in any way i can :).	2017-09-21 07:23:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277284
1692900	\N	Fixed in: https://github.com/chaoss/grimoirelab-sirmordred/commit/c015ce9d15e1beb0410bf3204d163edd71b9a7c9\r\n\r\nThanks for the heads up @jgbarah !	2018-06-08 03:03:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692847	\N	Hi @MonikaEve, first of all thanks for your help!\r\n\r\nAlthough, SortingHat is one of our  more stable pieces, the new version is not, so I'm not sure how helpful would be to start working there.\r\nI suggest to start with Perceval. It's the most stable one and there are many people out there using it. It would be great to have really good documentation for newbies. There's some stuff written in the `grimoirelab-tutorial` but documentation talking only about Perceval would be idea.\r\n\r\nPerceval is partially well documented in terms of API but we need something better for the different kind of users the tool has.\r\n\r\nAnyway, I can help you with both if you need to understand how things work or something is not clear. I'll happy to do it.	2019-04-04 15:56:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692848	\N	Hi Valerio,\n\nthat sounds good. I just briefly read about Perceval, so I have an idea,\nbut I didn't try to use it. So I will go through the tutorial one more time\nand start working with it and write down where I had problems and so on. I\nwill then let you know what I came up with and maybe we can set up a call?\n\nRegards,\nMonika\n\nAm Do., 4. Apr. 2019 um 16:56 Uhr schrieb Santiago Due√±as <\nnotifications@github.com>:\n\n> Hi @MonikaEve <https://github.com/MonikaEve>, first of all thanks for\n> your help!\n>\n> Although, SortingHat is one of our more stable pieces, the new version is\n> not, so I'm not sure how helpful would be to start working there.\n> I suggest to start with Perceval. It's the most stable one and there are\n> many people out there using it. It would be great to have really good\n> documentation for newbies. There's some stuff written in the\n> grimoirelab-tutorial but documentation talking only about Perceval would\n> be idea.\n>\n> Perceval is partially well documented in terms of API but we need\n> something better for the different kind of users the tool has.\n>\n> Anyway, I can help you with both if you need to understand how things work\n> or something is not clear. I'll happy to do it.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/grimoirelab/issues/135#issuecomment-479957372>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AYGLpjpefsSe21hjSPK8f5goVgrOUDdKks5vdiDCgaJpZM4VaHN3>\n> .\n>\n	2019-04-05 15:28:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277282
1692849	\N	Sure @MonikaEve , @sduenas and myself will be happy to set up a call, just ping us when you are ready :)	2019-04-07 11:09:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692850	\N	Ok, I forgot to tell you, that I am travelling this week and I will be in\nSevilla and Barcelona. So I won't have time this week, but I'll start\nworking on it next week.\n\nRegards,\nMonika\n\nOn Sun, Apr 7, 2019, 12:09 valerio <notifications@github.com> wrote:\n\n> Sure @MonikaEve <https://github.com/MonikaEve> , @sduenas\n> <https://github.com/sduenas> and myself will be happy to set up a call,\n> just ping us when you are ready :)\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/grimoirelab/issues/135#issuecomment-480580480>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AYGLpvy4J5pJkzFJiHb4r4Ybg9EOXEM1ks5vedHagaJpZM4VaHN3>\n> .\n>\n	2019-04-07 11:12:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277282
1692851	\N	Thank you for letting us know, enjoy!	2019-04-07 11:45:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692852	\N	Possibly related issue: https://github.com/chaoss/grimoirelab-tutorial/issues/93	2019-08-29 19:46:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1692853	\N	It is grimoirelab-sigils what it is failing, and we are not using master branch in the release, but the migration branch `kibana6-migration`. AFAIK we don't have versions for this branch. So in this case, I would create the pip packages using master version (which has a version), and once this migration branch is in master, the problem will be fixed. 	2018-07-03 18:38:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692854	\N	We need release files that work, and that include that they produce a package with a new version number, if they changed. I still think that the commit from all repos should come from master, but in the end, maybe that doesn't matter that much: the important thing is that the commit in the release file matches a commit that changes the release number in the repo.\r\n\r\nThat's why I think it is a bug in the release file in this repo.	2018-07-03 21:39:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692855	\N	Yes, I understand your point, but we are not releasing a new version in panels `kibana6-migration` we are just getting the last state of this migration process. We can create an artificial version in order to have it in the release, but in this case, my guess is that this "release" is just a way to deploy some specific state of the repositories, not real versions. But, what is a version? Every commit in git generates a new "version", something pretty cool in git. But for generating the pip packages, we need an additional version to the git raw version (the commit).\r\n\r\nSo in this case, we have two options:\r\n\r\n* Don't try to generate pip packages for 18.07-03\r\n* Create a pip version for the current status of the `kibana6-migration` sigils branch\r\n\r\nWhat do you prefer @jgbarah ? I am happy with both.	2018-07-04 04:53:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692856	\N	We need to produce new versions of the pip packages, since it is a number of releases failing now. So, I suggest:\r\n\r\n* In the short term, please decide if the commit for the release should be from `master` or from `kibana6-migration`. From whichever you decide it to be, just ensure `_version.py` gets a new number. That's enough to produce new pip packages. I suggest that you just do it with `kibana6-migration`, and that's it.\r\n\r\n* In the long term, I'm going to produce a pr for chaoss/grimoirelab-sigils#219 and then, if needed, another one for kidash, if you find that ok.\r\n\r\nBTW, 18.07-05 is still failing, but I guess you already know that ;-)	2018-07-06 11:03:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692857	\N	Fixed all in 18.07-06. Closing this ticket!	2018-07-12 06:54:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692858	\N	For grimoirelab-panels we are using the kibana5 maintenance branch. Hmmm, probably we should add versioning there. Is that enough?\r\n\r\nI will check also the kidash and create a hot fix. Thanks @jgbarah for the review!	2018-06-30 08:37:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692859	\N	For a release, we should use master, I think...\r\n\r\nIn any case, why we need a specific kibana5 branch? If needed, we could specify to kidash which dashboards to upload (from one of two directories, for example). In particular, for the coummunity docker images, we're using ES/KB 6.x, so we need those panels...\r\n\r\nDo you want me to open an issue in sigils and/or kidash about this?	2018-06-30 12:24:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692889	\N	@jgb sorry about that. I have fixed the comment so it refers now to @jgbarah . Thank you!	2017-10-21 09:59:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692897	\N	We should start by identifying the needed fields in the resulting index, and how to produce them from the raw index. @vishnoianil if you want, let's do the exercise for GitHub Pull Requests or Gerrit, you decide;-)	2017-09-25 14:47:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692860	\N	> In any case, why we need a specific kibana5 branch? \r\n\r\nIn https://github.com/chaoss/grimoirelab-sigils their policy is to create a maintenance branch for each major Kibana release. Until now:\r\n\r\n* Kibana 4: https://github.com/chaoss/grimoirelab-sigils/tree/kibana4-maintenance\r\n* KIbana 5: https://github.com/chaoss/grimoirelab-sigils/tree/kibana5-maintenance\r\n\r\nAnd master panels are the ones working with the latest version of KIbana supported in GrimoireLab, now KIbana 6.\r\n\r\n> If needed, we could specify to kidash which dashboards to upload (from one of two directories, for example). In particular, for the coummunity docker images, we're using ES/KB 6.x, so we need those panels...\r\n\r\nDuring the next two weeks all the KB 6.x must be available. In any case,  think that I am going to publish the release for kibana 6.x as you suggested, but in Grimoire releases, I will use the kibana5 branch until we have completed the migration to KB 6.x in Bitergia. Dos it sounds good to you? Other option is to have a specific Grimoire release for this KB 5.x version until all is migrated to 6.x.\r\n\r\nIf you thing something should be changed in sigils open a ticket there. I don't think kibana must be changed to support this sigils/grimoirelab behavior. \r\n	2018-07-02 04:39:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692861	\N	Closing this ticket once all has been fixed in 18.07-01. @jgbarah if you have any issues just reopen this ticket or open a new one.	2018-07-02 04:56:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692862	\N	For now, we should update it manually every time there is a new release file...	2017-11-05 22:39:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692863	\N	All done from my point of view, @acs.	2017-11-03 10:13:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692864	\N	Ok just pending:\r\n\r\n* Rights to add the docker image to grimoirelab (blocker)\r\n* Add the arthur pip package (not blocker)	2017-11-04 08:45:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692865	\N	Hmm. I don't think that we need to wait until we have the image in dockerhub. You can run all the process in your computer. In fact, the README.md file explains how to produce first the docker image (using `Dockerfile`) and the `docker-compose` to complete the deployment.	2017-11-04 20:42:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692866	\N	@acs, what do you think about my last comment, could we close this by merging?	2017-11-07 23:40:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692867	\N	Fixed conflicts that prevented rebasing.	2017-11-08 09:46:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692868	\N	The main point here is that one part (most of it) can be completely public, while the other can be private. In fact, since the "other one" will overdrive whichever is in the general one, we could even have default values in the main one, just in case people don't need the other one.\r\n\r\nThe main advantage is avoiding conflicts when committing and merging: since the file is under version control, you end up having trouble if you edit it, keeping it in the repo.	2017-11-02 18:30:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692869	\N	???	2017-11-07 23:41:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692870	\N	After our sync today, I have understood better the approach of not creating two complete config files, but just redefine the ports section in the second file. So I like the approach and I am approving the PR. Thanks @jgbarah!	2017-11-08 09:18:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692871	\N	I think this is no longer relevant. Closing.	2018-09-11 21:08:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692872	\N	This is part addressed in #23.	2017-11-02 17:16:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692873	\N	I think this is no longer relevant. Closing.	2018-09-11 21:08:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692874	\N	mariadb should not be used outside the docker containers, so it is not needed. Maybe if we want to access mariadb from the host for debugging SortingHat issues, this could be changed.\r\n\r\nKibiter and Elasticsearch are used in different scenarios in the host, ad this is why the ports are openeded to the host.	2017-10-30 09:14:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692875	\N	I think I finally understood how this works. Sorry for my lack of understanding about docker. Please, correct me if I'm wrong: Inside the containers, `mariadb` is the name of the host hosting MariaDB, as `elasticsearch` is the name of the host with ElasticSearch, for example. So, it is perfectly fine to "connect" to `mariadb` inside the containers.\r\n\r\nIf this is the case, I will produce a patch to use these names, instead of IP addresses, for all the hosts in the configuration for `docker-compose`.	2017-11-02 17:14:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692876	\N	Should we close this ticket @jgbarah ?	2018-07-12 07:47:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692877	\N	Yes, I'm closing it, thanks for noticing.	2018-07-12 08:18:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692878	\N	I think this is no longer relevant. Closing.	2018-09-11 21:08:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692879	\N	@jgbarah is this still relevant?	2018-07-12 07:38:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692880	\N	I think this is no longer relevant. Closing.	2018-09-11 21:09:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692881	\N	I think this is no longer relevant. Closing.	2018-09-11 21:09:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692882	\N	LGTM!	2017-10-27 16:35:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692883	\N	## Mordred test environment\r\n\r\n* we should move everything to tests, instead of releases/tests\r\n\r\n* setup.cfg: includes passwds, and absolute directories\r\n\r\n* projects.json:\r\n - why "*jenkins" and "jenkins" as entries?\r\n - Why "*jira" (two of them) and "jira"?\r\n - What is "C7LSGB0AU" in "slack"?\r\n\r\n* cache-test.tgz\r\n - it unpacks to perceval-cache: it would be better if the basename of\r\n     the file, and the directory name would be the same\r\n - contains data for testing: are we sure all of it is public?\r\n - in particular, it seems we have a spreadsheet, I'm not sure it is public...\r\n - I'm not sure the data for the telegram channel can be consdiered public\r\n\r\n* docker-compose.yml:\r\n - shouldn't mariadb export some port?\r\n - or maybe not, and we could do the same for elasticsearch and kibitter?\r\n - as such, you need some ports available, which maybe are not in a certain host\r\n\r\n* stage:\r\n - should run in any properly configured machine (now includes wired paths,\r\n     see below)\r\n - should be a python directory\r\n - should not include absolute paths\r\n - installation of Python packages should be with "pip install ."\r\n     (instead of python3 setup.py install)\r\n - why Python installation modules need sudo?\r\n - arthur seems to be a part of the test\r\n     shouldn't it a least be optional?\r\n - shouldn't http://172.17.0.1:5601 be a relative address, or something?\r\n\r\n* init-raw.sh\r\n - uploads data to 172.17.0.1. Should do that to any address,\r\n     or maybe to localhost since it will run in the machine with the elasticsearch port\r\n - I see it can be configured with an environment variable, it would be more explicit\r\n     with a command line argument.\r\n - It should be in python\r\n\r\nI suggest that we start with a Python file equivalent to "stage",\r\nthat runs with proper options in a host environment correctly\r\nset up. Then, we can include it in a docker environment.\r\n\r\n## Panel testing\r\n\r\nI suggest that we deal with this one in a separate pull request, once\r\nthe former is complete (or even in parallel). As I understand it,\r\ngiven an ElasticSearch with the needed indexes, it should work...\r\n	2017-10-26 21:58:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692890	\N	Thanks!	2017-10-16 06:56:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692903	\N	> Wouldn't it be nice that mordred takes care of setting up a default index pattern or something similar to @jgbarah solution in its Dockerfile:\r\n\r\nThis is what is implemented in:\r\n\r\nhttps://github.com/chaoss/grimoirelab-sirmordred/blob/master/mordred/task_panels.py#L174\r\n\r\nBut sadly, it seems it is not working always. We need to review it.	2018-06-04 08:26:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692904	\N	@tkowalczyk, could you run the stuff? (I'm sorry, I missed the notification of you opening this issue).	2018-06-03 21:15:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692905	\N	Yeah, I run it on Windows so had to define paths in other way:\r\n\r\n`docker run -p 127.0.0.1:5601:5601 -p 127.0.0.1:9200:9200 -v D:\\test\\credentials.cfg:/override.cfg -v D:\\test\\projects.json:/projects.json -t grimoirelab/full`	2018-06-04 13:20:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277286
1692906	\N	Oh, I see. I'll add a note to the tutorial about that! Thanks for the heads-up.	2018-06-04 21:03:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692907	\N	I think we can close this. Thanks, @aswanipranjal 	2018-09-11 20:59:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692908	\N	Thanks, @aswanipranjal. WRT to the combination of Pandas and Vega, I would explore [Altair](https://altair-viz.github.io/) and [pdvega](https://jakevdp.github.io/pdvega/). You can have a summary of how they work (although for Altair, that corresponds to an old version) in [Introduction to Data Visualization with Altair ](http://pbpython.com/altair-intro.html) and [Intro to pdvega - Plotting for Pandas using Vega-Lite](http://pbpython.com/pdvega.html).	2018-05-03 21:35:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692909	\N	Long time no update!!\r\n\r\nSo, I've been experimenting with Plotly and Altair. Both are awesome libraries to get interactive visualizations but both these libraries do not provide static image files so easily. \r\n\r\nPlotly DOESNOT let the users export to any image format offline. There are twisted ways to get the screenshot of the visualisation [using selenium, PhantomJS and such](https://duckduckgo.com/?q=plotly+offline+export+to+png&atb=v122-2o_&ia=qa), but it is too much of a hassle.\r\n\r\nIn a similar fashion, Altair also does not provide simple exportation to image formats so easily. We will have to [download selenium and chrome/gecko drivers for Altair](https://altair-viz.github.io/user_guide/saving_charts.html?highlight=png).\r\n\r\nThe way I see it, we can go this way:\r\n- Create interactive visualizations for Notebooks using Plotly and Altair\r\n- Create static charts and graphs using Matplotlib and Pandas visualisation functionalities.\r\n\r\nThoughts? @jgbarah @valeriocos ?	2018-06-25 11:36:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1692910	\N	@aswanipranjal I think we already discussed this during the GSoC period... Do you think we could close?	2018-09-11 21:00:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692911	\N	Thx!	2018-09-12 18:06:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692912	\N	Thank you I figured it out. üëç 	2018-05-03 14:14:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277287
1692913	\N	Thanks a lot, @aravindputrevu.\r\n\r\nIf you have some time, would you mind sharing the experience by writing in this ticket how you added those data sources, and your experience with that? I'm about to write that part in the GrimoireLab Tutorial, and it would be very useful for me to have the view of a person not in the GrimoireLab core team.	2018-05-03 22:26:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692914	\N	@jgbarah Here you go...\r\n\r\nI used the docker hub to spin up GrimoireLab. I opened localhost:5601 and found that it is pulling data from GrimoireLab GH repo's. I logged into the container and checked that at the "/" there is a endpoint.sh script which starts the services. projects.cfg and projects.json which has what GH repo's to pull. So, I changed to add my repo's and then I could see my data. \r\n\r\nThere is **"0"** documentation about this. But that is fine. \r\n\r\nHappy to explain more if needed. :) 	2018-05-04 03:59:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277287
1692915	\N	Thanks a lot! I had understood that you were tracking data for DockerHub images (which is one of  the data sources supported by GrimoireLab), not that you were using the GrimoireLab docker image and couldn't find info to configure it.\r\n\r\nIf this is the case, are you aware of the document [Docker images for GrimoireLab](https://github.com/chaoss/grimoirelab/blob/master/docker/README.md) and the chapter [Mordred in a container](https://chaoss.github.io/grimoirelab-tutorial/mordred/mordred-in-a-container.html) in the [GrimoireLab tutorial](https://chaoss.github.io/grimoirelab-tutorial/mordred/mordred-in-a-container.html)? Just to know if there is not enough information to get to these documents, or that these documents are not good enough for what you needed.	2018-05-04 12:44:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692916	\N	Hopefully fixed in #112 and #113.	2018-06-03 22:27:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692917	\N	If you just want to compute the metric, in this specific case (the pony factor), I would compute it from the enriched indexes, since in them you have the data needed (namely, the number of commits per author).\r\n\r\nIf you want to show it in a chart in Kibiter/Kibana, you have two options:\r\n\r\n* Compute the data over time (say, every day or every month), in a new index, and just chart that index with a Kibana visualization. This is simple, but you loss the ability of filtering and drilling down in the dashboard for  this value.\r\n\r\n* Find a way of doing the computation from a visualization in Kibana. In this case, it is not easy, because the metric is a second-order one (I mean, it is really based in some other metrics). If you're interested in this one, we can explore together how to do it, if you want. It is likely that it could be done with TimeLion.\r\n\r\nOf course, you can just compute the metric in, say, a Python Jupyter Notebook, and just plot it there. But you lose the interaction with the dashboard...\r\n\r\nPlease, let me know if I'm answering your question, or you were asking for something else.	2018-04-16 23:04:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692918	\N	@jgbarah \r\n\r\nIf there's a way that we could accomplish this that would make it a desirable addition to the GL project, I would prefer to do it that way, as my last assignment is to get a metric added into GL that CHAOSS would be interested in.	2018-04-16 23:09:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1692919	\N	@jgbarah \r\n\r\nJust trying to follow up on this. I think option #2 would probably be the best way to go about this, as I have no opposition to working with you to try and accomplish this. We do need to get this done within the next 2 weeks though üëç	2018-04-18 18:30:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1692920	\N	Hey @jgbarah, can we start working together on this soon? 	2018-04-23 18:30:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1693085	\N	@germonprez, what i meant was: Can we get the proposal reviewed by any one of you before we submit it to the GSoC website? So that we can get some pointers as to where the proposal is weak and what you expect it should cover.\r\n	2018-03-11 15:43:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1692921	\N	Sorry @Illuminatian, I had missed your messages. Thanks @germonprez for the private heads up ;-)\r\n\r\nYes, please, let's work on this!\r\n\r\nI suggest that we follow this path, if you have the time and interest:\r\n\r\n(1) We define the metric and/or related metrics as precisely as possible (see below on this).\r\n(2) We computer the metric, for example for git enriched indexes, in pure Python, so that we can get a gut feeling of how the metric behaves.\r\n(3) We try to do the same in Kibana, maybe using intermediate indexes, if current enriched indexes are not good enough.\r\n\r\nFor (1), I would use a pull request on the [list of activity metrics](https://github.com/chaoss/metrics/blob/master/activity-metrics-list.md), opening a new page with the detailed description of the metric. We can use for a start the ["original" definition, by Daniel Gruno](https://ke4qqq.wordpress.com/2015/02/08/pony-factor-math/). The main problem I see with it is that it is accumulative (history is "never forgotten"), which is why I find it useful to also consider the "moving Pony Factor", which would be exactly like the Pony factor, but for a period of time. For example, the "1-year moving Pony Factor" would be computed by considering only commits during a period of 1 year. That would allow for a more fair comparison of the factor over time.\r\n\r\nSo, if you want, we can work in a pull request refining these definitions, either sticking to the original or adding the moving one, as you may prefer.\r\n\r\nThen, we can explore (2) and (3), in that order or in parallel.\r\n\r\nFor (2), we can write some simple code that:\r\n\r\n* Queries an enriched index for the total number of contributions (eg, commits for a git index), and contributions by contributor.\r\n* Computes the Pony factor from that.\r\n\r\nThe basis for this is [described in the GrimoireLab tutorial](https://chaoss.github.io/grimoirelab-tutorial/python/querying-grimoireelk-indexes.html), I can help you with that.\r\n\r\nFor (3), I think we need to explore the new charting capabilities in Kibana6, since I'm not aware of how to do it with what Kibana5 provides. But I'm going to review my knowledge about that, maybe I'm missing something. If we don't find a way, we can always produce a new enriched index, that produces the needed data, to later visualize it (and contribute that code to GrimoireELK).\r\n\r\nFor practical purposes, have you already deployed GrimoireLab? Are you familiar with the analysis of repositories, and the production of enriched indexes and dashboards? If not, I can drive you through the process.	2018-04-23 22:19:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692922	\N	@jgbarah \r\n\r\nLooks good to me, when/how would you like to collaborate on this? I have GL deployed locally through docker on my laptop, I am not familiar with how the indexes are produced though. \r\n\r\nTime wise, unfortunately I only have time available tomorrow night, and then the weekend.	2018-04-23 23:05:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1692923	\N	In which timezone are you? Just to know if we could chat for a while (IRC or conf). But maybe we can start with tickets and so on.\r\n\r\nIf you have the docker container deployed, you already have enriched indexes for CHAOSS repositories, right? We could perfectly start with that.	2018-04-23 23:21:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692924	\N	I'm in Central timezone (US). Not sure how that syncs up with you, but I can be available after about 5pm my time.\r\n\r\nI do have the docker container deployed, but it's deployed to a command line only Linux VM on my laptop, so if we need to dive into the code I don't know really how I would go about that.	2018-04-23 23:45:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1692925	\N	> I'm in Central timezone (US). Not sure how that syncs up with you, but I can be available after about 5pm my time.\r\n\r\nOK, I will try to be available in the grimoirelab channel at freenode IRC at about that time. Ping me there if you see me.\r\n\r\n> I do have the docker container deployed, but it's deployed to a command line only Linux VM on my laptop, so if we need to dive into the code I don't know really how I would go about that.\r\n\r\nYou can just export the ports of the container (I think 9200 for Elasticsearch and 5601 for Kibiter will be enough). And then, write the code in your host operating system. Or we spend some time on letting you have a complete installation in your host operating system (at least of GrimoireLab, which is not difficult).	2018-04-24 07:09:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692926	\N	Sounds like a plan. Talk to you then!	2018-04-24 15:19:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1692927	\N	@jgbarah \r\n\r\nI should be available around the same time today as yesterday. I had a seemingly never-ending series of issues trying to do a windows native install of GL, so after about 3 hours of banging my head against the wall, I went ahead and made a Debian VM and was able to succesfully get all the components installed in a python venv. I also go mysql installed, however when trying to run sortinghat to get it to make the needed DB, it kept throwing up errors, saying the user was not authorized, even though I had added a mysql user with all the appropriate permissions, that's about where I left off at last night.	2018-04-25 12:52:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1692928	\N	@filmaj thank you for reporting this issue. We will check it and let you know asap.	2018-04-02 21:32:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692929	\N	Thanks or the detailed report. I think at least a part of the problem is with this line (in the command lines for running the container):\r\n\r\n```\r\n-v $(pwd)/credentials.cfg:/mordred-override.cfg\r\n```\r\n\r\nIn this version of the container, the right line should be:\r\n\r\n```\r\n-v $(pwd)/credentials.cfg:/override.cfg\r\n```\r\n\r\nThis was a recent change, and now I realize the tutorial was not reflecting it. I just fixed it, sorry for causing you a wast of time.\r\n\r\nPlease, try it this way, and let us know if it works.	2018-04-02 22:01:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692930	\N	> (not sure if the Can not configure kibiter error is serious or not, let me know if I should file that separately)\r\n\r\nYes, please. I cannot reproduce that. Let's wait, just in case, to see if somehow it is a cascading error from the previous one. But if it does not work after the `/override.cfg` case is fixed, yes please file a new bug report.	2018-04-02 22:04:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692931	\N	Thanks so much for the help @jgbarah ! Changing the credential file binding definitely got rid of the Hungry Ocean bug ;)\r\n\r\nAs for the kibiter error - it is still there. I assume this is related to why my grimoirelab instance is asking for details on elasticsearch indices, and not displaying any data right away? See screenshot below.\r\n\r\n<img width="1668" alt="screen shot 2018-04-03 at 2 32 06 pm" src="https://user-images.githubusercontent.com/52645/38277762-656764fa-374e-11e8-8769-20000da4e308.png">\r\n\r\nI don't recall seeing this when I set up grimoire the first time around a few months ago.\r\n\r\nAnd, as always: I am super appreciative of everyone's time and help thus far. I hope to contribute to grimoirelab as soon as I get my bearings! Thank you so much for the hand holding thus far.	2018-04-03 21:51:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277281
1692943	\N	First version of the panel proposed at: https://github.com/chaoss/grimoirelab-sigils/pull/265\r\n\r\nTo get info about `arm` arch there are two options:\r\n* Filtering in the table, so you get table results only for `arm*`, for instance.\r\n* Filtering on the top search box using: `builtOn:arm*`. Then all widgets will be filtered by that.\r\n\r\nI think this will allow to play with results to get those you are interested in.\r\n\r\n![captura de pantalla de 2018-09-20 11-13-26](https://user-images.githubusercontent.com/3502941/45808690-b28e0b00-bcc6-11e8-9f8f-5c68471dc01d.png)\r\n	2018-09-20 09:17:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1693158	\N	grimoirelab/training already moved to chaoss/grimoirelab-tutotrial. The "old" repo link, https://github.com/grimoirelab/training still works, pointing to the new one.\r\n\r\nI've also updated the machinery for syncing with GitBook.	2017-12-18 23:30:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692932	\N	> Thanks so much for the help @jgbarah ! Changing the credential file binding definitely got rid of the Hungry Ocean bug ;)\r\n\r\nGreat!\r\n\r\n> As for the kibiter error - it is still there. I assume this is related to why my grimoirelab instance is asking for details on elasticsearch indices, and not displaying any data right away? See screenshot below.\r\n\r\nYes. Mordred takes care of creating an index and then defining a default index, which is something that must be done before panels can be uploaded. In your case, it seems Mordred is not being able of contacting Kibiter. Would you mind trying the container using a mapping for the Kibiter port to 127.0.0.1, instead of an specific IP address? Just to see if it works the same way it works for me in that case.\r\n\r\n> And,  as always: I am super appreciative of everyone's time and help thus  far. I hope to contribute to grimoirelab as soon as I get my bearings!  Thank you so much for the hand holding thus far.\r\n\r\nI think I'm going to take note of your comment for our appreciation quotes ;-) Seriously, thanks a lot for helping us to find and solve issues. Of course you're more than welcome to contribute as much as you may want ;-)\r\n\r\n\r\n	2018-04-03 22:35:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692933	\N	> Would you mind trying the container using a mapping for the Kibiter port to 127.0.0.1, instead of an specific IP address? Just to see if it works the same way it works for me in that case.\r\n\r\nLooks like you nailed it, that seemed to be the issue with respect to the error:\r\n\r\n```\r\nStarting container: 2ae35bd31ced\r\nStarting Elasticsearch\r\n[ ok ] Starting Elasticsearch Server:.\r\nWaiting for Elasticsearch to start...\r\ntcp        0      0 0.0.0.0:9200            0.0.0.0:*               LISTEN      -\r\nElasticsearch started\r\nStarting MariaDB\r\n[ ok ] Starting MariaDB database server: mysqld.\r\nWaiting for MariaDB to start...\r\ntcp6       0      0 :::3306                 :::*                    LISTEN      -\r\nMariaDB started\r\nStarting Kibiter\r\nWaiting for Kibiter to start...\r\n..Kibiter started\r\nStarting Mordred to build a GrimoireLab dashboard\r\nThis will usually take a while...\r\nKibiter/Kibana: version found is 6.1.0-3\r\nKibiter/Kibana: configured!\r\nDashboard panels, visualizations: uploading...\r\nDashboard panels, visualizations: uploaded!\r\nDashboard menu: uploading...\r\nDashboard menu: uploaded!\r\nCollection for github: starting...\r\nCollection for git: starting...\r\nUsername for 'https://git.corp.adobe.com': Collection for github: finished after 00:00:00 hours\r\nLoading blacklist...\r\n```\r\n\r\nI suppose I could work around this temporarily by putting a proxy in front of mordred (like nginx or something).	2018-04-03 22:47:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277281
1692934	\N	Good! Now, tell me, why do you need to use an specific IP address, instead of 127.0.0.1? Is that because you want Kibiter to be browsable from hosts other than localhost, or something else?\r\n\r\nIn any case, I've tried using the public IP address of my host as the address in the mapping for the Kibiter port, and it works for me too...	2018-04-04 07:19:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692935	\N	> Now, tell me, why do you need to use an specific IP address, instead of 127.0.0.1? Is that because you want Kibiter to be browsable from hosts other than localhost, or something else?\r\n\r\nExactly this. It's not a critical thing because as I mentioned I can always stand nginx up in front of this.\r\n\r\n> In any case, I've tried using the public IP address of my host as the address in the mapping for the Kibiter port, and it works for me too...\r\n\r\nHmm, interesting, so it must be something on my side.\r\n\r\nIn any case, I will close this issue. Thanks so much for all the help!	2018-04-04 15:22:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277281
1692936	\N	If someone implements this then it should probably by default use `-reviewedby:self` in Gerrit to ignore patch authors who +1 their own patches.	2019-04-01 16:00:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277285
1692937	\N	A PR is available on ELK: https://github.com/chaoss/grimoirelab-elk/pull/679, please @sduenas @aklapper @dicortazar have a look at it	2019-08-16 12:41:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692938	\N	This should be solved via https://github.com/chaoss/grimoirelab-elk/pull/679\r\n\r\nPlease @sduenas and @aklapper review it and close the issue :)	2019-08-29 11:17:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692939	\N	I'm a bit lost I admit - is there a way to verify in some UI (e.g. using "Discover" in Grimoire), as I'm not very good when it comes to starring at Python code? :)	2019-09-06 12:04:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277285
1692940	\N	@jgb I am checking it right now in the release process .... this is my automatic spec for the release generated from the GitHub repository names in CHAOSS.\r\n\r\n```\r\nGRIMOIRELAB_SORTINGHAT='5044a4248fa68eab9c5881d91c27a6d1bbd04793'\r\nGRIMOIRELAB_ELK='5b709b0abce909d294b1359e91e11c7d450a5d9a'\r\nGRIMOIRELAB_PERCEVAL='8229e787ef9e2e2562eb25a5401091af602968d1'\r\nGRIMOIRELAB_KIBITER='f7bf173cb1d79418b9909d877adfb998ce7b52da'\r\nGRIMOIRELAB_KINGARTHUR='6ad120760abe543c7fcc002589a3da9e74eb6acc'\r\nGRIMOIRELAB_CERESLIB='3c1556fc4a8ede996cc8d797feda29293a3b74c6'\r\nGRIMOIRELAB_SIGILS='25c36ab3e58f4e24c69cd614290fd6b81d8b0c62'\r\nGRIMOIRELAB_MORDRED='c3cb86baefa05e83b0ded98fc23fd21f1361c900'\r\nGRIMOIRELAB_TUTORIAL='43cdd673750774e45ef363d1760218907373980a'\r\nGRIMOIRELAB_PERCEVAL_MOZILLA='0a562b988f3208b893c9289f82c2f1bedc2dbe89'\r\nGRIMOIRELAB_PERCEVAL_PUPPET='26dd0a8ea42f8cfef7f271128ef87c12a782a1dc'\r\nGRIMOIRELAB_MANUSCRIPTS='c51202f88974a826096b3574dd84cf95708b4f2f'\r\nGRIMOIRELAB_BESTIARY='e33976089fcb099d8054b686f61d1f39e9038aa1'\r\nGRIMOIRELAB_TOOLKIT='ce0e845e5e72457b20a28ed5cf68446aa861764b'\r\nGRIMOIRELAB_PERCEVAL_OPNFV='681f61c4f9ee5b9e0e158a9bae8b65915081c3f2'\r\nGRIMOIRELAB='ed03068b4abad265cc3929f9486c68511371357c'\r\nGRIMOIRELAB_HATSTALL='f61a0ec344abd6fd3a915f5d574a84b53dcb38cc'\r\nGRIMOIRELAB_KIDASH='2d7a4be80e0313b49eb395d283276a2e3e5358e4'\r\n```\r\n\r\nand I am using\r\n\r\n```\r\n./build_grimoirelab --build --install --check --install_system --relfile requirements.cfg -l debug\r\n\r\nKeyError: 'sigils'\r\n\r\n```\r\nAfter some testing, the requirements file needed is:\r\n\r\n```\r\nSORTINGHAT='5044a4248fa68eab9c5881d91c27a6d1bbd04793'\r\nGRIMOIREELK='5b709b0abce909d294b1359e91e11c7d450a5d9a'\r\nPERCEVAL='8229e787ef9e2e2562eb25a5401091af602968d1'\r\nGRIMOIRELAB_KIBITER='f7bf173cb1d79418b9909d877adfb998ce7b52da'\r\nKINGARTHUR='6ad120760abe543c7fcc002589a3da9e74eb6acc'\r\nCERESLIB='3c1556fc4a8ede996cc8d797feda29293a3b74c6'\r\nSIGILS='25c36ab3e58f4e24c69cd614290fd6b81d8b0c62'\r\nMORDRED='c3cb86baefa05e83b0ded98fc23fd21f1361c900'\r\nGRIMOIRELAB_TUTORIAL='43cdd673750774e45ef363d1760218907373980a'\r\nPERCEVAL_MOZILLA='0a562b988f3208b893c9289f82c2f1bedc2dbe89'\r\nPERCEVAL_PUPPET='26dd0a8ea42f8cfef7f271128ef87c12a782a1dc'\r\nMANUSCRIPTS='c51202f88974a826096b3574dd84cf95708b4f2f'\r\nGRIMOIRELAB_BESTIARY='e33976089fcb099d8054b686f61d1f39e9038aa1'\r\nGRIMOIRELAB_TOOLKIT='ce0e845e5e72457b20a28ed5cf68446aa861764b'\r\nPERCEVAL_OPNFV='681f61c4f9ee5b9e0e158a9bae8b65915081c3f2'\r\nGRIMOIRELAB='ed03068b4abad265cc3929f9486c68511371357c'\r\nGRIMOIRELAB_HATSTALL='f61a0ec344abd6fd3a915f5d574a84b53dcb38cc'\r\nKIDASH='2d7a4be80e0313b49eb395d283276a2e3e5358e4'\r\n```\r\n\r\nwhich is removing `GRIMOIRELAB_` for all except `GRIMOIRELAB_TOOLKIT` (I have not changed it for the repositories not used yet by the script) and renaming to `GRIMOIRELAB_ELK` to  `GRIMOIREELK`.\r\n\r\nIs this the final version? To implement it in the script generating this file.\r\n\r\n	2018-03-20 03:51:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692941	\N	I just followed the previous convention we had, updating the names of the repos and (some) of the packages that were missing. If you don't mind, let's go on with this convenition (I mean, the one in my pr), and if you want, we decide to change it later for the next release. In the end, the idea was skipping "GRIMOIRELAB" from the variable name, since all are "GRIMOIRELAB". But I don't mind including it if you prefer, for the next release.	2018-03-20 07:44:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692942	\N	No, it is just ok for me. I just need a convention and then I will adjust the script to generate the requirements to it. Thanks! So the only exception is GRIMOIRELAB_TOOLKIT. For the rest, we just need to remove GRIMOIRELAB_ and that's all!	2018-03-20 08:32:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692944	\N	Again, also interesting for @zxiiro	2018-09-20 09:57:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1693159	\N	grimoirelab/grimoirelab already moved to chaoss/grimoirelab. The "old" repo link still works.	2017-12-27 23:15:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693762	\N	Merging, since nobody opposed.	2019-03-27 13:25:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692945	\N	Another way to get this data is hitting the node API. (also available as xml by changing json to xml below).\r\n\r\nhttps://jenkins.opendaylight.org/releng/computer/api/json?pretty=true\r\n\r\nThere's a section called "assigned labels":\r\n\r\n```\r\n      "assignedLabels" : [\r\n        {\r\n          "name" : "centos7-builder-2c-2g"\r\n        },\r\n        {\r\n          "name" : "prd-centos7-builder-2c-2g-49065"\r\n        }\r\n```\r\n\r\nThere can be more than 1 label but at least in ODL we typically only use 1. There is always a label of the exact node name as well, imo those can be ignored.\r\n\r\nJobs typically trigger against a node using these label assignments.\r\n	2018-09-20 13:53:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277289
1692946	\N	This was already fixed by https://github.com/chaoss/grimoirelab-sirmordred/pull/238 and https://github.com/chaoss/grimoirelab-elk/pull/460	2019-02-25 22:47:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692947	\N	First version ready to review at: https://github.com/chaoss/grimoirelab-sigils/pull/264\r\n\r\nNew panel looks like:\r\n![captura de pantalla de 2018-09-20 10-58-45](https://user-images.githubusercontent.com/3502941/45807690-5924dc80-bcc4-11e8-91b7-289e616698fb.png)\r\n\r\n	2018-09-20 09:00:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1692948	\N	I think this could be interesting for @zxiiro ;-)	2018-09-20 09:55:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692949	\N	Yes this would make the Jenkins dashboard a lot more useful.\r\n\r\nAnother useful addition to this would be the ability to categorize arbitrary job types based on keywords in the job. We have build types like:\r\n\r\n* verify jobs\r\n* merge jobs\r\n* csit jobs\r\n* clm jobs\r\n\r\netc... in OpenDaylight these types of jobs and you can tell the difference between them by the keyword in the job name. I wouldn't expect us to know all the keywords upfront so a mechanism for the community to categorize these types via publicly accessible config file would be great.\r\n	2018-09-20 14:01:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277289
1692950	\N	Hi @zxiiro, \r\n\r\nWe could consider this version of the panel as standard and follow this conversation via your support tracker because these keywords you mention seem to be specific for OpenDayLight. \r\n\r\nIf you agree, we can close this ticket as this panel is now part of https://github.com/chaoss/grimoirelab-sigils repo.\r\n\r\nBest, Miguel-Angel	2018-10-10 15:23:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277259
1692951	\N	Yes, thank you.	2018-10-15 17:17:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277289
1692952	\N	Hey I think we can close this ticket. Thanks to all of you who participated :).	2018-12-11 10:16:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1692953	\N	This would refer only to git?	2018-03-14 17:07:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692954	\N	Yes this specific feature Git related.\r\n\r\nWhile having the same support for other data types would be interesting I'm not sure how to implement from a technical perspective.	2018-03-14 20:52:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277289
1692955	\N	I think in Gerrit very likely you are labeling reviews with release cycles. But in any case, yes, that's another story. Let's consider this for git only now. In that case, for having this feature we should label, in the enriched index, all commits with all the branches they are in. That is not simple: we should start with the list of refs, and get ancestors back to the first commit, labeling each commit we find with the corresponding branches/tags. In particular, this may be difficult to do when retrieving incrementally from a repo.\r\n\r\nAnyone can do a more detailed analysis, or have better ideas?\r\n\r\n* While enriching 	2018-03-14 22:42:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692956	\N	Interesting. I didn't know about that. In the meantime, I think is possible to add a filter to the dashboard to ignore these commits. I see the commit message is always the same, so it will would be quite easy to filter these commits.\r\n\r\n@alpgarcia or @dicortazar do you have any idea about how it should be done?	2018-03-14 17:19:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1692957	\N	If filtering out all messages starting with "Update git submodules" and then an empty line, it could be enough to have a Kibana filter as follows:\r\n\r\n``` \r\n{\r\n  "query": {\r\n    "prefix": {\r\n      "message": "Update git submodules\\n\\n"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nI've tested this with OpenDayLight and it seems to work, but it would be better if you have a look at it before implementing it... I've prepared a proof of concept:\r\n\r\nhttps://opendaylight.biterg.io/goto/6f3bfe07bef0c9a82847fb9db12373d5\r\n\r\nThe filter is in the top line with filters, look for "Submodule Updates". By clicking on the icons on the filter itself, you can disable it (which would revert the dashboard to the "current" view), make it positive (which will show only commits corresponding to submodule updates) or make it negative (now by default, in red), showing all commits except for module updates.\r\n\r\nWhen making the filter positive, I see 3,927 commits corresponding to submodule updates during the last two years, see screenshot below.\r\n\r\n![screenshot-2018-3-14 git - bitergia analytics](https://user-images.githubusercontent.com/1039693/37420540-4d4aa55e-27b7-11e8-9da8-fc6b8aa389d2.png)\r\n	2018-03-14 17:38:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692958	\N	@zxiiro: would this be good enough?	2018-03-19 10:51:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692959	\N	@jgbarah Yes I think this filter is sufficient.	2018-03-19 14:22:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277289
1692960	\N	OK, thanks @zxiiro \r\n\r\n@dicortazar @alpgarcia could you please copy this into the corresponding panels, if you want to include this in the GrimoireLab standard dashboard?	2018-03-19 18:01:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692961	\N	> Is it gonna support Ecosystem > Project > ... > Project > Repositories? Do we need that deepth? \r\n\r\nWe need it. Projects like `Eclipse` have a complex hierarchy of subprojects.\r\n\r\n> Do we expect that some same repositories might be in different projects or ecosystems?\r\n\r\nYes. Some user migth be interested on having a dashboard about a set of projects and another dashboard that includes some projects of that set. For instance, I'm thinking of "topic dashboards". You can have analyzing "Apache" activity but another one that analyzes "Web Servers". This one will include some of the repositories you already have in "Apache" dashboard. In this context, It doesn't make sense to retrieve the same repository several times.\r\n\r\n> Might some projects be under no specific ecosystem?\r\n\r\nWhy not? Ecosystem is only a way for grouping information at a high level. You wouldn't need it for analyzing a bunch of projects.\r\n\r\n> Might some repositories be under no specific project?\r\n\r\nSame as above.\r\n\r\n> Project names might be not unique. For example, several ecosystems might have a "Documentation" project. This should not be an issue.\r\n\r\nIt shouldn't be.\r\n	2018-03-13 11:40:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693086	\N	@aswanipranjal, I would focus on a clean completion of the microtask first and foremost. I'll see what others say but I can't guarantee feedback on a proposal. I also believe that if we make the offer to one, we will need to make the offer to all -- which could be very tricky from a timing perspective. 	2018-03-11 17:41:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1692962	\N	> >  Do we expect that some same repositories might be in different projects or ecosystems?\r\n\r\n> Yes. Some user migth be interested on having a dashboard about a set of projects and another dashboard that includes some projects of that set. For instance, I'm thinking of "topic dashboards". You can have analyzing "Apache" activity but another one that analyzes "Web Servers". This one will include some of the repositories you already have in "Apache" dashboard. In this context, It doesn't make sense to retrieve the same repository several times.\r\n\r\nAlthough I find the interest of this, it breaks the (current) assumption that a repository is in a single place in the hierarchy. This allows us (currently) to tag all its items (eg, commits) with a single project name.\r\n\r\nIf we go the way you propose, we would need to tag items with lists of projects (at any level in the hierarchy). I'm not sure how this would affect to visualizations (eg, to tables with projects as rows). Anyone have tested something similar?	2018-03-13 12:13:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692963	\N	>> Do we expect that some same repositories might be in different projects or ecosystems?\r\n\r\n> Yes. Some user migth be interested on having a dashboard about a set of projects and another dashboard that includes some projects of that set. For instance, I'm thinking of "topic dashboards". You can have analyzing "Apache" activity but another one that analyzes "Web Servers". This one will include some of the repositories you already have in "Apache" dashboard. In this context, It doesn't make sense to retrieve the same repository several times.\r\n\r\nI understand your point @sduenas. Currently, GrimoireLab only shows a dashboard by projects.json file, and I was thinking about a similar use case for ecosystem.json file or similar approach. Perhaps it's my lack of knowledge about how things are counted if repositories or projects definition are duplicated.\r\n\r\n>> Might some projects be under no specific ecosystem?\r\n\r\n> Why not? Ecosystem is only a way for grouping information at a high level. You wouldn't need it for analyzing a bunch of projects.\r\n\r\nWell, I understand. I was thinking about it as a way to define an scope of analysis. At least it could be `My bunch of projects > Projects`, so it's some kind of _ecosystem_	2018-03-13 16:11:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692964	\N	I can't help thinking that this is potentially solvable as part of a more general solution to issue #37 i.e. "ecosystem" may just be a property in the indexes.\r\n\r\nTo put it another way, if #37 was possible today, this issue would already be solvable via a custom metadata property called "ecosystem", that users of Grimoire would be responsible for populating.	2018-03-16 16:35:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1692965	\N	> If we go the way you propose, we would need to tag items with lists of projects (at any level in the hierarchy). I'm not sure how this would affect to visualizations (eg, to tables with projects as rows). Anyone have tested something similar?\r\n\r\nHaving a field in an enriched index that is a list has no issues when managing it from panels (or in general, from Elasticsearch). For example, in some items we have a list of tags applied to it, and there is no problem in filtering using this list.	2018-04-10 16:59:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692966	\N	> To put it another way, if #37 was possible today, this issue would already be solvable via a custom metadata property called "ecosystem", that users of Grimoire would be responsible for populating.\r\n\r\nBut we need to take this meta information and use it during data processing. If a field is part of a clear defined data schema (like projects grouping is inside Bestiary), it should not be a dynamic metadata field, but a concrete field that always exists. For data is more "schema less" I find the metamodel more interesting because its dynamic mature.	2018-04-10 17:02:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692967	\N	> But we need to take this meta information and use it during data processing.\r\n\r\nWhy?  Why can't it just be a "dumb" data value that gets added to every document associated to that project in the ES index?\r\n\r\n> If a field is part of a clear defined data schema (like projects grouping is inside Bestiary), it should not be a dynamic metadata field, but a concrete field that always exists.\r\n\r\nI get that, but why does it need to be a schema-defined field?  Why can't it just be one (of potentially many) dynamic fields?  Does this restrict how the field is used / visualised in Kibana, for example?\r\n	2018-04-10 18:25:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1692968	\N	> Why? Why can't it just be a "dumb" data value that gets added to every document associated to that project in the ES index?\r\n\r\nThis is what I call data processing in this case, so we are aligned.\r\n\r\nAbout the schema-defined field, I think about metadata fields as basic dynamic extensions of the data model. But the data model (in Bestiary there is a data model defined in Django ORM) is a fixed one and it is always there.\r\n\r\n	2018-04-11 10:34:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1692969	\N	You need to override the `/projects.json` file in the container with another one which has the list of repositories you want to analyze. Checkout the [new text I've written in the tutorial](https://grimoirelab.gitbooks.io/tutorial/content/mordred/mordred-in-a-container.html) (seach for `projects.json` in that webpage).\r\n\r\nPlease, reopen this issue if it doesn't work for you, or you have further questions on this matter.	2018-03-07 06:10:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692970	\N	Hmm. Interesting. That approach would depend a lot on how commits are merged, but I see the point. It shouldn't be difficult producing that field... I¬¥m going to open an issue in GrimoireELK (which is the module actually enriching the index), and closing this one afterwards.	2018-03-07 05:44:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692971	\N	Hi, @Illuminatian. I'm sorry but I'm not sure what you want to contribute. Maybe the description of four new metrcis in /activity-metrics? If so, you just need to add them there... We do that via pull requests, you can see some of them in the repo now (as closed), for example: chaoss/metrics#50 or  chaoss/metrics#51.\r\n\r\nI don't get what you mean about "there has to be code that pulls..."	2018-02-28 08:57:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692972	\N	@jgbarah \r\n\r\nSorry, I might not have explained myself properly, let me try to clear it up for you.\r\nSo, I need to add 4 metrics that GrimoireLab supports into the activity metrics in CHAOSS. It can either be a new metric that doesn't exist in https://github.com/chaoss/metrics/tree/master/activity-metrics or it can be an addition to an existing metric that doesn't have a GL section underneath it.\r\n\r\nExample: https://github.com/chaoss/metrics/blob/master/activity-metrics/issues-open.md shows how GHData pulls the requisite information through a SQL query to tell how many issues are currently open. My problem as of right now is I have absolutely no idea where I should start looking to find the code that would populate that same data using GL, due to the large size of the project and all the interconnected parts.\r\n\r\nIf you could help point me in the right direction I would be greatly appreciative!	2018-02-28 20:43:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277288
1693126	\N	GSoC is well over, so I'm closing this issue.	2018-09-11 21:02:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692973	\N	Thanks for the clarification. I find your proposal very interesting. Let me suggest to act as follows:\r\n\r\n* Start a pull request in chaoss/metrics in the corresponding md files, with the description of the metrics.\r\n* In the description of the pr, state that you would like to include the GrimoireLab description for the metric.\r\n* You suggest me as reviewer, and I try to help, along with other people in CHAOSS, to see how that fits in.\r\n\r\nWhat do you think? If you decide to go this way, please:\r\n\r\n* Open a pr per metric (and maybe start with only one, until you get familiar with the procedure).\r\n* Ensure that you suggest me as reviewer, so that I don't miss it\r\n* In the comment, include a reference to this issue, so that people have all the context.	2018-03-01 23:37:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692974	\N	Hi @illuminatian. I don't know if [panels schemas](https://github.com/chaoss/grimoirelab-sigils/tree/master/schema) might help you. \r\n\r\nBecause GL supports many different data sources, one metric might be obtained by different means.\r\n\r\nEach .CSV files contains the set of fields each index produced by GL has. \r\n\r\nFor example, for "issues open":\r\n* In [github_issues.csv](https://github.com/chaoss/grimoirelab-sigils/blob/master/schema/github_issues.csv) there is a field called `state`. Filtering by `state=open` in GL will give the metric.\r\n* In [bugzilla.csv](https://github.com/chaoss/grimoirelab-sigils/blob/master/schema/bugzilla.csv) there's the `status` field. Filtering by `status=open` will give you the metric.\r\n* In [maniphest.csv](https://github.com/chaoss/grimoirelab-sigils/blob/master/schema/maniphest.csv) there's the `status` field. Filtering by `status=open` in GL will give you the metric.\r\n\r\nPerhaps, it might be nice working on mapping current CHAOSS metrics with GL data fields and associated filters to get the metrics. What do you think?	2018-03-13 01:29:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1692975	\N	Thanks!!!\r\n\r\nI just fixed that. Please reopen if you feel it was not correctly fixed.	2018-02-19 16:16:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692976	\N	Closed via #73	2018-02-19 22:11:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692977	\N	Hello @jgbarah I would like to work on this. How do i get started?	2018-02-17 14:35:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277293
1692978	\N	Hi, @anthonyabeo. Did you see the microtasks and the GrimoireLab tutorial? Maybbe you can start from there...	2018-02-21 23:11:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692979	\N	Hi @jgbarah ,My name is Vivek Raj i am 1st year student of IIT Kharagpur,India.I would like to contribute to this project for Gsoc 2018.I have a basic knowledge of required skills. I'm currently setting up the environment for starting m work on the microtasks. 	2018-02-25 06:57:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1692980	\N	Great, @vivekrj0! Let us know about your progress.	2018-02-25 22:43:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692981	\N	@jgbarah i am getting the following error when i tried the mordered example from the tutorials.\r\n\r\nTraceback (most recent call last):\r\n  File "/home/username/Env/grimoirelab/bin/mordred", line 140, in <module>\r\n    logs_dir = config_dict['general']['logs_dir']\r\nKeyError: 'general'	2018-02-26 16:53:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277293
1692982	\N	Hey @jgbarah , For creating the indexes in ElasticSearch and to retrieve and enrich data from the git repository i have typed\r\n '' p2o.py --enrich --index git_raw --index-enrich git \\\r\n>   -e http://localhost:9200 --no_inc --debug \\\r\n>   git https://github.com/grimoirelab/perceval.git  ''\r\n**and repeatedly got the error as:**\r\n2018-02-27 00:35:11,557 Debug mode activated\r\n2018-02-27 00:35:11,558 Feeding Ocean from git (https://github.com/grimoirelab/perceval.git)\r\n2018-02-27 00:35:11,560 Retrying (Retry(total=20, connect=20, read=8, redirect=5, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f0d6e8b55f8>: Failed to establish a new connection: [Errno 111] Connection refused',)': /\r\n2018-02-27 00:35:11,961 Retrying (Retry(total=19, connect=19, read=8, redirect=5, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f0d6e8b50b8>: Failed to establish a new connection: [Errno 111] Connection refused',)': /\r\n\r\n_Also i am using campus proxy for the connection._\r\n	2018-02-26 19:24:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1692983	\N	@anthonyabeo how are you running mordred? That errror means there is no `general` section in the Mordred config file...	2018-02-26 23:21:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692984	\N	@vivekrj0, can you please run:\r\n\r\n```\r\nperceval git https://github.com/grimoirelab/perceval.git \r\n```\r\n\r\n(I want to see if you have direct connectivity to git repos in GitHub, which seems you have not, maybe because of that proxy...)	2018-02-26 23:24:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692985	\N	@vivekrj0, I don't if this can help, but I get a similar error when ElasticSearch is not running.\r\nFrom a shell, go to the directory that contains ES and run it, for instance:\r\n```\r\n$ cd elasticsearch-5.6.3/\r\n$ ./bin/elasticsearch  \r\n```\r\nMore information is available at: https://www.elastic.co/guide/en/elasticsearch/guide/current/running-elasticsearch.html	2018-02-27 08:07:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692986	\N	**Thanks for lots of help! @valeriocos and @jgbarah .**\r\nFinally it is listening to local host and  produced new indexes in ElasticSearch..	2018-02-27 09:07:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1692987	\N	I am getting the following error with the database when i run mordred using "mordred -c mordred-grimoirelab.cfg". Anyone has an idea on how i should fix this?\r\n\r\nsqlalchemy.exc.InternalError: (pymysql.err.InternalError) (1826, "Duplicate CHECK constraint name 'top_domain_check'") [SQL: '\\nCREATE TABLE domains_organizations (\\n\\tid INTEGER NOT NULL AUTO_INCREMENT, \\n\\tdomain VARCHAR(128) NOT NULL, \\n\\tis_top_domain BOOL, \\n\\torganization_id INTEGER NOT NULL, \\n\\tPRIMARY KEY (id), \\n\\tCONSTRAINT _domain_unique UNIQUE (domain), \\n\\tCONSTRAINT top_domain_check CHECK (is_top_domain IN (0, 1)), \\n\\tCONSTRAINT top_domain_check CHECK (is_top_domain IN (0, 1)), \\n\\tFOREIGN KEY(organization_id) REFERENCES organizations (id) ON DELETE CASCADE ON UPDATE CASCADE\\n)DEFAULT CHARSET=utf8 COLLATE utf8_unicode_ci\\n\\n'] (Background on this error at: http://sqlalche.me/e/2j85)	2018-02-27 19:06:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277293
1692988	\N	hi @anthonyabeo, the problem should be related to the version of MariaDB (10.2) you are using.Things should work smoothly if you downgrade it to (10.0 or 10.1). In our production env we use 10.0.	2018-02-27 20:46:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1692989	\N	@anthonyabeo more info about this bug is available https://github.com/chaoss/grimoirelab-sortinghat/issues/121	2018-02-28 08:00:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693127	\N	Hi@jgbarah\r\n I would like to take up idea #2 as my GSoC-19 project  in the link provided\r\nhttps://wiki.linuxfoundation.org/chaoss/gsoc-ideas\r\nAlso, looking to patch few bugs being reported in the issue section of the grimoirelab repo\r\nhttps://github.com/chaoss/grimoirelab/issues\r\n\r\nwhat would you say ?\r\n	2018-12-22 12:30:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277305
1692990	\N	@anthonyabeo if you want an easy way of having a downgraded MariaDB without touching your system, consider using Docker [containers from DockerHub for MariaDB](https://hub.docker.com/_/mariadb/). You can find one for MariaDB 10.0 for example.\r\n\r\nYou can also use the grimoirelab/installed container that we produce, and has already Elasticsearch, Kibiter, and MariaDB (10.0). See [instructions on how to use it](https://github.com/chaoss/grimoirelab/blob/master/docker/README.md). You can launch it with `-e RUN_MORDRED=NO`, and use your local install of GrimoireLab to run mordred on it.	2018-02-28 08:49:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692991	\N	**Hi @valeriocos ,**\r\n**When I run this "mordred -c mordred-grimoirelab.cfg" under panels subdirectory and got error message as:**\r\nKibiter/Kibana: uploading dashboard menu...\r\nKibiter/Kibana: uploaded dashboard menu!\r\n2018-02-28 20:08:48,296 - mordred.task_enrich - ERROR - Something went wrong producing enriched data for git . Using the backend_args: ['https://github.com/grimoirelab/perceval'] \r\n2018-02-28 20:08:48,296 - mordred.task_enrich - ERROR - Exception: enrich_backend() got an unexpected keyword argument 'pair_programming'\r\n2018-02-28 20:08:48,297 - mordred.task_manager - ERROR - Exception in Task Manager Failed to produce enriched data for git\r\nException in thread git:\r\nTraceback (most recent call last):\r\n  File "/home/vivek/venvs/grimoirelab/lib/python3.5/site-packages/grimoire_mordred-0.1.15-py3.5.egg/mordred/task_enrich.py", line 132, in __enrich_items\r\n    pair_programming=pair_programming)\r\nTypeError: enrich_backend() got an unexpected keyword argument 'pair_programming'\r\n\r\n_please suggest the way to fix this!_\r\n	2018-02-28 14:57:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1692992	\N	Hi @jgbarah, @valeriocos  I am Anvesh Chaturvedi, a second year student from IIIT Hyderabad, India. I would like to work on this project for GSoC 2018. I am setting up the environment so that I can start working on the micro-tasks.	2018-03-01 06:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277295
1692993	\N	Hey @jgbarah and @valeriocos ,\r\nIn reference to error "TypeError: enrich_backend() got an unexpected keyword argument 'pair_programming' ". which i am getting repeatedly.\r\nIn Github repository of 'grimoirelab-elk' the file 'arthur.py' the following function 'enrich_backend' have the parameter of pair_programming,but in virtual environment of grimoire_elk the file doesn't have the above parameter(pair_programming).\r\n\r\nPlease update the file of grimoire_elk in pip index to fix it.\r\n\r\n**Also provide the documentation of mordred file as i am not getting how it calls the  grimoire_tools() in its configuration file.**\r\n\r\n_Thanks!_	2018-03-01 14:57:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1692994	\N	@vivekrj0 what mordred-grimoirelab.cfg are you using? When you write "under panels subdirectory" what do you mean?	2018-03-01 18:07:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692995	\N	@jgbarah  \r\nI m running "mordred -c mordred-grimoirelab.cfg" under panels subdirectory.\r\nIn Mordred section of  GrimoireLab tutorial it is written that-panels repository should be a subdirectory, named panels, of the directory where the mordred command("mordred -c mordred-grimoirelab.cfg") is to be run.	2018-03-01 18:17:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1692996	\N	@vivekrj0 very likely you're finding some bug. Would you mind, please, opening a bug report in the chaoss/grimoirelab-tutorial? We can follow the discussion there. Please give all the pertinent details, including which version of mordred you're using, which cfg file (if it is exactly the one in the tutorial, let us know, if not, include the file). I think this is something that changed in mordred during the last few weeks.	2018-03-01 18:28:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692997	\N	@anveshc05. Great! Stay tuned in the mailing list for the message explaining how to inform of your progress.	2018-03-01 18:28:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692998	\N	@vivekrj0 with respect to your comment:\r\n\r\n> but in virtual environment of grimoire_elk the file doesn't have the above parameter(pair_programming).\r\n> Please update the file of grimoire_elk in pip index to fix it.\r\n\r\nNot sure which file "in pip index" you are referring to. But feel free to start a pull request if you think there is a bug in any of the config files in any of the repositories.\r\n	2018-03-01 18:33:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1692999	\N	Hi @jgbarah,\r\nIn Grimoire-elk repository there is a latest commit(19 days ago and link-https://github.com/chaoss/grimoirelab-elk/commit/4152bac5f44d2cfae08b7ee1a2edff74b23508d9) which introduces pair programming in Grimoire-elk -https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/arthur.py\r\n_which is not being reflected in pip._	2018-03-01 19:06:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693000	\N	@vivekrj0, with respect to:\r\n\r\n> Also provide the documentation of mordred file as i am not getting how it calls the grimoire_tools() in its configuration file.\r\n\r\nWhat do you mean exactly? The mordred file (if you mean the mordred.cfg dile) only specifies how libraries and in some cases tools are run, but the way they are run is in the source code for Mordred... But very likely I'm missing something... 	2018-03-01 19:07:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693001	\N	> In Grimoire-elk repository there is a latest commit(19 days ago and link-chaoss/grimoirelab-elk@4152bac) which introduces pair programming in Grimoire-elk -https://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/arthur.py which is not being reflected in pip.\r\n\r\nI think you mean pypi, right? That's due to the release model of GrimoireLab. We release weekly usually, but some times there is something that prevent those regular releases. For the last weeks, that has been a busy agenda by the people producing the release, and some delays with a large change in Perceval. Expect a new release during the next few days.\r\n\r\nIn any case, what happens here with pair programming is that gelk was enriching with pair programming always, which didn't make a lot of sense because most projects don't have pair programming info in the repos, even if they use it. So, now pair programming is an option that you can activate. Si, if you need it, you can use with the packages already in pypi: pair programming enrichment is always done, although very likely with no results for most projects. 	2018-03-01 19:14:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693016	\N	@vivekrj0 said:\r\n\r\n> Also that error of pair programming when i run mordred -c mordred-grimoirelab.cfg get resolved as their is bug in the project.json file of the mordred.\r\n> In project.json file the datasource git should be of 'G' capital(i.e Git).\r\n\r\nMmm. I'm not sure which datasource you refer to... If it is the property in `projects.json`, I think it is `git`, lowercase. Or maybe you're referring to something else?\r\n\r\n> As the datasource git is currently matching with the repository of Grimoire lab so it gives the error of parameter missing(latest update) also failed to produce enriched data for git .\r\n> Will I open a issue regarding this in the mordred repo?\r\n\r\nPlease, open an issue in the repository where those sample files are. I'm not sure if that is the grimoirelab-mordred repo, or the grimoirelab-tutorial repo...	2018-03-12 22:32:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693763	\N	It is fixed. #106 	2019-03-09 13:05:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693002	\N	@jgbarah ,\r\nActually i m facing the error related to pair programming when I run "mordred -c mordred-grimoirelab.cfg".\r\n_The  error is:_\r\nKibiter/Kibana: uploading dashboard menu...\r\nKibiter/Kibana: uploaded dashboard menu!\r\n2018-02-28 20:08:48,296 - mordred.task_enrich - ERROR - Something went wrong producing enriched data for git . Using the backend_args: ['https://github.com/grimoirelab/perceval']\r\n2018-02-28 20:08:48,296 - mordred.task_enrich - ERROR - Exception: enrich_backend() got an unexpected keyword argument 'pair_programming'\r\n2018-02-28 20:08:48,297 - mordred.task_manager - ERROR - Exception in Task Manager Failed to produce enriched data for git\r\nException in thread git:\r\nTraceback (most recent call last):\r\nFile "/home/vivek/venvs/grimoirelab/lib/python3.5/site-packages/grimoire_mordred-0.1.15-py3.5.egg/mordred/task_enrich.py", line 132, in __enrich_items\r\npair_programming=pair_programming)\r\nTypeError: enrich_backend() got an unexpected keyword argument 'pair_programming'\r\n\r\nSo I have searched that file('arthur.py' ) in Grimoire-elk repository found that enrich_backend function have the parameter of pair_programming .\r\nhttps://github.com/chaoss/grimoirelab-elk/blob/master/grimoire_elk/arthur.py\r\n\r\n_So what should I do to fix the above error?_\r\n	2018-03-02 05:45:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693003	\N	@vivekrj0 I still miss the contents of your `mordred-grimoirelab.cfg`, and/or where did you get it from (the link). That's why I suggested opening a bug report about that, either in the Mordred repository, or in the repository where you got the configuration file from.	2018-03-02 08:27:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693004	\N	@jgbarah ,\r\nSure, I will the open the bug report in mordred repository very soon.\r\n**Actually I have a question?**\r\nI have created raw as well as enriched index in elastic search and also Kibana is connected to the Elasticsearch data.\r\nthe Kibana displays a read-only list of fields configured for the matching index.\r\nBut when I click on visualize or discover option on kibana menu it again and again shows the message\r\n"Index Patterns: In order to visualize and explore data in Kibana, you'll need to create an index pattern to retrieve data from Elasticsearch."\r\nthe following screenshot is:\r\n![kibana](https://user-images.githubusercontent.com/33966221/36947725-e31cc270-1ff5-11e8-87f5-4faf30b458ef.png)\r\n\r\n\r\n_What should I do in order to visualize the data?_	2018-03-04 17:33:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693005	\N	> What should I do in order to visualize the data?\r\n\r\nI think your indexes are created in Elasticsearch, which is fine. Now in Kibana you need to create the index patterns which give access to the indexes in Elsticsearch. Just define indexes in Kibana with the same name that you have in ElasticSearch, and that would work. Then, you will be able of  creating searches (Discover), visualizations (Visualize) and dashboards (Dashboard).\r\n\r\nYou can also 	2018-03-05 05:34:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693006	\N	Hi @jgbarah ,\r\nI have define indexes in Kibana with the same name as of in elasticsearch.\r\nIt only displays a read-only list of fields configured for the matching index and their is no visualizations(no histogram,no bar graph.)\r\nThe screenshot is:\r\n![new kibana](https://user-images.githubusercontent.com/33966221/36960326-8b91f724-206c-11e8-85f8-575f956ae888.png)\r\n\r\nAgain I click on visualize option it again shows the message to create indexes in kibana and the same process goes on.\r\n	2018-03-05 06:45:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693007	\N	@jgbarah and @valeriocos \r\nI am following the tutorial [(this](https://grimoirelab.gitbooks.io/tutorial/content/grimoireelk/a-simple-dashboard.html)) and I am getting the following error when I try to run : \r\n`(elk) $kidash --elastic_url-enrich http://localhost:9200 \\\r\n  --import /tmp/git-dashboard.json`\r\n\r\nThe error I get is: \r\n`2018-03-05 18:45:34,862 Panel not found (not in directory, no panels module): /tmp/git-dashboard.json`\r\n`\r\n2018-03-05 18:45:34,863 Wrong file format (can't find 'dashboard' field): /tmp/git-dashboard.json\r\n`\r\n	2018-03-05 13:20:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693008	\N	@karansingh1559 , if this may can help you,\r\nYou first keep that file  (git-dashboard.json JSON file) in  the directory where you are currently working and then run the command :\r\n`$ kidash --elastic_url-enrich http://localhost:9200 \\\r\n  --import git-dashboard.json`	2018-03-05 13:52:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693009	\N	@jgbarah ,\r\nFinally ,I got the issue solved by installing Kibana5 as well as corresponding version of elastic search.\r\nNow it shows the git commits,git org commits in bargraphs ,etc of the current repository and also visualizations and dashboards.	2018-03-05 16:10:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693010	\N	@vivekrj0 Thanks! It worked :100: 	2018-03-05 18:47:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693011	\N	@karansingh1559 , yes you have got your issue solved , but just in case this helps for future reference. you would have downloaded the git-dashboard.json file in /tmp folder , so since this is a temporary folder on rebooting OS , the files get deleted from there , hence you didn't have the file /tmp/git-dashboard.json when you turned on the PC next time .	2018-03-05 19:08:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277297
1693012	\N	@vivekrj0  great! I'm not sure what your problem was, but with the current version of packages in pypi, certainly you need Kibana/Kibiter & Elasticsearch 5.x. For 6.x you can use the master HEAD for all packages, or wait until we produce a new release for pypi (hopefully, really soon now).	2018-03-07 05:42:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693013	\N	@jgbarah ,\r\nAlso that error of pair programming when i run `mordred -c mordred-grimoirelab.cfg` get resolved as their is bug in the project.json file of the mordred.\r\n_In project.json file the datasource git should be of 'G' capital(i.e Git)._\r\nAs the datasource git is currently matching with the repository of Grimoire lab so it gives the error of parameter missing(latest update) also failed to produce enriched data for git .\r\n_Will I open a issue regarding this in the mordred repo?_	2018-03-07 06:38:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693014	\N	@vivekrj0 I was getting a different error, something related to incorrect aliases and for that the mordred command was unable to produce a dashboard. Changing the 'g' of 'git' to 'G' solved the error. 	2018-03-09 12:01:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693015	\N	Hi,\r\ni am getting the error "kidash: error: unrecognized arguments: import /tmp/git-dashboard.json\r\n",when i try to run "kidash --elastic_url-enrich http://localhost:9200 \\ --import /tmp/git-dashboard.json"	2018-03-12 19:05:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277298
1693017	\N	@@vivekrj0 said:\r\n\r\n> I was getting a different error, something related to incorrect aliases and for that the mordred command was unable to produce a dashboard. Changing the 'g' of 'git' to 'G' solved the error.\r\n\r\nIn which file you changed this, please? (to fix it).	2018-03-12 22:34:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693128	\N	@jgbarah  needed your guidance regarding GSoC-19 project contribution.\r\n\r\n	2018-12-22 12:31:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277305
1693018	\N	@srisumanth999 said:\r\n\r\n> i am getting the error "kidash: error: unrecognized arguments: import /tmp/git-dashboard.json\r\n",when i try to run "kidash --elastic_url-enrich http://localhost:9200 \\ --import /tmp/git-dashboard.json"\r\n\r\nNot sure what is failing there, but just in case, try the command as:\r\n\r\n```\r\nkidash --elastic_url-enrich http://localhost:9200  --import /tmp/git-dashboard.json\r\n```\r\n\r\nAnd of course, ensure that you have a proper file in `/tmp/git-dashboard.json` (eg, a copy of the one offered as example in the tutorial).	2018-03-12 22:37:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693019	\N	\r\n> In which file you changed this, please? (to fix it).\r\n\r\n@jgbarah I changed it in the projects.json file.	2018-03-14 07:38:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693020	\N	@karansingh1559 said:\r\n\r\n> I changed it in the projects.json file.\r\n\r\nWeird. It should work lowercase. Well, in fact, it *is* working lowercase, at least for me. Have a look for example at this [projects.json file](https://github.com/chaoss/grimoirelab/blob/master/docker/projects.json) we use for the Docker containers.\r\n\r\nHow exactly did you check that it failed (and later worked)? If you can, please post the exact projects.json file that worked, and which command(s) you used to run it.	2018-03-14 07:59:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693021	\N	yeah exactly! @jgbarah \r\n it should work with lowercase.In fact if we change it will show it no error but it won't work.	2018-03-14 08:05:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693022	\N	@vivekrj0 said:\r\n\r\n> it should work with lowercase.In fact if we change it will show it no error but it won't work.\r\n\r\nI'm getting lost ;-) So it works for you lowercase, uppercase or both? In the original messages I understood that the example you were using for `projects.json` had `git` (lowercase) as data source, but it worked when you changed it to 'Git' (uppercase). Am I wrong? And over all: where did you see that `projects.json`file? Because I  still don't know what to fix... ;-)	2018-03-14 17:48:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693023	\N	@jgbarah ,\r\nIt only works with lowercase only only .But when we change it to Uppercase it also works but the enriched data won't be uploaded to dashboard.So changing to git to Git is useless.\r\nI am using this project.json file only\r\n[https://grimoirelab.gitbooks.io/tutorial/mordred/files/projects.json](url).\r\n_Sorry for the entire confusion._	2018-03-14 18:52:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693024	\N	OK, I see. Thanks, @vivekrj0. So, I understand the tutorial is correct in this respect, and there is nothing to fix, right?	2018-03-14 23:09:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693025	\N	@jgbarah @valeriocos  I have written scripts for the first 2 microtasks, but when I tested it on the organisations, elasticsearch is unable to create all the indices I want. I have 2 indices in my cfg file:\r\n   \r\n\tconfig.set('github', 'api-token',  'XXX')\r\n\tconfig.set('github', 'raw_index',  'github_test-raw')\r\n\tconfig.set('github', 'enriched_index', 'github_test')`\r\n\r\nBut for some reason, when I run the Mordred command, my elastic search only shows one of the indices:\r\n![image](https://user-images.githubusercontent.com/24516531/37541744-b5b7bd40-2981-11e8-92a7-264dc412fa1b.png)\r\n\r\nIf I add a git section, it is able to identify and show both the raw and enriched indices. Can you tell me where the problem is?	2018-03-16 19:56:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693026	\N	@karansingh1559, is your script available somewhere so I can have a look at it?\r\n\r\nIt may be possible that the enriched index is not generated because of an error during the collection of raw data? Maybe your token expires before fetching all GitHub repos data, if this is the case you need to add another parameter to your config\r\n```\r\nconfig.set('github', 'sleep-for-rate',  True)\r\n```\r\nHope this helps	2018-03-16 21:43:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693027	\N	@valeriocos Even after adding the 'sleep-for-rate' parameter, I don't get an enriched index. \r\nHere is the script, https://pastebin.com/RqvQAkkB\r\n\r\nThe script is run as : \r\n\r\n> python3 cfg.py org_name --json True \r\n\r\n(if you want to create a json file as well )\r\n	2018-03-16 22:47:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693028	\N	Thank you for the script @karansingh1559 \r\nI was able to generate the raw and enrich indexes by modifying just a little bit your script.\r\nI hope the info below helps to solve your issue.\r\n\r\nWhat I changed was:\r\n```\r\n[es_enrichment]\r\nurl = http://127.0.0.1:9200\r\nuser =\r\npassword = \r\nautorefresh = false\r\nstudies = true       <--- DELETED\r\n\r\n[sortinghat]\r\nhost = localhost\r\nuser = username      <--- CREDENTIALS CHANGED\r\npassword = password  <--- CREDENTIALS CHANGED\r\ndatabase = shdb      <--- DB CHANGED\r\n```\r\nMy chaoss.json is:\r\n```json\r\n{\r\n "grimoire": {\r\n      "github": [\r\n          "https://github.com/chaoss/grimoirelab-perceval",\r\n          "https://github.com/chaoss/grimoirelab-mordred"\r\n      ]\r\n }\r\n}\r\n```\r\n\r\nI tested everything with a Python script:\r\n```python\r\n\r\nfrom mordred.config import Config\r\nfrom mordred.task_collection import TaskRawDataCollection\r\nfrom mordred.task_enrich import TaskEnrich\r\nfrom mordred.task_projects import TaskProjects\r\n\r\nCONF_FILE = "chaoss.cfg" # path to the cfg file\r\nSECTION = "github" # target section in the cfg\r\n\r\n\r\ndef test_raw():\r\n    config = Config(CONF_FILE)\r\n    backend_section = SECTION\r\n    task = TaskRawDataCollection(config, backend_section=backend_section)\r\n    # We need to load the projects\r\n    TaskProjects(config).execute()\r\n    task.execute()\r\n\r\n\r\ndef test_enrich():\r\n    config = Config(CONF_FILE)\r\n    TaskProjects(config).execute()\r\n    backend_section = SECTION\r\n    task = TaskEnrich(config, backend_section=backend_section)\r\n    task.execute()\r\n\r\n\r\nif __name__ == '__main__':\r\n    test_raw()\r\n    test_enrich()\r\n```	2018-03-16 23:38:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693029	\N	@valeriocos Thanks for the prompt reply.\r\nFor some reason, even after creating a new user on mysql and removing the line\r\n    `studies = true` ,\r\nI don't get an enriched index. For some reason, I can still get an enriched index for git but not github. I even created a new access token with all scopes. I'll reinstall mordred to see if it makes any change.\r\n\r\nAnother question, is the script supposed to stop after a while, when it's done creating the indices? When I run mordred, the script never finishes running. Same happens when running the test-script you provided above.	2018-03-17 05:29:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693030	\N	The script should take around 2 minutes (see below) to generate the indeces, and the GitHub token requires only repo and user scopes.\r\n```\r\nCollection for github: starting...\r\nCollection for github: finished after 00:01:54 hours\r\nEnrichment for github: starting...\r\nElasticsearch aliases for github: creating...\r\nElasticsearch aliases for github: created!\r\nEnrichment for github: finished after 00:00:09 hours\r\n```\r\nIn my venv, I have installed the latest versions of grimoire-mordred (0.1.16), grimoire-elk (0.30.24), perceval (0.9.12), panels (0.0.9). I'm using elasticsearch 5.6.3.\r\n\r\nHow many entries you have in your raw index? You can get this number with:\r\n```\r\ncurl -XGET http://localhost:9200/github_test-raw/_count?pretty\r\n```\r\nBtw, is your elasticsearch up and running? I was able to replicate your issue ("the script never finishes running") by stopping elasticsearch and launching the script.	2018-03-17 08:50:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693031	\N	@valeriocos I put together a new environment and started installing everything from scratch. \r\nThe output on running mordred is \r\n```\r\nKibiter/Kibana: version found is 5.6.8\r\nKibiter/Kibana: configured!\r\nDashboard panels, visualizations: uploading...\r\nDashboard panels, visualizations: uploaded!\r\nDashboard menu: uploading...\r\nDashboard menu: uploaded!\r\nCollection for github: starting...\r\n```\r\nI waited for around 15 minutes, but it didn't collect the github data.\r\n\r\nEDIT: My projects.json file had more than a 100 repos. That is why my script kept running. I reduced it to 2, and it took 10 minutes to get done. It's slow, but it works :smile: \r\n\r\nThanks a lot for your assistance! :sweat_smile: 	2018-03-17 20:21:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693032	\N	Hi @jgbarah and @valeriocos,\r\nAlso my github index is not created by elastic search the error which i got:\r\n`Collection for github: starting...\r\n2018-03-20 15:15:34,305 - grimoire_elk.elastic - ERROR - Error creating ES mappings {"error":{"root_cause":[{"type":"illegal_argument_exception","reason":"mapper [data.comments_data.body] of different type, current_type [keyword], merged_type [text]"}],"type":"illegal_argument_exception","reason":"mapper [data.comments_data.body] of different type, current_type [keyword], merged_type [text]"},"status":400}\r\n2018-03-20 15:15:34,305 - grimoire_elk.elastic - ERROR - Mapping: \r\n             {\r\n                "dynamic":true,\r\n                    "properties": {\r\n                        "data": {\r\n                            "properties": {\r\n                                "comments_data": {\r\n                                    "dynamic":false,\r\n                                    "properties": {\r\n                                        "body": {\r\n                                            "type": "text",\r\n                                            "index": true\r\n                                        }\r\n                                    }\r\n                                },\r\n                                "body": {\r\n                                    "type": "text",\r\n                                    "index": true\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n            \r\n2018-03-20 15:15:34,305 - grimoire_elk.arthur - ERROR - Error feeding ocean from github (https://github.com/inkscape/inkscape.git): 400 Client Error: Bad Request for url: http://localhost:9200/github_test-raw/items/_mapping\r\nTraceback (most recent call last):\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/arthur.py", line 147, in feed_backend\r\n    elastic_ocean = get_elastic(url, es_index, clean, ocean_backend)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/utils.py", line 228, in get_elastic\r\n    analyzers=analyzers)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/elastic.py", line 133, in __init__\r\n    self.create_mappings(map_dict)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/elastic.py", line 245, in create_mappings\r\n    res.raise_for_status()\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/requests-2.18.4-py3.5.egg/requests/models.py", line 935, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://localhost:9200/github_test-raw/items/_mapping\r\n`\r\nI have tried above steps but it wont't work.\r\nPlease suggest the way to fix it!	2018-03-20 09:57:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693033	\N	@vivekrj0 thank you for reporting this error. \r\nWhich versions of mordred, elk and elasticsearch are you using?\r\n\r\nThe problem above is due to a mismatch of types in the mapping, your current index defines the comments_data.body as keyword, but the new data is mapped as text. It is likely that if you regenerate the index, the error should be solved.\r\nLet me know if this helps to solve your problem.\r\n\r\n	2018-03-20 10:12:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693034	\N	@valeriocos thanks for consideration,\r\nI am currently using:\r\nmordred - 0.1.18\r\nelk - 0.30.25\r\nelastic search - 5.6.8\r\nkidash - 0.4.3\r\nsorting hat - 0.6.2\r\n\r\nwhich of the version should i change?	2018-03-20 10:21:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693035	\N	You're welcome! \r\nYou can get the latest release of elk (but it should not cause the error above).\r\nPlease, could you try to recreate the raw and enriched indexes?	2018-03-20 10:29:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693036	\N	I have recreated the indexes and this time it is a different a error:\r\n`Collection for github: starting...\r\n2018-03-20 16:05:37,475 - grimoire_elk.arthur - ERROR - Error feeding ocean from github (https://github.com/inkscape/lib2geom.git): 404 Client Error: Not Found for url: https://api.github.com/repos/inkscape/lib2geom.git/issues?state=all&since=1970-01-01T00%3A00%3A00%2B00%3A00&direction=asc&per_page=30&sort=updated\r\nTraceback (most recent call last):\r\n\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/arthur.py", line 207, in feed_backend\r\n    ocean_backend.feed()\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/ocean/elastic.py", line 204, in feed\r\n    self.feed_items(items)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/grimoire_elk-0.30.25-py3.5.egg/grimoire_elk/ocean/elastic.py", line 213, in feed_items\r\n    for item in items:\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/backend.py", line 129, in fetch\r\n    for item in self.fetch_items(category, **kwargs):\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/backends/core/github.py", line 141, in fetch_items\r\n    for raw_issues in issues_groups:\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/backends/core/github.py", line 485, in fetch_items\r\n    response = self.fetch(url_next, payload=payload)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/backends/core/github.py", line 469, in fetch\r\n    response = super().fetch(url, payload, headers, method, stream, verify)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/client.py", line 132, in fetch\r\n    response = self._fetch_from_remote(url, payload, headers, method, stream, verify)\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/client.py", line 157, in _fetch_from_remote\r\n    raise e\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/perceval-0.9.13-py3.5.egg/perceval/client.py", line 153, in _fetch_from_remote\r\n    response.raise_for_status()\r\n  File "/home/vivek/workspace/grimoirelab/lib/python3.5/site-packages/requests-2.18.4-py3.5.egg/requests/models.py", line 935, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 404 Client Error: Not Found for url: https://api.github.com/repos/inkscape/lib2geom.git/issues?state=all&since=1970-01-01T00%3A00%3A00%2B00%3A00&direction=asc&per_page=30&sort=updated`	2018-03-20 10:39:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693037	\N	@vivekrj0 instead of **https://github.com/inkscape/lib2geom.git** try **https://github.com/inkscape/lib2geom**, it should work.\r\n\r\nWhen fetching data from GitHub, the API requires the name of the user/org (inkscape) and repo (lib2geom). If you append the .git, the API will look for the repo lib2geom.git, which doesn't exist.\r\n\r\nLet me know if this fixes your issue	2018-03-20 10:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693038	\N	Thanks! for lots of help! @valeriocos \r\nFinally it worked:\r\n`Collection for github: starting...\r\n Collection for github: finished after 00:00:37 hours\r\nEnrichment for github: starting...\r\nElasticsearch aliases for github: creating...\r\nElasticsearch aliases for github: created!\r\nEnrichment for github: finished after 00:00:12 hours\r\nElasticsearch aliases for github: creating...\r\nElasticsearch aliases for github: created!\r\nCollection for github: starting...\r\nCollection for github: finished after 00:00:04 hours\r\nEnrichment for github: starting...\r\nElasticsearch aliases for github: creating...\r\nElasticsearch aliases for github: created!\r\nEnrichment for github: finished after 00:00:01 hours\r\nElasticsearch aliases for github: creating...\r\nElasticsearch aliases for github: created!\r\n`	2018-03-20 10:57:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693039	\N	I was going through the tutorial for grimoirelab but when using [sortinghat](https://grimoirelab.gitbooks.io/tutorial/grimoireelk/a-dashboard-with-sortinghat.html) command it shows a error\r\n\r\n(grimoirelab) $ sortinghat -u saurabh -p saurabh  init sdata\r\nError: Access denied for user 'saurabh'@'localhost' (err: 1698)\r\n\r\ni tried using 'sudo' but it doesn't work\r\n\r\n(grimoirelab) $ sudo sortinghat -u saurabh -p saurabh  init shdata\r\n[sudo] password for saurabh: \r\nsudo: sortinghat: command not found	2018-03-20 11:28:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277299
1693040	\N	HI @skcse. Is saurabh your username to access the db? \r\nPlease, could you try to type from the shell ```mysql -u user -pXXX -e 'SHOW DATABASES;'```` where user is your username to access the db?	2018-03-20 11:35:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693041	\N	@valeriocos thank you\r\nNow it's working	2018-03-20 13:04:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277299
1693042	\N	@jgbarah @valeriocos Which format is being referred to in \r\n\r\n> Currently, GrimoireLab uses its own format for describing a project, ...\r\n\r\nAlso, when we talk about formats like DOAP and other similar ones, the goal of the GSoC project is to identify more such formats and also being able to convert them to the GrimoireLab format right?\r\n\r\nDo we have to add the list of such formats in the proposal now or will the identification be done over the GSoC  \r\ncoding period i.e over the summer?\r\n\r\n\r\n\r\n\r\n	2018-03-21 14:10:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277296
1693067	\N	@jsdabrowski @apoorvkhare07 @f2014169 you can see the message at: \r\n\r\nhttps://lists.linuxfoundation.org/pipermail/oss-health-metrics/2018-February/000517.html\r\n\r\n	2018-03-02 11:26:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693129	\N	@urstrulykkr sorry for being so late with this. In case you're still interested: this issue was for GSoC'18. For '19, we're still in the stage of proposing our project for participate in GSoC'19. We will open issues with the new tasks in due time. Thanks a lot for your interest!	2019-01-29 21:14:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693043	\N	@valeriocos \r\ni was trying [A GrimoireLab dashboard in one step](https://grimoirelab.gitbooks.io/tutorial/mordred/a-grimoirelab-dashboard-in-one-step.html) with [config.cfg](https://jpst.it/1cBLF) and with [projects.json](https://jpst.it/1cBMi) but i was not able to create index pattern in dashboard\r\n I was using the following commad \r\n\r\n(grimoirelab) $ sudo docker run -p 127.0.0.1:9200:9200 -p 127.0.0.1:5601:5601     -v $(pwd)/logs:/logs     -v $(pwd)/credentials.cfg:/mordred-override.cfg     -v $(pwd)/es-data:/var/lib/elasticsearch     -e RUN_MORDRED=NO     -t grimoirelab/full\r\n(grimoirelab) $ mordred -c config.cfg\r\n\r\nThen i tried creating default index pattern through browser but its ask again and again for default index pattern after creating a index pattern \r\nscreenshot attached\r\nhttps://ibb.co/m92Wec\r\nhttps://ibb.co/cZca5H\r\nhttps://ibb.co/jGOF5H\r\nhttps://ibb.co/bKX8QH\r\nhttps://ibb.co/jE9zXx\r\nhttps://ibb.co/bVQv5H	2018-03-21 20:21:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277299
1693044	\N	@skcse I guess you trying to create dashboard using docker ?\r\nThis may help:\r\n`docker pull grimoirelab/full`\r\n`docker run -p 127.0.0.1:5601:5601 \r\n    -v $(pwd)/credentials.cfg:/override.cfg \r\n    -t grimoirelab/full`\r\ncredentials.cfg contain your api-token!	2018-03-21 20:48:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277294
1693045	\N	@vivekrj0 Thank you \r\nbut i think it won't help as i am trying to make a dashboard with the help of morderd with configuration file as given [here](https://grimoirelab.gitbooks.io/tutorial/mordred/a-grimoirelab-dashboard-in-one-step.html)	2018-03-22 07:07:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277299
1693046	\N	@jgbarah @valeriocos The mail to the mailing list mentioned \r\n> Your proposal should not exceed 3 pages using 11-point font, 1.5 line\r\nspacing, and 1 inch margins.\r\n\r\nWill these guidelines be strictly followed for evaluating the proposals or are they just suggestions for the proposal ?	2018-03-25 19:52:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277295
1693047	\N	Hi @anveshc05 , I woud try to provide a proposal that follows the guidelines. 	2018-03-25 21:25:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693048	\N	Thanks @valeriocos.\r\nThe [GSoC organizations page for Chaoss]( https://summerofcode.withgoogle.com/organizations/4899228015394816/) mentions\r\n> Students will submit their applications to the CHAOSS metrics mail list. In their application they will identify the specific project they are interested in, include a current resume, as well as statement of interest for participating in the Google Summer of Code.\r\n\r\nIs the statement of interest same as the proposal ?	2018-03-25 21:33:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277295
1693049	\N	GSoC is well over, so I'm closing this issue.	2018-09-11 21:01:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693050	\N	Hey @jgbarah \r\n\r\nI'd like to work on this project for Google Summer of Code 2018.\r\nPlease help me getting started.	2018-02-17 12:15:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277292
1693051	\N	Hi, @apsknight have a look at the description of this issue, and let me know if you need further clarifications.	2018-02-18 18:46:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693052	\N	Hi @jgbarah \r\nI had worked on projects related metrics and was trying to gain an insight at GrimoireLab. I am not much aware of the **Elasticsearch** databases. So can you suggest some good resources for its training, so that i can move forward with the idea.\r\nAlso i am facing issues with understanding **Mordred**.	2018-02-19 06:59:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277300
1693053	\N	Hi @vishnoitanuj. For Elasticsearch, I've added in the description of this issue two refernces, to the most usual Python packages to access it. I would recoment going through them, and maybe some tutorial for starters on Elasticsearch.\r\n\r\nWRT Mordred, please let me know what issues you're facing, I will try to produce documentation to help you address them, if I can.	2018-02-19 08:29:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693054	\N	Hi @jgbarah , is it suitable for you if I create my **private** repo with the work and share it with you and your colleagues once I finished? Sorry if the question is trivial, but I was a bit confused by saying "open a GitHub repository, and upload to it:"\r\n\r\nBest,\r\nJacek	2018-02-19 15:23:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277301
1693055	\N	Hello @jgbarah , i am quite interested in contributing in this project . Can you guide me through ?	2018-02-20 13:00:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277297
1693056	\N	@jsdabrowski: the idea is that you open a public repository, and work in it. We will publish soon how to inform us about the url of the repository.	2018-02-21 23:19:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693057	\N	@gopal86, did you have a look at the microtasks and guidelines in the description of this issue?	2018-02-21 23:20:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693058	\N	I need to ask that to work on this project for Google summer of code, I need to compete those microtask provided??	2018-02-24 05:09:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277189
1693059	\N	Hey @sreetamparida, these tasks are for you to understand the libraries and how to analyse repositories using GrimoireLab tools and ELasticsearch. You can also complete these tasks to show that you are capable and comfortable in working with the above listed technologies.\r\nAs written above:\r\n```\r\nOf course, there is no need to do all the microtasks, you only need to show that your skills are in good standing for working in this project.\r\n```	2018-02-24 15:13:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693060	\N	@sreetamparida we need to evaluate candidates. If we have people fulfilling the microtasks, that will help us a lot to know about their skills.	2018-02-25 22:40:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693061	\N	@aswanipranjal thanks for your comment! Yes, it is as you say. In fact, it will not only something that will help us to decide, but also you to know about the project, and about your own skills in this area.	2018-02-25 22:41:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693062	\N	@jgbarah How to update you about the repository ?\r\nI have almost done the first microtask.	2018-02-25 23:23:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693063	\N	@apoorvkhare07 we're about to publish a message in the mailing list about that. Please, stay tuned!	2018-02-28 08:52:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693064	\N	@jgbarah Was the message published? , because I joined the mailing list recently.	2018-03-01 05:40:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277302
1693065	\N	@f2014169 Not yet.	2018-03-01 10:53:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693066	\N	@jgbarah , could you please  include in the mail some information related to a project proposal (what do you expect from it, and what should be included) ?	2018-03-02 10:24:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277301
1693153	\N	????	2018-01-10 19:21:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693068	\N	@jgbarah I am interested in this project. I have installed the necessary tools and have gone through the tutorials and also ran some code. However I had one question in my mind, which may be trivial. The question is:\r\nAre both raw and enriched indices the same for elasticsearch? That is, whether both of them appear as just indexes for elasticsearch, and whether the enriched index is something that is made by ELK exclusively just to facilitate making dashboards? \r\nIsn't there any programmatic way of creating and uploading the enriched index to elasticsearch, instead of running the p2o.py script?\r\n\r\nThank you	2018-03-03 20:21:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277303
1693069	\N	hi @jgbarah  , @germonprez .  I have completed the microtask-1 . can you guide as to what to do next ?	2018-03-03 21:40:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277297
1693070	\N	@gopal86  please visit https://lists.linuxfoundation.org/pipermail/oss-health-metrics/2018-February/000517.html	2018-03-03 22:38:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277302
1693071	\N	@jgbarah  do you have any specific format for proposal??	2018-03-04 21:42:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277302
1693072	\N	> @jgbarah do you have any specific format for proposal??\r\n\r\nNot for now. But let me know if the elements that should be included in it are not clear.	2018-03-05 05:16:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693073	\N	> Are both raw and enriched indices the same for elasticsearch? That is, whether both of them appear as just indexes for elasticsearch, and whether the enriched index is something that is made by ELK exclusively just to facilitate making dashboards?\r\n\r\nThe raw index is intended to store data as similar as possible to the original data source. Raw indexes are usually rich JSON documents, with all the details obtained from the service API or similar.\r\n\r\nThe enriched index is produced from the raw index, for being visualized with Kibiter/Kibana. It is usually a flat JSON document (because nested documents have some trouble with Kibana), which is in part a summary of the documents in the raw index (because only those properties relevant for visualizing are included), and the result of some computing for some parameters (eg, time to close a ticket, which is not directly available from the API, but has to be computed from the time the ticket was opened, to the time it was closed).\r\n \r\n> Isn't there any programmatic way of creating and uploading the enriched index to elasticsearch, instead of running the p2o.py script?\r\n\r\nYes. p2o.py is just a Python script with uses the grimoire_elk module to fetch data (using Perceval), enrich it, and upload it to Elasticsearch.	2018-03-05 05:22:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693074	\N	@jgbarah what would you like to be Included in the proposal? Would you like a candidate to propose how to approach the project? If so, then more detail are needed. Otherwise, cover letter is enough?	2018-03-05 07:26:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277301
1693075	\N	Just wondering would you be able to use Linux Bash Shell on Windows 10 for the things that will be installed for example Elasticsearch. Or would you use something like a virtual machine like Oracle VM?	2018-03-06 17:12:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693076	\N	@jsdabrowski the proposal could be as much detailed as you feel convenient. If you have doubts on the scope, or on what is asked for, that's my fault: let me know what you're missing, and we'll complete the description of this issue as much as needed. If you're doubting between different approaches, that's no problem: either explain the alternatives you see, or just select one and expose why you think it is better. That does not mean we're going to decide to go that way, but it is going to tell us about how you deal with selecting choices...\r\n\r\nBut again, if you feel you need more info, let us know which info you are missing, please.	2018-03-07 05:36:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693077	\N	@kmn5409 I'm not sure what do you mean. If that is if you can run Elasticsearch from a bash (or a powershell) in Windows, I assume you can, although I'm not familiar with Windows, sorry. If that is something else, please let me know.\r\n\r\nHowever, for clarifying, almost all the development for GrimoireLab is done in Linux-based systems. That means that using Linux for development is certainly more friendly, and we can provide much more support.	2018-03-07 05:39:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693078	\N	@aswanipranjal said in chaoss/grimoirelab-tutorial#19:\r\n\r\n> I had some questions about the project Reporting of CHAOSS metrics:\r\n>   To extend the functionality of Manuscripts, we will need to add code to calculate the Metrics listed down at https://github.com/chaoss/metrics, right? If so, how do you suggest that the user demographics be collected and monitored?\r\n\r\nWe may need too add code, or to reuse some code and write the rest from scratch. We welcome your ideas and proposals on how to tackle that, based on your understanding of the code.\r\n\r\nWith respect to specific metrics, please have in mind that not all of them can be retrieved automatically from software development repositories. Some of them could be, for example, collected manually, and written into some properly formatted YAML file, which Manuscripts would read to produce the relevant metrics. But again, we're open to your ideas.\r\n\r\n> In the 3rd Microtask for the project, it is said that: Produce a listing of repositories, as a table and as CSV file, with the number of commits authored, issues opened, and pull requests opened, during the last three months, ordered by the total number (commits plus issues plus pull requests). Does that mean all the public repositories created in the last 3 months? Or does that mean that all the repositories should be listed according to the number of commits authored + pull requests made + issues opened made in the last 3 months? If the answer is the latter one: then how many repositories should be listed out?\r\n\r\nIt is the latter, and the number is all of them. Please remember that the idea is that this should run on GrimoireLab indexes, which means the real answer is "all repositories in the indexes considered". In other words, the code should just look at the indexes, find all the repositories in them, and produce numbers with their activity during the last three months (including those with zero activity).\r\n\r\nIs it more clear now?\r\n	2018-03-08 17:48:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693079	\N	@jgbarah I am still not clear about how many repositories to consider ?\r\nHow many repositories should be stored in the indexes ? \r\nCan it be all the repositories of a particular organisation/user ?   	2018-03-08 20:42:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693080	\N	@jgbarah Thank you for the response I tried using the Bash on Windows 10 but I ran into a number of difficulties so I instead decided to have a dual OS (Ubuntu and Windows) so I'm happy to know you all would be able to provide help with Ubuntu	2018-03-08 22:08:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693081	\N	@jgbarah I have read the Micro-task information and I'm at the first one "Produce a listing of the number of new committers per month" what Github repository is being specified here?	2018-03-08 22:52:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693082	\N	@jgbarah, @germonprez, @jcabot: Where should we submit the proposal for a review? Here or in the mailing list?	2018-03-11 07:27:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693083	\N	@kmn5409: Any repository can be analysed for that Microtask.	2018-03-11 07:30:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693084	\N	@aswanipranjal you will submit the proposal to the GSoC site. 	2018-03-11 15:08:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693154	\N	@jgbarah sorry about the delay. I let you to merge the PR 	2018-01-10 21:07:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693087	\N	@aswanipranjal I agree with @germonprez in his previous comment. This said, I'm going to try to comment on any specific question about the proposal, as long as it is public. This will ensure that all applicants have the same information. In particular, I understand that the part more difficult for the application may be the description of what do you want to do, and the approach for that, so I will try to be specially supportive about that.\r\n\r\nI suggest that we use this issue for all of this, or if needed, a separate one for specific stuff (but please, mention this issue in it, so that we can have a pointer). 	2018-03-12 09:39:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693088	\N	@kmn5409 said:\r\n\r\n> I have read the Micro-task information and I'm at the first one "Produce a listing of the number of new committers per month" what Github repository is being specified here?\r\n\r\nAs @aswanipranjal commented, any repository could be analyzed. Have the link to the repository as a parameter for the script.	2018-03-12 09:42:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693089	\N	@apoorvkhare07 said:\r\n\r\n> I am still not clear about how many repositories to consider ? How many repositories should be stored in the indexes ? Can it be all the repositories of a particular organisation/user ?\r\n\r\nYou should consider any number of repositories: those that are referenced in the enriched index.\r\n\r\nIn other words: for these microtasks, you may assume that you already have an enriched index available for analysis. Your script should work with any properly formed index (for the relevant kind, eg, git, github, etc.). Of course, for testing, you need to produce your own index, with as many repos as you may want. The more testing you do the better, so try to ensure your script works with indexes with extreme cases, such as a single repository, several repositories of the same organization, several repos of several organizations, etc. 	2018-03-12 09:49:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693090	\N	I have a question about Microtask #2 is it that in solving it you would use your own token from github? And when posting what you did you would instruct to put your own personal token?	2018-03-13 12:40:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693091	\N	@kmn5409 Yes while doing the microtask you'll use your own github token to produce the desired output (csv or the plot) and while pushing it on github you can remove it.	2018-03-13 14:28:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693092	\N	@kmn5409, yes, while solving you'd have to use your own personal token. You should remove the token from the notebook when pushing the notebook to GitHub. As stated above:\r\n```\r\nPlease remember removing passwords and/or auth tokens that could be in them, before uploading\r\n```	2018-03-13 14:31:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693093	\N	Thanks @apoorvkhare07, @aswanipranjal! Yes, that's it. In fact, @kmn5409 the recommendation about removing the token is a very good one for whatever credentials you have in your files: remember to remove them before uploading to any public site.	2018-03-14 08:02:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693094	\N	@jgbarah Hello, I am trying to use kibana to visualise data. I have installed kibana and when I go to http://localhost:5601, kibana shows up. However, when I try to visualise I am told to create an index pattern, which I do. I also see a warning on the left side stating that there is no default index pattern. So I set the new index pattern as default. However, as soon as I click on visualise tab on the menu, it disappears and I am shown the same screen and warning about creating a new index pattern. Any help on this?\r\nI followed this: https://grimoirelab.gitbooks.io/tutorial/grimoireelk/a-simple-dashboard.html and downloaded the ```git-dashboard.json``` file, moved it to ```/tmp``` and tried to visualise it, when this error occured.	2018-03-14 21:50:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277303
1693095	\N	@Deepayan-Ghosh It seems to be due to the couchbase template installed in elasticsearch, which might be interfering with the kibana config stored in the .kibana elasticsearch index. The 'mark as default' button in kibana would not work and the kibana config stored in elasticsearch will appear to be empty.\r\nUninstalling the couchbase template or modifying it so it only matches my couchbase indices (e.g. changing "template": "*", to "template": "cb-*",) in couchbase_template.json might resolve this issue.\r\n\r\nyou need to apply the changes by using:\r\n`curl -XPUT http://localhost:9200/_template/couchbase -d @/usr/share/elasticsearch/plugins/transport-couchbase/couchbase_template.json`\r\nand finally,\r\nYou need to delete the .kibana index (or remove the section added by Couchbase template):\r\n`curl -XDELETE http://localhost:9200/.kibana`\r\n\r\n\r\n	2018-03-14 22:07:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693096	\N	@apoorvkhare07, @Deepayan-Ghosh: Which version of Kibana are you using? Indeed, that could be the problem.	2018-03-14 23:08:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693097	\N	@jgbarah, @apoorvkhare07 Yes it was a version problem. Switching to the latest versions solved the problem. Thanks for all the help.	2018-03-15 14:34:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277303
1693098	\N	@jgbarah can I get documentation for the Manuscripts projects somewhere ? \r\nand can you tell more about the project's aim and demands ?    \r\n	2018-03-16 16:39:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693099	\N	@apoorvkhare07 wrt the documentation you can find something at: https://grimoirelab.gitbooks.io/tutorial/content/manuscripts/first-report.html.\r\nHope this helps	2018-03-16 21:51:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693100	\N	@jgbarah I was following this tutorial: https://grimoirelab.gitbooks.io/tutorial/mordred/a-grimoirelab-dashboard-in-one-step.html . Downloaded the `mordred-grimoirelab.cfg` file, `menu.yaml`, and `project.json` files. I also cloned the directory containing the panels but when I run `mordred -c mordred-grimoirelab.cfg` I get the following error:\r\n``` \r\nKibiter/Kibana: version found is 6.2.2\r\nKibiter/Kibana: configured!\r\nPanels, visualizations: uploading...\r\nPanels, visualziations: uploaded!\r\nKibiter/Kibana: uploading dashboard menu...\r\nKibiter/Kibana: uploaded dashboard menu!\r\nElasticsearch aliases: creating...\r\nURL= http://127.0.0.1:9200/_aliases\r\n2018-03-18 03:42:51,223 - mordred.task_manager - ERROR - Exception in Task Manager 400 Client Error: Bad Request for url: http://127.0.0.1:9200/_aliases\r\nException in thread git:\r\nTraceback (most recent call last):\r\n  File "/usr/lib/python3.6/threading.py", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_manager.py", line 92, in run\r\n    task.execute()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_enrich.py", line 215, in execute\r\n    self.__enrich_items()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_enrich.py", line 140, in __enrich_items\r\n    task_aliases.execute()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_panels.py", line 417, in execute\r\n    self.__create_aliases()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_panels.py", line 409, in __create_aliases\r\n    self.__create_alias(es_enrich_url, index_enrich, alias)\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_panels.py", line 380, in __create_alias\r\n    res.raise_for_status()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/requests/models.py", line 935, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://127.0.0.1:9200/_aliases\r\n\r\n```\r\nWhy am I getting such error? When I visit `http://127.0.0.1:9200/_aliases` in my browser I get the following json:\r\n```\r\n{\r\n   "idx_comb":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "git_en_repo-plugins":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "github_toga_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "github_grimoirelab-perceval_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "git_grimoirelab-elk":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "github_raw_repo-plugins":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "idx_comb_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "git_grimoirelab-perceval_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "github_grimoirelab-elk_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "github_voc_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "git_raw":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   ".kibana":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "git_voc":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   "git_grimoirelab-perceval":{\r\n      "aliases":{\r\n\r\n      }\r\n   },\r\n   .................................................................\r\n}\r\n```\r\nAlso if I change `post` to `get` at https://github.com/chaoss/grimoirelab-mordred/blob/master/mordred/task_panels.py#L361 then I do not get the error.	2018-03-17 22:24:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277303
1693155	\N	Then, I merge it myself. Thanks for the approval!	2018-01-10 21:49:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693160	\N	kidash (formerly part of GrimoireELK) moved to a new repo, chaoss/grimoirelab-kidash.	2018-01-18 22:48:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693101	\N	@jgbarah This is related to the proposal. The goal of the project is to add support to manuscripts to produce reports of any repositories based on the metrics in https://github.com/chaoss/metrics. For example, now the pdf report that is generated has sections on: "Overview","Activity","Community" and "Process", however we want to add support for the metrics provided in https://github.com/chaoss/metrics like Diversity-Inclusion, Risk, etc and for each of these categories, analyse the indices, obtain relevant information and produce representations of metrics like "Contributor demographics" for Diversity-Inclusion category, and so on. Is my understanding correct??	2018-03-18 21:45:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277303
1693102	\N	I'm not sure but when I try to create the Kibana dashboard I'm getting the error\r\n`$ kidash --elastic_url-enrich http://localhost:9200  --import /tmp/git-dashboard.json\r\n2018-03-19 09:29:59,907 Panel not found (not in directory, no panels module): /tmp/git-dashboard.json\r\n2018-03-19 09:29:59,907 Wrong file format (can't find 'dashboard' field): /tmp/git-dashboard.json\r\n`\r\nNow I might be putting the tmp folder in the wrong place, where is it supposed to go exactly, I have placed it in a few places in my (perceval) virtual environment. Also I tried looking online and I saw that I could just have the .json file in the same folder. I used this command\r\n`$ kidash --elastic_url-enrich http://localhost:9200 \\ --import git-dashboard.json\r\nusage: usage: kidash [options]\r\nkidash: error: unrecognized arguments:  --import git-dashboard.json\r\n`\r\nBut then I get that error. \r\nThe directory I'm in looks like\r\n`$ ls\r\ngit-dashboard.json  perceval_github_1.py  tmp  token.txt\r\n`	2018-03-19 13:35:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693103	\N	Hi @kmn5409,\r\nA similar problem has been reported and successfully addressed in https://github.com/chaoss/grimoirelab/issues/71 (look for **/tmp/git-dashboard.json** in the comments).\r\nLet me know if this helps you to solve your problem.	2018-03-19 13:55:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693104	\N	@valeriocos Yeah so this was what I had used to try and fix my problem but I still kept getting other issues	2018-03-19 19:05:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693105	\N	@kmn5409, can you tell more about the other issues (or the other issues are the ones above?)	2018-03-20 08:25:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693106	\N	So @valeriocos  I'm trying to follow the tutorial for [https://grimoirelab.gitbooks.io/tutorial/grimoireelk/a-simple-dashboard.html](url) and when I try to create the dashboard I get the issue\r\n`$ kidash --elastic_url-enrich http://localhost:9200 --import /tmp/git-dashboard.json 2018-03-19 09:29:59,907 Panel not found (not in directory, no panels module): /tmp/git-dashboard.json 2018-03-19 09:29:59,907 Wrong file format (can't find 'dashboard' field): /tmp/git-dashboard.json`	2018-03-20 14:09:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693107	\N	@Deepayan-Ghosh said:\r\n\r\n> This is related to the proposal. The goal of the project is to add support to manuscripts to produce reports of any repositories based on the metrics in https://github.com/chaoss/metrics. For example, now the pdf report that is generated has sections on: "Overview","Activity","Community" and "Process", however we want to add support for the metrics provided in https://github.com/chaoss/metrics like Diversity-Inclusion, Risk, etc and for each of these categories, analyse the indices, obtain relevant information and produce representations of metrics like "Contributor demographics" for Diversity-Inclusion category, and so on. Is my understanding correct??\r\n\r\nIn short, yes. But details could be different. For example, we could use a combination of scripts and Python notebooks for producing the result. But first step will be doing that with the current Manuscripts machinery, the rest will depend on progress and ideas.	2018-03-20 18:04:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693108	\N	@kmn5409 said:\r\n\r\n> So @valeriocos I'm trying to follow the tutorial for https://grimoirelab.gitbooks.io/tutorial/grimoireelk/a-simple-dashboard.html and when I try to create the dashboard I get the issue\r\n$ kidash --elastic_url-enrich http://localhost:9200 --import /tmp/git-dashboard.json 2018-03-19 09:29:59,907 Panel not found (not in directory, no panels module): /tmp/git-dashboard.json 2018-03-19 09:29:59,907 Wrong file format (can't find 'dashboard' field): /tmp/git-dashboard.json\r\n\r\nWhich file are you using for `/tmp/git-dashboard.json`? Becase it seems the file is not in the right format.	2018-03-20 18:06:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693109	\N	@Deepayan-Ghosh said:\r\n\r\n> I was following this tutorial: https://grimoirelab.gitbooks.io/tutorial/mordred/a-grimoirelab-dashboard-in-one-step.html . Downloaded the mordred-grimoirelab.cfg file, menu.yaml, and project.json files. I also cloned the directory containing the panels but when I run mordred -c mordred-grimoirelab.cfg I get the following error:\r\n> ...\r\n\r\nThe only thing I see different from my setup is that you're using Kibana 6.2.x, and the latest release I've tried is Kibana 6.1.x. Would you mind trying with Kibana (and Elasticsearch) 6.1.x? Meanwhile, I will try with 6.2.x, to see if we have some trouble with it.\r\n\r\n> Also if I change post to get at https://github.com/chaoss/grimoirelab-mordred/blob/master/mordred/task_panels.py#L361 then I do not get the error.\r\n\r\nMaybe this means something changed in ES 6.1x to 6.2.x... Not sure about that. I will check. BTW, please ensure that you have the latest GrimoireLab pip packages, since those available one week ago were known not to work with ES 6.x. (If you don't mind, tell me which version of the grimoire-mordred package are you using).	2018-03-20 18:09:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693110	\N	@kmn5409 I'm not able to replicate your error. Below, the steps I did:\r\n- Start your ES (let's suppose that your ES is running on http://localhost:9200)\r\n- Run these commands where your p2o.py is located (in my case /home/GrimoireELK/utils/p2o.py):\r\n  ```p2o.py --enrich --index git_raw --index-enrich git -e http://localhost:9200 --no_inc --debug git https://github.com/grimoirelab/perceval.git```\r\n```p2o.py --enrich --index git_raw --index-enrich git  -e http://localhost:9200 --no_inc --debug git https://github.com/grimoirelab/GrimoireELK.git```\r\n- Check that there is something in your indexes:\r\n```http://localhost:9200/git_raw?pretty=true```\r\n```http://localhost:9200/git?pretty=true```\r\n- Click on https://grimoirelab.gitbooks.io/tutorial/grimoireelk/dashboards/git-dashboard.json, right click, save as git-dashboard.json wherever you want (for instance /tmp/)\r\n- Run this command where kidash is located (in my case /home/grimoirelab-kidash/bin/kidash):\r\n```kidash --elastic_url-enrich http://localhost:9200  --import /tmp/git-dashboard.json```\r\n\r\nLet me know if this helps to solve your issue.	2018-03-20 18:59:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693156	\N	Thanks for the review, @acs. New commit pushed, hopefully fixing that typo.	2018-01-03 09:38:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693157	\N	In short, we will proceed in this order:\r\n\r\n* grimoirelab/training. Check all issues related to moving the repo, redirections of old repos, permissions, etc.\r\n* grimoirelab/reports. Check all issues related to TravisCI, automated builds and tests, etc.\r\n* All the other repos, in a short period of time afterwards.\r\n\r\nAll of this will be communicated in the mailing list.	2017-12-18 17:27:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693111	\N	@jgbarah The same modred config file works and does not give any error, when I used Kibana (and elasticsearch) 6.1.0 and 6.1.3 and 6.1.4 versions. However there is an error with the default index pattern that I previously mentioned here: https://github.com/chaoss/grimoirelab/issues/70#issuecomment-373186748 and hence I moved to using lastest 6.2.2 versions.\r\n\r\nOn the other hand, I had mordred version 0.1.15 and I upgraded and reinstalled using pip to get version 0.1.16. However, I see in the github repo that version.py of mordred was just updated to 0.1.19. Trying to use the mordred config file using mordred 0.1.16 still gives error:\r\n```\r\nKibiter/Kibana: version found is 6.2.2\r\nKibiter/Kibana: configured!\r\nDashboard panels, visualizations: uploading...\r\nDashboard panels, visualizations: uploaded!\r\nDashboard menu: uploading...\r\nDashboard menu: uploaded!\r\nCollection for git: starting...\r\nCollection for git: finished after 00:00:04 hours\r\nEnrichment for git: starting...\r\nElasticsearch aliases for git: creating...\r\n2018-03-21 03:19:26,568 - mordred.task_manager - ERROR - Exception in Task Manager 400 Client Error: Bad Request for url: http://127.0.0.1:9200/_aliases\r\nException in thread git:\r\nTraceback (most recent call last):\r\n  File "/usr/lib/python3.6/threading.py", line 916, in _bootstrap_inner\r\n    self.run()\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_manager.py", line 92, in run\r\n    task.execute()\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_enrich.py", line 253, in execute\r\n    self.__enrich_items()\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_enrich.py", line 145, in __enrich_items\r\n    task_aliases.execute()\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_panels.py", line 400, in execute\r\n    self.__create_aliases()\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_panels.py", line 392, in __create_aliases\r\n    self.__create_alias(es_enrich_url, index_enrich, alias)\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/mordred/task_panels.py", line 363, in __create_alias\r\n    res.raise_for_status()\r\n  File "/home/deepayan/Grimoirelab/grimoirelab/lib/python3.6/site-packages/requests/models.py", line 935, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://127.0.0.1:9200/_aliases\r\n\r\n```\r\n\r\nAlso I successfully created report using manuscripts for `git` as data_source. However, if I use `github_issues` as data_source then I get this error, which on comparison with `git.py` in manuscripts I see that https://github.com/chaoss/grimoirelab-manuscripts/blob/master/manuscripts/metrics/github_issues.py#L36 does not have anything mentioned in the list:\r\n```\r\nTraceback (most recent call last):\r\n  File "/home/deepayan/grimoirelab/grimoirelab/bin/manuscripts", line 130, in <module>\r\n    report.create()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/manuscripts/report.py", line 711, in create\r\n    self.create_data_figs()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/manuscripts/report.py", line 603, in create_data_figs\r\n    self.sections()[section]()\r\n  File "/home/deepayan/grimoirelab/grimoirelab/lib/python3.6/site-packages/manuscripts/report.py", line 286, in sec_overview\r\n    author = self.config['overview']['author_metrics'][0]\r\nIndexError: list index out of range\r\n```	2018-03-20 22:12:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277303
1693112	\N	@valeriocos I don't know if I'm saving the git-dashboard.json file in the wrong place, when you say the /tmp/ folder where is that exactly. I get the same issue as before when I run the command\r\n`kidash --elastic_url-enrich http://localhost:9200 --import /tmp/git-dashboard.json\r\n2018-03-21 08:22:32,426 Panel not found (not in directory, no panels module): /tmp/git-dashboard.json\r\n2018-03-21 08:22:32,426 Wrong file format (can't find 'dashboard' field): /tmp/git-dashboard.json\r\n`\r\nAfter following your steps of using p2o.py and then ensuring that something is in the indexes, those work fine	2018-03-21 12:26:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693113	\N	Also I would like to know about how Microtask #5, so when it comes to providing things like documentation, it says that we can do it on any of the GrimoireLab tools so would it also include repositories like chaoss/grimoirelab-perceval and even the repository we're in now chaoss/grimoirelab?	2018-03-21 12:35:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693114	\N	@kmn5409 , open a shell and write **cd /tmp/** (you will be in the /tmp/ folder). In a similar way you could store the git-dashboard.json in another directory (for instance with **cd ~/**, you will be in your home directory).\r\nCan you try to use the .json file in [git-dashboard.json.tar.gz](https://github.com/chaoss/grimoirelab/files/1833533/git-dashboard.json.tar.gz) instead of the one you are using?\r\n\r\n\r\n	2018-03-21 14:00:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693115	\N	Okay thank you for the responses @valeriocos so I saved it in the tmp folder now and when I run the command I now have this error\r\n`\r\nkidash --elastic_url-enrich http://localhost:9200 --import /tmp/git-dashboard.json\r\nTraceback (most recent call last):\r\n  File "/home/keanu/venvs/perceval/bin/kidash", line 77, in <module>\r\n    ARGS.data_sources, ARGS.add_vis_studies)\r\n  File "/home/keanu/venvs/perceval/lib/python3.5/site-packages/kidash/kidash.py", line 703, in import_dashboard\r\n    feed_dashboard(dashboard, elastic_url, es_index, data_sources, add_vis_studies)\r\n  File "/home/keanu/venvs/perceval/lib/python3.5/site-packages/kidash/kidash.py", line 720, in feed_dashboard\r\n    dashboard['dashboard']['value'], data_sources, add_vis_studies)\r\n  File "/home/keanu/venvs/perceval/lib/python3.5/site-packages/kidash/kidash.py", line 241, in import_item_json\r\n    res.raise_for_status()\r\n  File "/home/keanu/venvs/perceval/lib/python3.5/site-packages/requests/models.py", line 935, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 403 Client Error: Forbidden for url: http://127.0.0.1:9200/.kibana/doc/dashboard:Git\r\n`	2018-03-21 16:43:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693116	\N	You're welcome @kmn5409 , do you have [Kibana](https://www.elastic.co/guide/en/kibana/current/deb.html) installed? 	2018-03-21 16:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693117	\N	![screenshot from 2018-03-21 20-29-15](https://user-images.githubusercontent.com/27737729/37744625-8da9f2c8-2d46-11e8-8be8-bcf663b2862e.png)\r\nTo the best of my knowledge yes, is this how you check? @valeriocos 	2018-03-22 00:29:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693118	\N	I was running this command as given in the [tutorial](https://grimoirelab.gitbooks.io/tutorial/grimoireelk/a-simple-dashboard.html) `kidash --elastic_url-enrich http://localhost:9200   --import /tmp/git-dashboard.json`. I am getting the following error :- \r\n\r\n`Traceback (most recent call last):\r\n  File "/home/vallabh/venvs/grimoirelab/bin/kidash", line 33, in <module>\r\n    from kidash.kidash import import_dashboard, export_dashboard, list_dashboards\r\n  File "/home/vallabh/venvs/grimoirelab/bin/kidash.py", line 33, in <module>\r\n    from grimoire_elk.panels import import_dashboard, export_dashboard, list_dashboards\r\nImportError: No module named 'grimoire_elk.panels'\r\n`\r\n\r\nCan anyone help me out ? 	2018-03-23 14:19:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277297
1693119	\N	Hi @gopal86, have you imported/installed the [sigils/panels package](https://github.com/chaoss/grimoirelab-sigils)?	2018-03-23 16:22:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693120	\N	yes  @valeriocos , i had installed it . it also shows `Successfully installed kidash-0.4.3` .\r\n	2018-03-23 16:30:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277297
1693121	\N	It's possible that you are using an old version of [grimoire elk](https://github.com/chaoss/grimoirelab-elk). Please @gopal86, try with the latest version.	2018-03-23 17:11:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693122	\N	@kmn5409, I'm not able to replicate your issue. Do you have the latest version of kidash, ELK?\r\nIs the version of your ElasticSearch aligned with the one of Kibana?	2018-03-23 17:38:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693123	\N	@valeriocos I saw that it might have been the memory on my computer was filled up so I had to make room on it, I assume that was the issue because when I tried to upload things to elasticsearch it was not working, so I think I got it out, and also to answer your question I use docker to get my instance of kibana and elasticsearch.	2018-03-26 03:26:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277127
1693124	\N	Hey @jgbarah\r\n\r\nI'd like to work on this project for Google Summer of Code 2018.\r\nPlease help me getting started.	2018-03-26 15:51:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277304
1693125	\N	@LShivaPrabhakar \r\n\r\nThanks for interest. We do have tasks that we ask potential students to complete. They can be found here:\r\n\r\nhttps://lists.linuxfoundation.org/pipermail/oss-health-metrics/2018-February/000517.html\r\n\r\nYou should also note that the student application deadline is: March 27 16:00 UTC. 	2018-03-26 15:53:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693130	\N	Hi Jesus,\n\nI have a question to ask,should I wait for the GSoC'19 tasks (micro tasks )\nand issues or continue solving the previous year issues.\nI think issues related to a project would be good.\n\nSecondly, what would you recommend me to do, so as to get selected into\nGSoC'19, to contribute for CHAOSS and learn a lot of stuff with you guys.\n\nBest,\nK. Kaushik Reddy.\n\n\n\nOn Wed, Jan 30, 2019 at 2:44 AM Jesus M. Gonzalez-Barahona <\nnotifications@github.com> wrote:\n\n> @urstrulykkr <https://github.com/urstrulykkr> sorry for being so late\n> with this. In case you're still interested: this issue was for GSoC'18. For\n> '19, we're still in the stage of proposing our project for participate in\n> GSoC'19. We will open issues with the new tasks in due time. Thanks a lot\n> for your interest!\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/grimoirelab/issues/70#issuecomment-458709491>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AohxGGtdjU-zIQOczp2ldnlQ5tTaE_Ffks5vILnKgaJpZM4SI2AM>\n> .\n>\n	2019-01-30 16:03:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277305
1693131	\N	I think this has been already solved	2019-08-27 01:31:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1693132	\N	There are some work to do to propagate the [change](https://github.com/chaoss/grimoirelab-perceval/commit/65a5e757a7c07a2dbbe0866a455ee38f96cec5e6) on Perceval to the enricher and dashboards.	2019-08-27 07:05:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693133	\N	Sorry @jsmanrique you were right. This issue was about supporting mattermost.\r\n\r\nAn upcoming feature for the next release will include also details about mattermost channels. Details on:\r\n- Perceval https://github.com/chaoss/grimoirelab-perceval/pull/562\r\n- ELK https://github.com/chaoss/grimoirelab-elk/pull/681\r\n- Sigils https://github.com/chaoss/grimoirelab-sigils/pull/382\r\n\r\n![captura_51](https://user-images.githubusercontent.com/6515067/63842661-55461380-c985-11e9-948f-0e23158a1df2.png)\r\n	2019-08-28 09:17:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693134	\N	@GeorgLink Is this issue up for taking ?\r\nWould like to work on it.	2018-03-09 07:17:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277190
1693135	\N	Hi @apoorvkhare07, I don't know, because I do not maintain this repository. You can create a pull request and discuss with the repository maintainers on changes they want.	2018-03-09 13:22:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693136	\N	I guess it shoud point to https://grimoirelab.gitbooks.io instead.	2018-02-08 15:50:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277306
1693137	\N	Thanks for the report. I hope #64 fixes this. Please close the issue if you feel it does.\r\n\r\nIn fact, we're transitioning from http://grimoirelab.github.io to http://chaoss.github.io/grimoirelab , and this is a side effect of that change.	2018-02-08 16:49:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693138	\N	Sorry, @jsmanrique but I miss the rationale. Why should we remove that?	2018-01-30 17:41:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693139	\N	Because, I expect that next CHAOSSCon won't be managed from GrimoireLab website. So I expect the GrimoireLab docs website to be based on GrimoireLab related topics.\r\nIMHO current page (with this PR) is a temporary solution while we move to a more docs oriented website, but I might be wrong on this strategy/thought	2018-01-30 18:17:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1693140	\N	OK, I undestand. Merging.	2018-02-13 23:43:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693141	\N	Commented in chaoss/metrics#49.	2018-01-22 08:48:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693142	\N	Hi @rpaik,\r\n\r\nWe've been working on defining a new index for Gerrit having in mind these requirements.\r\n\r\nThe new schema would be the following:\r\n\r\n|name| type| description|\r\n|------|------|------|\r\n |is_patchset| long| 1 if the item is a patchset.|\r\n |is_approval| long| 1 if the item is an approval|\r\n |is_patchset_comment| long| 1 if the item is a comment|\r\n |is_changeset| long| 1 if the item is a code review process|\r\n |type| keyword| "approval or  patchset or  changeset or  comment"|\r\n |author_bot| boolean| True if the given author is identified as a bot|\r\n |author_domain| keyword| Domain associated to the author in sortinghat profile|\r\n |author_id| keyword| Author Id from sortinghat|\r\n |author_name| keyword| Author name|\r\n |author_org_name| keyword| Organization the author belongs to|\r\n |author_user_name| keyword| Author user name|\r\n |author_uuid| keyword| Author unique identifier from sortinghat|\r\n |changeset_branch| keyword| Development branch created for the corresponding changeset|\r\n |changeset_closed| date| Closing date of the corresponding changeset|\r\n |changeset_domain| keyword| Domain of the author (not coming from SortingHat)|\r\n |changeset_num_patchsets| long| Number of patchsets/iterations involved in the changeset|\r\n |changeset_status| keyword| "Gerrit status of the corresponding changeset such as Abandoned,  Merged or Open. The actual value depends on the instance of Gerrit."|\r\n |changeset_timeopen| double| Time that the changeset has been opened in days|\r\n |grimoire_creation_date| date| "Item creation date (patchset|  approval|  patchset comment or code review)."|\r\n |is_gerrit_review| long| Field containing '1' that allows to sum fields when concatenating with other indexes|\r\n |metadata__enriched_on| date| Date when the item was enriched|\r\n |metadata__gelk_backend_name| keyword| Grimoire-ELK backend name|\r\n |metadata__gelk_version| keyword| Grimoire-ELK version|\r\n |metadata__timestamp| date| Date when the item was stored in RAW index|\r\n |metadata__updated_on| date| Date when the item was updated in its originaldata source|\r\n |number| keyword| Gerrit changeset unique identifier|\r\n |ocean-unique-id| keyword| Unique identifier for all of the datasets in the information lake|\r\n |origin| keyword| Original URL where the changeset was retrieved|\r\n |patchset_author_bot| boolean| True if the given author is identified as a bot|\r\n |patchset_author_domain| keyword| Domain associated to the author in sortinghat profile|\r\n |patchset_author_id| keyword| Author Id from sortinghat|\r\n |patchset_author_name| keyword| Author name|\r\n |patchset_author_org_name| keyword| Organization the author belongs to|\r\n |patchset_author_user_name| keyword| Author user name|\r\n |patchset_author_uuid| keyword| Author unique identifier from sortinghat|\r\n |patchset_domain| keyword| Domain associated to the author in the patchset (not coming from SortingHat)|\r\n |patchset_githash| keyword| Hash of the commit included in the corresponding changeset|\r\n |patchset_number| long| Patchset identifier|\r\n |project_1| keyword| Second level project hierarchy (typically not used in Gerrit)|\r\n |project| keyword| First level project hierarchy|\r\n |repository| keyword| Repository (project in Gerrit terminology) where the changeset is sent|\r\n |summary_analyzed| text| Text summary added by the developer. This is typically the commit message. This field is tokenized for searching purposes|\r\n |summary| keyword| Text summary added by the developer. This is typically the commit message|\r\n |tag| keyword| Perceval tag|\r\n |url| keyword| Full URL pointing to the changesetFull URL pointing to the changeset|\r\n |uuid| keyword| Perceval UUID|\r\n\r\n\r\nThis new index is as the original Gerrit one, but new events are added. These are the patchset sending action, the approval process (either automatically verified by CI or code-reviewed by a human being, and the comments left in its section.\r\n\r\nFor each of those new events, the author is retrieved and the specific action (e.g.: +1 in a code review process).\r\n\r\nWith this in mind, I'd say we would be covering the specific metrics you're talking about. And we may have some others that may help to understand how fair the code review is among organizations, or certain developers.\r\n\r\nComments or concerns? :)\r\n\r\nRegards,\r\nDaniel.	2018-06-21 16:49:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1693143	\N	This is solved by:\r\n* https://github.com/chaoss/grimoirelab-elk/pull/616\r\n* https://github.com/chaoss/grimoirelab-sigils/pull/358\r\n* https://github.com/chaoss/grimoirelab-sirmordred/pull/297	2019-05-06 17:02:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1693144	\N	Let's focus on Q&A forums: Askbot, Stackexchange, and maybe Discourse	2018-04-09 14:00:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1693145	\N	Already done in the mentioned data sources. For each of those there is a new pie chart that gives the pieces of information of net and relative number of answered and unanswered questions.\r\n\r\nThen, depending on the data source, there may be another pie chart stating the number of accepted answers. These are those questions with a 'proven' solution and accepted by the community or the owner of the question.	2018-08-09 15:51:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1693146	\N	This is working for Kibana 5 and Kibana 6 panels.	2018-08-09 15:51:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1693147	\N	Perceval now includes this field (see chaoss/grimoirelab-perceval#333 and chaoss/grimoirelab-perceval@6a087de8ea176d4bdf692678102c305b17959cf5).\r\n\r\nThe next step is add it to the enriched items generated by GELK.	2018-02-27 11:22:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693148	\N	GELK now includes this information https://github.com/chaoss/grimoirelab-elk/pull/249	2018-03-16 22:05:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693149	\N	I think this is done. @sanacl can we close it?	2018-09-11 21:05:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693150	\N	@jgbarah yep, let's close it.	2018-10-01 09:51:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1693151	\N	Feedback already provided by @jgbarah : \r\nIn short, you will need to re-enrich the data. That is, you can use either p2o or Mordred to re-enrich the data, telling it (I mean, telling p2o or Mordred) that you want to use SortingHat. That will inject all identities in the raw indexes in Sorting Hat, and produce new enriched indexes with identities. Of course, you don't need to use the same indexes you're using now: you can just build new enriched indexes, test them, and if they work just create new aliases for them.\r\n\r\nThen, it is a matter of improving SortingHat data (by eg merging identities that you know are the same), and re-enrich the enriched indexes with the new SortingHat ids.\r\n\r\nThe easiest way of doing this is probably to use Mordred. You tell Mordred (in mordred.cfg) that your raw indexes are the ones you already have, and that it produce enriched indexes under new names. And that it uses SortingHat. When Mordred runs with that configuration, it will find the raw indexes, and no enriched indexes, so it will try to produce them. Since it will be told to use SortingHat, it will just use it. Of course, backup all indexes in advance, cross fingers and all that :-O\r\n\r\nIf you want, I can try to drive you through the process (I was about to write about that for the GrimoireLab tutorial). You can be my guinea pig for a while ;-)\r\n\r\n--\r\n\r\nWe can follow up in a ticket, if you don't mind this discussion being public: that way it could help some others. But if you prefer to go private, let's use email.\r\n\r\nIn case you prefer to go public, I suggest we open a ticket in chaoss/grimoirelab (formerly grimoirelab/grimoirelab), where we're discussing general stuff related to GrimoireLab, since more modules are going to be involved, in addition to Sorting Hat. We can later close this ticket mentioning that one.\r\n\r\nMeanwhile, let me mention that now installation of Sorting Hat and all other components should be much easier. If you want, you can use pre-installed docker containers, have a look at https://grimoirelab.gitbooks.io/tutorial/mordred/mordred-in-a-container.html If you want, maybe I could help you, or your IT people, to move to that kind of deployment. Otherwise, installation via pip should be much more reliable now, too.	2018-01-15 18:52:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277308
1693152	\N	@jgbarah I am preparing the installation of sortinghat this week, and its requirements. I will ping you when this is done on how to actually start configuring and using it.	2018-01-15 18:53:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277308
1693162	\N	* grimoirelab/panels moved to chaoss/grimoirelab-sigils\r\n* grimoirelab/mordred moved to chaoss/grimoirelab-mordred\r\n* grimoirelab/sortinghat moved to chaoss/grimoirelab-sortinghat\r\n* grimoirelab/grimoirelab-toolkit moved to chaoss/grimoirelab-toolkit\r\n* grimoirelab/GrimoireELK moved to chaoss/grimoirelab-elk\r\n* grimoirelab/arthur moved to chaoss/grimoirelab-kingarthur\r\n* grimoirelab/perceval moved to chaoss/grimoirelab-perceval\r\n* grimoirelab/perceval-opnfv moved to chaoss/grimoirelab-perceval-opnfv\r\n* grimoirelab/perceval-mozilla moved to chaoss/grimoirelab-perceval-mozilla\r\n* grimoirelab/perceval-puppet moved to chaoss/grimoirelab-perceval-puppet\r\n	2018-02-13 23:05:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693163	\N	Kibiter is still missing. I guess with it, the process will be complete. If you notice any problem with these changes, please let me know.	2018-02-13 23:39:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693164	\N	I think this was done long time ago, but we didn't close the issue. Closing it now.	2018-09-11 21:03:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693165	\N	This ticket shouldn't be part of the community backlog. My bad.	2017-12-07 19:21:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1693166	\N	This issue must be opened in perceval, not here. The error is inside the jenkins backend. Could you open it there @albertinisg ? In any case, it is an error with the upstream server. It can be handled better in the perceval backend for jira, but it can not be fixed (the new client code being developed in perceval will help in doing retries when these errors appears).	2017-11-28 05:20:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693167	\N	This is an issue for the perceval git backend. Please open this ticket in perceval repository. Thanks @albertinisg!	2017-11-28 05:21:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693168	\N	@sanacl this kind of bugs must be opened in perceval or in GrimoireELK. 	2017-11-28 09:00:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693169	\N	@acs I have no idea what component is failing. What tracker should I use in that case? And before answering remind this is something that needs to be easy to be understood by our community folks	2017-11-28 16:50:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1693170	\N	@sanacl if you have tried with perceval from command line and it works, then the error is in GrimoireELK. If not, it is in perceval. And I have in mind that this is read by our community ;)	2017-11-28 22:51:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693171	\N	This is a perceval issue. It must be opened in: https://github.com/grimoirelab/perceval/issues\r\n\r\nCould you open it there?	2017-11-23 16:01:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693172	\N	The meetup backend implements a mechanism such as if an API call fails with a 429 error message, it tries at most 5 attempts before raising the HTTPError exception. Between every failed call the backend sleeps an amount of time equal to **30 seconds * the current attempt** (e.g,, in the third attempt the backend will sleep 30 * 3 seconds). \r\n\r\nYou can try to set a greater value than 30 seconds by using the backend parameter **sleep_time** (e.g., 100).  \r\n\r\n@sanacl, let me know if this fixes the bug.	2017-11-23 16:41:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693173	\N	@sanacl this is a perceval issue. It is better next time that it is opened in perceval repository.	2017-11-28 08:32:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693174	\N	Is this fixed already, @sanacl @acs ?	2018-09-11 21:06:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693175	\N	> Is this fixed already, @sanacl @acs ?\r\n\r\n@valeriocos and @sanacl should know it. I don't know.	2018-09-26 13:33:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693176	\N	That repository doesn't exist. Closing this ticket because it isn't a bug.	2017-11-22 13:20:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693177	\N	@sanacl does that repository exist? GitHub returns a 404 error.\r\n\r\nSorry if I closed this issue so fast.	2017-11-22 13:21:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693178	\N	This seems to be a problem with Perceval and its integration with dulwich.	2017-11-22 10:39:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693179	\N	You have to remove that repository from your local directory.\r\nPerceval does not support to work with git working directories anymore. It only works with bare or mirror repos.	2017-11-22 13:23:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277237
1693180	\N	@pmonks do you have a specific list of metadata you already have? Just to four listed above? We are working in a new tool for Project Description (Bestiary: https://github.com/acs/bestiary ... it will be moved next weeks to GrimoireLab organization) and this ticket could be related to it. 	2018-02-05 10:23:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693181	\N	@acs those four, plus "Ecosystem" (a string value) are our current metadata requirements, however I think it's inevitable that we'll identify additional metadata needs going forward.\r\n\r\nI think it's also important to highlight that these four are quite specific to our business problem and are unlikely to be applicable to other organisations, so a general purpose metadata mechanism that allowed each user to define & populate their own custom metadata model would be highly preferable.	2018-02-05 20:25:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1693182	\N	I'd encourage you to review the content management literature for ideas on how to properly support this requirement.  Custom metadata has been a central part of that industry segment for more than 3 decades, so there's a lot of prior art to crib from.\r\n\r\ntl;dr - supporting custom metadata models is easy; supporting the evolution of custom metadata models over time is where things get complex, and that can't really be retrofitted later.	2018-02-05 20:27:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1693183	\N	@pmonks thanks for your suggestions. The initial approach probably will be to define the `metadata` as a JSON (python dictionary) and store it as a string serialized in a field in the project data model. And once we have real use cases of the metadata, we can design a more semantic approach to the metadata management.	2018-02-06 08:42:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693184	\N	@acs that sounds like a good start, but recall that metadata isn't just for projects - it may also be for authors, affiliations (companies), data sources, etc.	2018-03-16 16:37:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1693185	\N	Hey @acs and team - is there any chance we can get an update on this one? Is it actually planned for a certain release or timeframe? \r\n\r\nThe inflexibility of bitergia model is becoming quite of a blocker as our foundation grows, which at this point does not solve important business problems for us (project lifecycle, project categorization, organization type, etc).\r\n\r\nThanks in advance for your attention on this!	2018-04-06 19:07:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277309
1693186	\N	@mindthegab first of all, I am sorry for the lack of a timely response to this ticket.\r\n\r\nRecovering the initial requirements from @pmonks, I would focus in some specific use cases, for supporting the projects metadata. GrimoireLab has already a meta field in the projects.json file, which can be used, but later, this data must be used during the index generation so the data appears.\r\n\r\nFor adding metadata to member and organizations, SortingHat is ten right place in order to have all the identities data in a unique source.\r\n\r\nBut this is not a general solution, I know. For working in a general solution, we will need a common data schema for all the items in GrimoireLab, so we can add metadata to them. And right not, this common data schema does not exists.\r\n\r\nWhat GrimoireLab has is that all items in the platform are described in JSON format, so during the generation of the data for the indexes, a future "metadata source" could be queried to add additional info to the JSON items.\r\n\r\nRight now we are redefining the enrichment processes so it is a good moment to analyze this requirement. But we can not provide a commitment for such a general feature now.\r\n\r\nIf we focus in projects or identities metadata, we can analyze them to provide you a release or timeframe estimation.\r\n\r\nDo you think @mindthegab and @pmonks that we can focus in some initial use cases (having in mind during the design that the idea is to extend it to the rest of GriomoireLab)?\r\n	2018-04-10 16:48:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693187	\N	@acs custom metadata for just projects would be a great start - that's where most of our requirements are.	2018-04-10 18:13:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1693188	\N	> @acs custom metadata for just projects would be a great start - that's where most of our requirements are.\r\n\r\nGreat. Let's focus on that then. The implementation is pretty direct So we just need to define it correctly. Let's start adding a new field to the "meta" field in projects.json called "ecosystem". Could you add it to your projects.json in SymphonyOSS, @pmonks ? After that, we will add support so this field appears in all your enriched indexes just in the same way that project field now appear. \r\n\r\nSo for example:\r\n\r\n```\r\n  "WG-API" : {\r\n    "confluence" : [ "WGA" ],\r\n    "mbox"       : [ "wg-api /home/bitergia/mboxes/barnowl_symphony_wg-api" ],\r\n    "meta"       : { "title" : "WG-API", "ecosystem": "GlobalECO"}\r\n  }\r\n```\r\n\r\nfor all the items enriched related to the WG_API in confluence and mbox, there will be a field called `metatada_custom_ecosystem=GlobalECO`.\r\n\r\nDoes it satisfy your needs?\r\n\r\n\r\n	2018-04-11 10:28:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693189	\N	Yes, although it would ideal if we could shorten the `metadata_custom_` prefix to make querying in the Kibana UI easier.  How about using `mc_` or (even better) `cm_` instead?\r\n\r\nAlso, can we also start putting in the other custom project related fields I listed above?  Meaning, is this already an extensible, general purpose way to add any fields we like?  And if so, are there any restrictions we should keep in mind (e.g. total number of custom fields, use of non-string data types, etc.)?	2018-04-11 16:15:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1693190	\N	> Yes, although it would ideal if we could shorten the metadata_custom_ prefix to make querying in the Kibana UI easier. How about using mc_ or (even better) cm_ instead?\r\n> \r\n\r\nYes, it makes sense. I like the "cm_" prefix. Let's go with it in the first iteration.\r\n\r\n> Also, can we also start putting in the other custom project related fields I listed above? Meaning, is this already an extensible, general purpose way to add any fields we like?\r\n\r\nThe ideas as that all fields that appears inside the 'meta' dictionary will appear in the items, yes.\r\n\r\n> And if so, are there any restrictions we should keep in mind (e.g. total number of custom fields, use of non-string data types, etc.)?\r\n\r\nIf the custom field values are valid JSON values, I think it should be ok. So for example, you can have as values strings, numbers, lists, dicts ... and these will appear in the enriched items. Let's start with string, numbers and lists and check that the chain support them. My bet is that there will be no problems.	2018-04-11 16:40:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693191	\N	Perfect.  For right now I think we only have string values anyway, though I could imagine adding a date field before too long (which may be tricky, given the appalling lack of support for date/time/TZ data types in JSON / Javascript).	2018-04-11 16:51:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277290
1693192	\N	> Perfect. For right now I think we only have string values anyway, though I could imagine adding a date field before too long (which may be tricky, given the appalling lack of support for date/time/TZ data types in JSON / Javascript).\r\n\r\nJSON is which fixes some requirements here. In Python we just get the JSON and convert it to a python dict. So if you can add it to JSON, we can add it to the enriched items :+1: 	2018-04-11 17:04:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693193	\N	All is implemented now. In the `projects.json` file you can add metadata to a project which will be shown in all its items.\r\n\r\nFor example:\r\n\r\n```\r\n....\r\n  "FDX Program" : {\r\n    "meta"       : { "title"   : "FDX Program",\r\n                         "program" : "FDX" },\r\n...\r\n```\r\n\r\nSo closing this item.	2018-05-30 04:18:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693194	\N	Hold your horses, this seems to be a server error.\r\n\r\n```\r\n luis@hogaza ÓÇ∞ /tmp ÓÇ∞ git clone http://gerrit.onap.org/r/dcae/apod/cdap                        \r\nCloning into 'cdap'...                         \r\nwarning: redirecting to https://gerrit.onap.org/r/dcae/apod/cdap/                              \r\n\r\n\r\nerror: RPC failed; HTTP 504 curl 22 The requested URL returned error: 504 Gateway Time-out\r\nfatal: The remote end hung up unexpectedly\r\n```	2017-11-16 12:23:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277240
1693195	\N	Please, use the "Enhacenment" tag for feature requests, since this is what seems to be encouraged in GitHub, and what is already being used in some other repos.	2017-11-16 11:52:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693196	\N	My main concern with the current state of this PR, already merged, is the addition of scrips living in other repositories like menu.yaml and build_grimoirelab. This is going to cause headaches for sure because the tracking should be done manually for this files. Also, there are several config files that should also be collected from other place during the image creation.\r\n\r\nBut as a first try it is a good initial step to start iterating.	2017-11-16 06:53:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693197	\N	Yes, you're completely right. We need to find a way of keeping that in sync automatically. I'm exploring some ways, I'll let you know, likely with new PRs, about any progress.\r\n\r\nThanks for merging!	2017-11-16 11:15:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693198	\N	I hope this new commit addresses your concerns. In fact, `--build` should be the default action, but only if no other action was defined (so that for example you can `--install` already produced pkgs)	2017-11-14 11:55:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693199	\N	Changes hopefully addressed. Please let me know if you need something else. Thanks for the review.	2017-11-09 11:03:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693200	\N	Thanks, @hmitsch for the proposal. I understand that what you mean is having the chance of specifying more than one Discourse instance when you specify the list of repositories to analyze, right?\r\n\r\nIf this is the case, I think this needs to be supported in mordred. Am I right, @acs ?	2017-11-16 11:56:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693201	\N	Yes, this should be supported in mordred but not only. In our projects.json format that defines the data sources to be analyzed, only one discourse site can be added. The categories for this unique discourse site are then mapped to projects. Supporting having more than one discourse site will have impact in both places: mordred and projects definition (GrimoireELK).	2017-11-16 13:20:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693202	\N	I've been learning a bit how DockerHub works, and maybe there are other solutions wrt the name of the docker image. To begin with, maybe we could use regular images (without using "Automated Builds"). That means you have to push the image manually, but that also means you can control when to push it.\r\n\r\nIn any case, if we want to push automatically, I'm almost sure we could do that with post commit hooks. But we can comment about that.\r\n\r\nWhy  Dockerfile is better in its own directory (sorry for my ignorance).	2017-11-08 23:15:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693203	\N	@jgbarah you have done/continued this work in other PR already merged so let's close this one also.\r\n\r\nhttps://github.com/grimoirelab/grimoirelab/pull/32	2017-11-13 18:24:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277236
1693204	\N	> Thank you @Polaris000 , the PR looks good! @jgb feel free to have a look, thanks!\r\n\r\nAgain, I am not @jgbarah ...	2019-10-14 11:45:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277283
1693205	\N	sorry @jgb for the noise	2019-10-14 13:03:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693206	\N	@jgbarah we can merge it and reiterate on the code if needed	2019-10-14 19:32:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693207	\N	Yes, I agree, thanks a lot for merging.	2019-10-14 20:59:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693208	\N	@jgbarah we can merge it and maybe reiterate on the code with another pr	2019-10-14 19:31:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693209	\N	Yes, i agree. Thanks.	2019-10-14 21:00:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693210	\N	@GeorgLink I believe I've correctly fixed the formatting/link errors, please let me know if I missed anything. Thank you for catching them!	2019-10-18 00:43:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1693211	\N	For `code changes` you mean everything that is in a PR (even PRs containing changes on the documentation)?\r\n\r\nFocusing on the issue closed without code changed, they may include more kinds of "talkative" issues, for instance the ones asking about how to use a functionality or invalid bug reports (which don't lead to a PR, but born as potential outcome-driven). For this reason, it would be helpful to define the concept of talkative, wdyt?\r\n\r\nShould this metric take into account also references to other issues/PRs? An example could be this one: https://github.com/crossminer/scava-deployment/issues/89 where the issue is linked to a PR (which improved the documentation), or https://github.com/crossminer/scava-deployment/issues/94. In a nutshell, the issue makes a summary referencing other related issues, one of them is the first example.\r\n\r\n>1) Should this metric be a filter for Issues Closed?\r\n>2) Is there another related metric?\r\n>3) Is it its own metric?\r\n\r\nI bet for 3), although related to issues closed, it uses the information with a different intent (talkative vs outcome-driven)	2019-08-30 07:28:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693212	\N	I find this metric you propose as a holy gray, not easy to implement, but very interesting. WRT the metrics we have now, yes, it would be implemented as "Issues_Closed", with the filter for "is source code" set to "touched at least one source code file when fixed". The problem, as @valeriocos states, is how to know if the fix touched code or not.\r\n\r\nTo begin with, you need to know if there is a fix. That can be done if the project has the policy of labeling commits with the issue they are closing (eg, `Closes #23`), or if issues are cited in PRs (in a similar way). In some very specific cases (such as when people use Bugzilla for code review), code review tickets are semi-automatically associated to issues (because the project has the policy of citing related issues in Bugzilla, and both code reviews and issues are on the same system). Something similar happens in the case of some projects using Gerrit, which usually link to the issue being fixed with a new patchset (patch proposed for code review).\r\n\r\nThe second problem, is that you know this only when the bug is fixed. Since at any given moment may issues are still open, and there is (still) no commit fixing them, if you can produce this metric, it is going to be difficult to use for the recent past, because you really don't know how many of the currently open bugs are going to be closed by touching code, until they are actually closed. But this is something that can be a no-problem, depending on what you need your metric for (eg, just knowing the fraction of issues that were closed touching code is rather useful in many cases).\r\n\r\nSo, in summary: from the "theory" point of view, we have this covered with the "Closed_Issues" plus a strict filter on "fix touched source code". From the practical point of view, it is not that easy to implement (but it is certainly doable).	2019-08-30 08:20:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693213	\N	Please have a look @jgbarah, whenever convenient.	2019-08-20 18:44:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693214	\N	Please have a look @jgbarah.\r\nI can now create implementations for Issue related metrics, since @valeriocos pushed the required changes to a separate branch which can be used for the purpose of the reference implementations.\r\nMore information can be found [here.](https://github.com/chaoss/grimoirelab-perceval/issues/563)	2019-08-13 17:44:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693215	\N	Do you suggest adding anything else on the main README page (for the whole repo) [here](https://github.com/chaoss/wg-evolution/pull/241/files#diff-04c6e90faac2675aa89e2176d2eec7d8)?	2019-08-20 18:48:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693216	\N	> Do you suggest adding anything else on the main README page (for the whole repo) [here](https://github.com/chaoss/wg-evolution/pull/241/files#diff-04c6e90faac2675aa89e2176d2eec7d8)?\r\n\r\nI think we can start with this, and them improve it. But now, it is urgent that you produce your final blog post, and that you can link to this pr and the README files that explain the results of your work. So, I'm merging this for now. Feel free to pr with improvements to READMEs in the future, if you want.	2019-08-22 16:49:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693217	\N	Thanks for the review @jgbarah. I'll upload my final post soon, so that you and the other mentors can have a look and suggest changes.	2019-08-22 17:33:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693764	\N	Merging, since nobody opposed.	2019-03-12 17:04:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693218	\N	@valeriocos , the file you changed is has been renamed. Travis is working for #205.	2019-08-12 10:32:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693219	\N	yes, just realized it. Thanks	2019-08-12 10:51:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693220	\N	Please have a look @jgbarah .	2019-08-12 11:23:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693221	\N	Thanks for the reviews!\r\n\r\n@valeriocos, I think ipython works differently from PYTHONPATH. Even if I run the jupyter command from the root of the package, my cwd would still be the notebooks folder when I run the notebook. Hence, if I have to use the `implementations.scripts....` absolute import, I think I would have to use the `../..`. WDYT?	2019-08-14 16:05:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693222	\N	Sorry for the late reply. OK, let's merge it then. Thanks	2019-08-15 13:29:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693223	\N	@jgbarah, please have a look. The tests require files from #232 to pass.	2019-08-21 17:22:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693224	\N	Ran the tests again @jgbarah!	2019-08-22 17:35:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693225	\N	@jgbarah : Could you validate and approve that the change you requested was made? 	2019-08-28 14:54:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693226	\N	Notebooks and tests will be added soon.	2019-08-06 09:30:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693227	\N	-issues new (complete)\r\n-issues active (complete)\r\n-issues closed (complete)\r\n-reviews duration (complete)	2019-08-02 18:17:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693228	\N	To be clear, these changes were made by Matt and myself.\r\n\r\nI created the issue for transparency purposes.	2019-08-02 19:00:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693229	\N	Complete	2019-08-14 14:47:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693230	\N	In agree with you @sgoggins, there is some ambiguity in the text. On commit can change multiple files, however, for every file changed there must be a commit. So, it's like a one-many vs one-one relationship dependent on how we look at it. \r\n\r\nI suggest we count code_change at the atomic level as source code changes at file(s) level.\r\n\r\nSigned-off-by: Armstrong <foundjem@ieee.org>	2019-08-01 20:13:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693231	\N	The idea of a commit in git (which is what we're trying to mimic with Code_Changes) is present (to my knowledge) in all modern source code management systems, and is "a change to the source code that makes sense as a single unit to the developers". Usually, it touches several files, and that's the usual metric that is present in most toolings when they consider "units of change to the source code". They are "atomic" in the sense that the developer thought that all the files should be touched together, or none at all (for example, a part of the commit may change the name of a function, and the rest are changes to files that use that function, just changing its name in them).\r\n\r\nOf course we could also count each change to each file as the unit, or even each change to a line. But I think that would be overkill (for example, AFAIK, there is no way of getting that data via the GitHub API, at least not directly). \r\n\r\nWRT the current text, I'd be happy of have better redactions. Right now, the text that tries to clarify this is right in the description of the metric:\r\n\r\n> For "change" we consider what developers consider an atomic change to their code. In other words, a change is some change to the source code which usually is accepted and merged as a whole, and if needed, reverted as a whole too. For example, in the case of git, each "change" corresponds to a "commit", or, to be more precise, "code change" corresponds to the part of a commit which touches files considered as source code.\r\n\r\nIf you can think of a better way of expressing it, please go ahead, and either submit a pull request, or propose here a better wording. 	2019-08-02 18:04:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693232	\N	Would you mind forcing a new push, to make Travis run the tests?	2019-08-12 11:46:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693233	\N	@jgbarah please have a look at this after #242. Thanks	2019-08-20 18:44:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693234	\N	Looks good	2019-07-31 15:28:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693235	\N	Looks good to me	2019-07-31 15:11:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693236	\N	This issue with detail is that it creates a tight coupling between the metrics definition and a point in time tool release. 	2019-07-31 14:40:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693237	\N	WIll update with latest changes soon!	2019-08-06 09:28:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693238	\N	I don't have permission to activate Travis on this repo (so I cannot check if everything works smoothly). Btw the tests work locally (@Polaris000 checked it on his side too).	2019-07-23 16:40:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693239	\N	This PR tackles issue https://github.com/chaoss/wg-evolution/issues/225	2019-07-23 16:51:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693240	\N	This kind of makes sense, but I wonder if the reference implementations are actually going to change that much over time. My expectation is that they will *evolve* üòÇ slowly. I am not opposed in any way, but I wonder if we might go such a long time before the reference implementation changes that whoever wrote the tests won't be around to help interpret a failure. Merely a thought. 	2019-07-23 16:52:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693241	\N	Thank you @sgoggins for your comment	2019-07-23 17:13:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693242	\N	This also resolves issue #179.	2019-07-25 18:06:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693243	\N	> This kind of makes sense, but I wonder if the reference implementations are actually going to change that much over time. My expectation is that they will _evolve_ joy slowly. I am not opposed in any way, but I wonder if we might go such a long time before the reference implementation changes that whoever wrote the tests won't be around to help interpret a failure. Merely a thought.\r\n\r\nI understand your concerns, @sgoggins. But the idea of the tests tend to be that: if in the future they fail, somebody will have to research to know why they fail. Usually, it is better to know they are no longer working (even to decide t drop them), than to ignore that, and have a reference implementation which is not working. More details in the referenced issues.\r\n\r\nSo, if nobody opposes, I will configure the repo to run those tests.	2019-08-02 17:09:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693244	\N	I am okay with tests, but I think about implications they have on the\nworking group.\nIs there any technical debt that the WG collects by adding tests?\nDoes this raise the requirements for all metrics to include tests to be\nconsidered complete?\n	2019-08-02 17:20:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693245	\N	> I am okay with tests, but I think about implications they have on the working group. Is there any technical debt that the WG collects by adding tests? Does this raise the requirements for all metrics to include tests to be considered complete?\r\n\r\nThis is something that of course we can discuss. Tests are (I think) a part of the reference implementation, written to ensure that the code produces the expected output. Of course we can live without them, but that means that checking that changes to the reference implementations are good will require manual intervention: tests will be helpful mostly on that front.\r\n\r\nIn case this adds tech debt to the future, or just that they don't help, we could decide to drop them in the future. And I don't think this should be a requirement for metrics. Now, even having a reference implementation is not a requirement. Depending on how we evolve, maybe at some point having a reference implementation becomes a requirement, if we all decide so, and maybe later having tests for the reference implementation too. But not for now, not without a general consensus, and I think nobody is even proposing that.\r\n\r\nFrom another point of view, you can also consider this as a proof of concept, to test the idea of having tests in this repo, and later help us to evaluate if the idea of reference implementations, and tests for them, is good enough to extend to other wgs...\r\n\r\nWhat do you thnk?  	2019-08-02 17:55:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693246	\N	I agree. Thank you. Let's learn more about tests in reference\nimplementations.\n	2019-08-02 19:01:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693247	\N	After @GeorgLink comment, I'm merging this patch, since nobody seems to oppose, and we need it to move forward. Thanks to all of you!	2019-08-06 09:09:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693248	\N	Thank you @Polaris000 to open this issue, I have just pinged @germonprez to get write access on this repo.	2019-07-23 11:29:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693249	\N	I could give @valeriocos access on the grounds that he is a very active and trusted GSoC mentor. \r\n\r\n@sgoggins and @jgbarah, as the maintainers for the Evolution WG, are you okay with Valerio getting access to this repo?	2019-07-23 14:13:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693250	\N	Update: @valeriocos already has Write permission on the repo.	2019-07-23 14:18:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693251	\N	Could we hear a little more about the expected use case? 	2019-07-23 16:48:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693252	\N	Sure @sgoggins , the idea of adding CI support for the work done in GSoC came out here: https://github.com/Polaris000/GSoC_19_Perceval_Implementations/blob/master/IRC_chats/july_16_week6.txt.\r\n\r\nTests and CI can be useful to be sure that the outcome of the metrics implementations are correct. I guess @jgbarah can give more details about it.	2019-07-23 17:11:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693253	\N	I upgraded @valeriocos to admin rights on this repo, to enable him. I still think that there is more to be discussed during the next call and maybe some innovation for all CHAOSS WGs	2019-07-23 19:03:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693254	\N	Thank you for upgrading my permissions @GeorgLink . I guess we can freeze everything until the next call. This shouldn't be a blocker since @Polaris000 can run the tests locally.\r\n@Polaris000 feel free to join the discussion.	2019-07-23 19:08:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693255	\N	Thanks @GeorgLink. I agree with @valeriocos that this can be put on hold till the next call and when Jesus will return. 	2019-07-25 06:34:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693256	\N	I think we can implement Travis-CI, but before we do, a group of at least two individuals who are willing to manage and maintain and setup that infrastructure on an ongoing basis should be identified. 	2019-08-14 14:51:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693257	\N	Well, I think we're done with all of this. So, closing it.	2019-08-22 16:52:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693258	\N	Closing this pull request since #226 already includes these changes.	2019-07-25 06:35:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693259	\N	@jgbarah, I got travis to work, but there is a small hiccup: I keep having to add the project path to PYTHONPATH in the `before_install` part of `travis.yml` :\r\n```yaml\r\n   export PYTHONPATH=$PYTHONPATH:$(pwd)\r\n```\r\nThe tests and coverage run as expected locally, but for some reason, the `implementations` module cannot be detected while running travis, unless I add the above line.\r\n\r\nI have fixed all imports, added the `__str__` methods to the classes and renamed all modules.\r\nPlease have a look whenever convenient. I have also changed the structure of tests as we discussed.	2019-08-09 07:38:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693260	\N	@jgbarah. I'll have a look today at all the tests and update anything that's required.	2019-08-06 09:23:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693261	\N	Travis passed. Please have a look @jgbarah 	2019-08-12 11:14:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693262	\N	Please have a look @jgbarah 	2019-08-11 16:54:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693263	\N	Travis passed. Please have a look @jgbarah .	2019-08-12 11:13:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693264	\N	LGTM	2019-07-17 14:46:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693265	\N	Thanks for the idea, @sgoggins. I think it improves the template. Please, have a look at my two comments: I only have serious objections to one of the changes.	2019-07-16 22:10:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693278	\N	Good idea @Polaris000! please update the PR and we will make a last pass	2019-08-17 12:45:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693280	\N	@valeriocos, You can have a look. The last travis test is running.	2019-08-17 13:12:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693281	\N	Is it this error:\r\n```\r\n    result['metric'].plot_time_series(self.period)\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/implementations/code_df/metric.py", line 86, in plot_time_series\r\n    params = self._get_params()\r\nAttributeError: 'CodeChangesLinesGit' object has no attribute '_get_params'\r\n```\r\nIf it is, that is because #242 has not been merged yet.	2019-08-17 13:31:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693282	\N	> For the next PR, we should probably include some doc in the README or have a separated README . Maybe it's a topic to be discussed with @jgbarah and @aswanipranjal.\r\n\r\nAre you referring to general documentation or anything in particular?\r\nIf its the former, #241, once complete, should solve that issue do what you want. That part has been mentioned by Jesus.	2019-08-17 13:34:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693357	\N	Resolved via: \r\nhttps://github.com/chaoss/wg-evolution/pull/231	2019-07-31 15:28:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693266	\N	@valeriocos, I tried to implement  your suggestions. Though this is in no way completely finished (have to add proper doc strings / refactor code a little / add proper defaults and help to argparse arguments), if possible, could you have a look at the script?\r\nThe script generates a pdf, which can be downloaded from the link below (the output pdf can be formatted later via the FPDF library)\r\n[xyz.pdf](https://github.com/chaoss/wg-evolution/files/3452943/xyz.pdf)\r\n\r\nA few queries:\r\n- would it be a good idea to add a `__str__` method to each of the metric classes? It becomes easier to display metric names (especially when using generalized code).\r\n- I think it would be good to add a `plot_chart` method to each metric class. Since each metric has different axes names to plot, it is difficult to generalize this. What do you think?\r\n- > This method looks really similar to test_git_metrics. Probably, it could be generalized. For instance, instead of having a list of metrics for each data source (see lines 19-20), we could have a dict that relates data sources to metrics like this one:\r\n```python\r\n{\r\n  'git': [code_changes_git, code_changes_lines],\r\n  'github': [reviews]\r\n}\r\n```\r\nI have structured to metrics like this:\r\n```python\r\n{\r\n    `commit`: [<commit metric class 1>, ...],\r\n    `issue`:[<issue metric class 1>, ...],\r\n    `pull_request`:...\r\n}\r\n```\r\nAnd the final result like this:\r\n```python\r\n{\r\n    `commit`: [\r\n        {\r\n             'metric': metric_obj,\r\n             'val': value of compute() method for that metric,\r\n             'df': dataframe returned from timeseries method for that metric\r\n         }, \r\n       {<metric 2>},\r\n       {<metric 3>}...\r\n    ],\r\n    `issue`:[<same as above, but for issue classes>],\r\n    `pull_request`:...\r\n}\r\n```	2019-07-31 16:43:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693267	\N	I have added support for images and json and pdf support was already there. I could n't find a good way to add markdown support, but am still looking. I also made it executable from the command line, so you can do :\r\n```bash\r\n$ analyze -r chaoss/wg-evolution -o pdf images ....\r\n```\r\nPlease have a look.	2019-08-12 11:32:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693268	\N	Please @Polaris000 ping me when the PR is ready to review, thanks	2019-08-15 12:38:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693269	\N	@valeriocos, I'll submit changes as soon as possible. I was working on another patch, but will switch to this now. Sorry to keep you waiting :(	2019-08-15 13:14:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693270	\N	no worries @Polaris000 :) take your time, thanks	2019-08-15 13:16:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693271	\N	If it is possible, you could have a look at my response to your review for #237 	2019-08-15 13:23:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693272	\N	@valeriocos , I have pushed new changes. The `pdf` and `images` output won't work directly in this patch since the required `push_time_series` method is added in #242 (still a draft). Anyhow, I copied a few of those changes on my local copy of this branch and they work. Please have a look at some of my responses to your review above	2019-08-15 18:26:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693273	\N	Thanks @Polaris000 , I'll try to check it tonight or tomorrow morning at most.	2019-08-15 18:27:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693274	\N	Thanks for the review!\r\n> It could be nice to have a docstring in the main() method to explain what the script does and a couple of examples to execute the script.\r\n\r\ndone\r\n> It could be useful to add some log information to make the user understand what the script is doing. Currently, no info is given until the results are generated.\r\n\r\ndone\r\n> A minor comment is about some functions having default mutable arguments (def run_metrics(items, categories=[COMMIT_CATEGORY] ...). If these default arguments are set by the argparser, it's probably better to remove as default function args. WDYT?\r\n\r\nYou are right, @valeriocos. I had kept them since they improved reabability since they tell you default args. Of course, the default values of parameters can be adding in the function docstring. but I thought this serves the purpose. WDYT?\r\n\r\nI am facing this issue sometimes regarding the git backend. I am unable to reproduce it:\r\n```\r\n(wg_imp) Polaris000@thinkpad:~/Documents/GSOC/wg-gmd$ analyze -r Polaris000/practise -o pdf -s 2018-01-01\r\n[2019-08-17 00:01:21,479] - Fetching data\r\nhttp://github.com/Polaris000/practise.git\r\nTraceback (most recent call last):\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/bin/analyze", line 7, in <module>\r\n    exec(compile(f.read(), __file__, 'exec'))\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/bin/analyze", line 349, in <module>\r\n    main()\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/bin/analyze", line 332, in main\r\n    items = fetch_data(owner, repo, args.api_token, args.categories)\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/bin/analyze", line 256, in fetch_data\r\n    items = list(git.fetch(category=category))\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backend.py", line 162, in fetch\r\n    for item in self.fetch_items(category, **kwargs):\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 155, in fetch_items\r\n    latest_items, no_update)\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 268, in __fetch_from_repo\r\n    repo = self.__create_git_repository()\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 319, in __create_git_repository\r\n    repo = GitRepository.clone(self.uri, self.gitpath)\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 827, in clone\r\n    cls._exec(cmd, env=env)\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 1332, in _exec\r\n    raise RepositoryError(cause=cause)\r\nperceval.errors.RepositoryError: git command - Cloning into bare repository 'tmp'...\r\nfatal: http://github.com/Polaris000/practise.git/info/refs not valid: is this a git repository?\r\n```\r\nJust to make sure, I reran the same command right after this error, and the output was alright.\r\nWhy do you think this may have happened?\r\n\r\nWhenever convenient, please have a look at my latest iteration. I have moved all the generate_* functions to a separate module `generate_output.py`.\r\n\r\n	2019-08-16 03:26:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693275	\N	Thanks @Polaris000 for addressing my comments. The script looks really good.\r\n\r\n> You are right, @valeriocos. I had kept them since they improved reabability since they tell you default args. Of course, the default values of parameters can be adding in the function docstring. but I thought this serves the purpose. WDYT?\r\n\r\nyes, they improve reabability, however having mutable objects as default parameters can be risky (https://docs.python-guide.org/writing/gotchas/). Furthermore, in this specific case, the entrypoint is the bin/analyze and the argparser takes care of settings default params.\r\n\r\nI would suggest either to:\r\n- (i) remove the default params (this requires less work)\r\n```\r\nrun_metrics(items, categories, date_range, is_code, conds, period='M')\r\n```\r\n- (ii) reshape them\r\n```\r\ndef run_metrics(items, categories=None, date_range=None,\r\n                is_code=None, conds=None, period='M'):\r\n\r\ncategories = [COMMIT_CATEGORY] if categories is None else categories\r\nis_code = [Naive()] if is_code is None else is_code\r\ndate_range = (None, None) if date_range is None else date_range\r\nconds = [] if conds is None else conds\r\n# period can be left as it is since it's not mutable\r\n```\r\n	2019-08-17 08:01:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693276	\N	Thanks for the review @valeriocos .\r\nI have fixed the logging bug.\r\n\r\nYes, `ISSUE_METRICS` is supposed to remain empty, since they have not been defined yet. I plan to do that over the weekend. \r\nAnyways, I have imported issue metrics as they would be once defined. Of course, the script won't run unless that part is commented out.\r\nThe script will work once the issue metrics are defined.\r\n\r\nRegarding your point on the default arguments, I'm removing them.\r\nPlease have a look at my latest iteration if convenient.	2019-08-17 09:01:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693277	\N	Thanks @valeriocos for the review! Regarding the issue metrics, maybe I can remove the issue metric imports and once I am done with implementing them, I can add them. This way, the pull request can be merged without waiting for the metrics to arrive. WDYT?	2019-08-17 12:41:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693279	\N	please @Polaris000 ping me when I can review it, thanks	2019-08-17 13:11:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693284	\N	> If it is, that is because #242 has not been merged yet. \r\n\r\nYes, it is that error. Thank you for the pointer\r\n\r\n> Are you referring to general documentation or anything in particular?\r\n> If its the former, #241, once complete, should solve that issue do what you want. That part has been mentioned by Jesus.\r\n\r\ngeneral documentation, #241 looks promising :)	2019-08-17 13:37:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693285	\N	@jgbarah , though I have not added the test, if possible, please review the python script.\r\nThanks!	2019-07-14 18:42:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693286	\N	I think we're only missing tests now, right?	2019-08-06 09:57:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693287	\N	Yes, @jgbarah. WIll add those according to the latest changes to support travis.	2019-08-06 10:00:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693288	\N	@jgbarah, added tests. Please have a look. This pull request should successfully pass travis, once #222 is merged. I have rebased/updated all pull requests except the issue metric implementations. Though all pull requests are independent of each other (hopefully no merge conflicts!), only after merging #222 will the others pass travis.	2019-08-10 09:25:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693289	\N	This will pass only if #222 is approved.	2019-08-12 10:01:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693290	\N	> This will pass only if #222 is approved.\r\n\r\nYou're right. But i just merged that one...	2019-08-12 10:06:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693291	\N	@jgbarah , sorry for the merge conflict. I fixed it. Please have a look. Travis passed.	2019-08-12 10:29:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693292	\N	> @jgbarah , sorry for the merge conflict. I fixed it. Please have a look. Travis passed.\r\n\r\nGreat! Merging...	2019-08-12 11:40:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693293	\N	@jgbarah, the tests and notebook have not been added yet. But, if possible, please review the python script. Thanks!	2019-07-14 18:39:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693294	\N	Please have a look @jgbarah.	2019-07-16 11:00:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693295	\N	@jgbarah, please have a look at the implementation. I'll add the tests today. Let me know if you think it is ok.\r\nPlease have a look at my comments below. Thanks!	2019-07-08 19:25:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693296	\N	Before entering into details, I think we should focus on metrics that already done, at least done enough to be relases. Those are the ones [listed here](https://github.com/chaoss/wg-evolution/blob/master/focus_areas/code_development.md#summary-of-metrics).\r\n\r\nUntil we're done with those, let's keep this one in the fridge. I'll try to work on its definition meanwhile.	2019-07-10 15:16:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693297	\N	@Polaris000 : Could you look at this and resolve the questions? 	2019-08-28 14:56:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693298	\N	Hi @sgoggins. Thank you for your interest.\r\n I'll try my best to do this over the weekend.  If not, I'll work on it in the first week(s) of October, since I'm a little busy, right now. Sorry :(	2019-08-28 16:17:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693299	\N	@Polaris000, if you don't find the time, don't worry. This metric is not fully defined anyway, so we could just reopen a pr later, when that's done.	2019-08-29 10:11:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693300	\N	Since I see no movement, I¬¥m closing this for now. @Polaris000, please feel free to open a new pr when you have time.	2019-09-12 07:32:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693301	\N	Perhaps this question should be aimed GL-specific concerns. 	2019-08-28 15:00:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693302	\N	@jgbarah, I am not completely done with these and hence, am opening a draft request. \r\nSome doubts I had:\r\n1. Since the Metric (root) class will never be instantiated, should I even test it? Any methods it has will either be inherited or overridden in child classes, so these methods can be tested in the child classes.\r\nWhat do you think?  \r\n\r\n2. Where should I test the `time_series` method?   \r\nIt is defined in the Metric (root) class but is used (following instantiation) in individual metric classes.   \r\n\r\n3. Following 1., I am testing the method by using a temporary child class of Metric (root). In this class the `_agg` method will be trivially implemented.   \r\n\r\n4. Following 2., since the `_flatten` method in Metric(root) class is not implemented, I would have to define it in the temporary class I create in point 2. Is there a better way to do this or should I just copy the `_flatten` method we have in `Commit` class?  \r\n\r\n5. While testing the `_filterout` method in `Commit` class, I have again made use of a temporary class, since this method is called while instantiating the `Commit` class. Let me know if this is OK.\r\n\r\n6. You will find several tests not implemented (just have a pass statement). I have not done those for now. Most of them have a similar test which I have implemented. For example, `test__filterout()` has been implemented while `test__filteroutMasterInclude()` has not. \r\n\r\n7. Tests not yet implemented:\r\n- testing conditions.py\r\n- testing the commit heirarchy (metric tests)\r\n\r\nPlease have a look and let me know if anything has to be changed / any other tips and suggestions.\r\n	2019-07-03 19:51:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693303	\N	>     1. Since the Metric (root) class will never be instantiated, should I even test it? Any methods it has will either be inherited or overridden in child classes, so these methods can be tested in the child classes.\r\n>        What do you think?\r\n\r\nI think we don't need to test them, at least for now.\r\n \r\n>     2. Where should I test the `time_series` method?\r\n>        It is defined in the Metric (root) class but is used (following instantiation) in individual metric classes.\r\n\r\nFor now, in the specific metrics when you are testing it with real dfs, but it woudl be nice if you can fidn a way of testing the root implementation by itself (maybe setting a fake self.df to do the testing).\r\n\r\n>     3. Following 1., I am testing the method by using a temporary child class of Metric (root). In this class the `_agg` method will be trivially implemented.\r\n\r\nWe can leave it as such for now, and decide later if to change it.\r\n\r\n>     4. Following 2., since the `_flatten` method in Metric(root) class is not implemented, I would have to define it in the temporary class I create in point 2. Is there a better way to do this or should I just copy the `_flatten` method we have in `Commit` class?\r\n\r\nYou can provide an specific _flatten method. If needed, subclass for that.\r\n \r\n>     5. While testing the `_filterout` method in `Commit` class, I have again made use of a temporary class, since this method is called while instantiating the `Commit` class. Let me know if this is OK.\r\n\r\nOK, as above.\r\n \r\n>     6. You will find several tests not implemented (just have a pass statement). I have not done those for now. Most of them have a similar test which I have implemented. For example, `test__filterout()` has been implemented while `test__filteroutMasterInclude()` has not.\r\n\r\nAs i said int he review, let's finish this, and you can work on those in a separate pr.\r\n \r\n>     7. Tests not yet implemented:\r\n\r\nSame as above. \r\n\r\n	2019-07-05 11:17:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693304	\N	Please have a look @jgbarah \r\nIf you merge this (if you think this is alright), I'll send an updation of names in a following pull request tomorrow.\r\nThanks!	2019-07-07 19:37:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693305	\N	@jgbarah, I have added docstrings. Please have a look at them and let me know if further changes have to be made. Thanks.	2019-07-10 19:29:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693308	\N	Thanks a lot for noticing this problem. However, the patch didn't see to solve it, so i created #197. Please, @foundjem feel free to review or comment it. Meanwhile, I'm closing this one.	2019-07-03 12:04:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693309	\N	@GeorgLink @germonprez I think the conflict is solved, please have a look.	2019-07-10 15:43:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693310	\N	Agreed. Shall merged. Thanks @jgbarah 	2019-07-10 20:37:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693311	\N	Please have a look @jgbarah @aswanipranjal	2019-06-30 19:36:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693312	\N	Perhaps this should be aimed at specific GL conversations. 	2019-08-28 15:00:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693313	\N	Please have a look @jgbarah.	2019-06-28 10:36:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693314	\N	@jgbarah, I have updated the implementation according to the correct definition of Code_Changes_Lines. If you do not prefer adding another column for modifications in the `__init__` method, we could have a function to compute the total line changes given a DataFrame and use it as the `compute` method, while for the `_agg` method, we could define a custom aggregation method like I did for `New_Contributors_to_Commits` in #172.\r\n\r\nIt seems to me that we have a choice between the following:\r\n- Adding a column to the DataFrame and then using a standard aggregation method (sum, count, etc..)\r\n- Not adding a column but then using a custom aggregation method (like New_Contributors_to_Commits).\r\n\r\nIf it is a bit confusing, the `__init__` method has been overridden in the metric class here so that I could do the first option mentioned above, which is to add a column.\r\n\r\nWhat do you think?	2019-07-03 17:01:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693315	\N	Thanks for your suggestions. Please, consider implementing an specific `_agg` method, as I commented above.	2019-07-03 21:21:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693316	\N	Please have a look @jgbarah .	2019-07-04 10:17:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693317	\N	The structural definition of this metric looks good to me.  The only issue that may arise with any kind of computation that captures duration, is the `time between no activity`.  For example, consider an ongoing review process, and suppose there is a time slot let's say two months in between the review process were there is no activity, should we still count this two months period as review time?	2019-07-03 18:08:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693318	\N	Thanks for the comment. The idea here is to capture the time since the review starts to the review is done (with the code merged in the code base). This is important, because it is the time that passes since somebody proposes some change to the code, to the moment that code is merged. Maybe the name of the metric, or the short description, is misleading?	2019-07-09 17:46:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693319	\N	My interpretation of the metric description is that even with no activity, an open review period's time will be counted. I think this is covered. 	2019-07-31 14:48:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693320	\N	Dead link (Issues are defined as in Issues.) at line 8.\r\n\r\nNot sure if this should go to "Issues New"\r\n\r\nif so will need an absolute URL path	2019-06-25 18:44:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693321	\N	Yes, this should be Issues New.	2019-07-03 14:39:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693322	\N	I think issues related to source code might be identifiable with a different metric. This varies widely in practice, with platforms like GitHub and GitLab supporting linking more organically... Yet I don't think the consistency of use is widespread. \r\n\r\nSo, with regards to this definition from the metric (below), my suggestion is that the default assumption that an issue is NOT linked to source code directly. We have not gotten to a level of detail where we define metric attributes (explicitly), but I think some indication of a "source code status" being specified would be appropriate. I think the status would have 3 states: \r\n1. Linked to Commit/PR # (most commonly, I think, these will be linked to specific bug fixes.)\r\n2. Unknown (Probably the most common case)\r\n3. Unrelated to a specific commit/PR # (Possibly primarily useful for issues that result in a series of commits/PRs to implement a new feature)\r\n\r\n"Criteria for source code. Algorithm. Default: all issues are related to source code.\r\n\r\nIf we are focused on source code, we need a criteria for deciding whether an issues is related to the source code or not." 	2019-07-04 19:29:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693323	\N	Based on @klumb and @jgbarah comments above mine, I am unsure if I commented in the right place. :) \r\n\r\nMy intent is to comment on issues:closed. 	2019-07-04 19:33:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693324	\N	> Based on @klumb and @jgbarah comments above mine, I am unsure if I commented in the right place. :)\r\n> \r\n> My intent is to comment on issues:closed.\r\n\r\nI think this is the right place to comment on the Issues Closed metric ;-)	2019-07-09 17:18:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693325	\N	> [...]\r\n> So, with regards to this definition from the metric (below), my suggestion is that the default assumption that an issue is NOT linked to source code directly. We have not gotten to a level of detail where we define metric attributes (explicitly), but I think some indication of a "source code status" being specified would be appropriate. I think the status would have 3 states:\r\n\r\nThis is indeed the default assumption. What we wanted is to capture metrics related to source code, since this is defined in context of the [Code Developement focus area](https://github.com/chaoss/wg-evolution/blob/master/focus_areas/code_development.md). But since, as you suggest, knowing when an issue is related to source code is tricky (except when projects are labeling them themselves), we propose a [parameter](https://github.com/chaoss/wg-evolution/blob/master/metrics/Issues_Closed.md#parameters) "Criteria for source code", which is "all issues are source code" by default. If an implementation in a given project can do it better, they could use a specific "Criteria for source code".\r\n\r\nIs this more clear now?\r\n	2019-07-09 17:40:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693326	\N	In some communities, source code and documentation are treated with the same level of importance.	2019-07-09 19:29:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693358	\N	Broken link at line 104 (See reference implementation for git ) - Might be a dead link	2019-06-25 18:21:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693359	\N	@GeorgLink, the implementations have been redesigned. The link to the notebook for Code_Changes-Git is this:   \r\nhttps://github.com/chaoss/wg-evolution/blob/master/implementations/notebooks_df/code_changes_git.ipynb	2019-06-26 04:57:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693360	\N	Yes, the link should go to the new implementation (see @Polaris000 comment)	2019-07-03 14:44:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693327	\N	> In some communities, source code and documentation are treated with the same level of importance.\r\n\r\nThanks, @foundjem, you are right. But I think this is not  matter of importance. In any project, you may be interested in, for example, how issues for code are performing, and issues for documentation. Both may have different characteristics, and both may have for example, different typical time spans. Sin we're in the context of the "code development" focus area, metric should be referred to source code, as much as reasonably possible.\r\n\r\nOf course, the area code could be ill-defined, and/or we may need another "documentation development" area code. But this is out of scope when discussing this metric, i think ;-)	2019-07-10 15:26:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693328	\N	Addressed and closed. 	2019-07-31 15:06:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693329	\N	Dead link (Issues are defined as in [Issues](Issues.md).) at line 8. \r\n\r\nNot sure if this should go to "Issues New"\r\n\r\n if so will need an absolute URL path 	2019-06-25 18:41:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693330	\N	Yes, it is Issues New.	2019-07-03 14:40:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693331	\N	Active issues: we mean from open date to closed date right?	2019-07-09 19:23:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693332	\N	I'm not sure what you are referring to. From the [Issues Active definition](https://github.com/chaoss/wg-evolution/blob/master/metrics/Issues_Active.md): "Issues related to the source code that showed some activity during a certain period".	2019-07-10 15:28:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693333	\N	Addressed. 	2019-07-31 15:12:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693334	\N	Can we add severity to this metric? For example, critical etc.	2019-07-09 19:20:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693335	\N	What do you mean? The metric is intended to know how many issues are opened (filled) during a certain period. In this context, what do you mean by "add severity to this metric"?	2019-07-10 15:30:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693336	\N	I think severity is not needed in this case. It could be something to consider with tags on issues but perhaps it's not necessary to accommodate right now. 	2019-07-11 13:55:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693337	\N	Ok, sounds good to me	2019-07-12 22:04:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693338	\N	Addresssed all the issues. 	2019-07-31 15:15:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693339	\N	Looks good to me	2019-07-09 19:18:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693340	\N	LGTM	2019-07-11 13:54:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693341	\N	Looks good to me, but this seems a duplicate metric.	2019-07-09 19:16:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693342	\N	> Looks good to me, but this seems a duplicate metric.\r\n\r\nWhich one would be duplicating?	2019-07-10 15:31:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693343	\N	@foundjem what is this duplicating? 	2019-07-11 13:54:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693344	\N	Ah! I see the duplicate. @klumb, in the webpage candidate list, Reviews Accepted is listed twice. Both link back to this issue. 	2019-07-11 13:58:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693345	\N	@foundjem @germonprez @jgbarah - It is listed twice because it informs two code development goals - **activity and efficiency**. We are presenting the metrics in the goal/question/metric format. Which means that any individual metric that informs multiple questions or goals could be presented multiple times. Additionally, if a metric is identified by multiple workgroups it could be presented in different tables. This was discussed briefly in one of the calls. In future releases, there is the possibility that single metrics could be presented many times. Some metrics inform many different goals and questions. At some point, the replication in the way the data is presented will need to be addressed for future releases. Per the previous call, it was decided that we should present them in this fashion despite the repetition as there was only one candidate metric affected.	2019-07-11 14:30:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693346	\N	However, I should note that the detail page itself is not duplicated and the issue links go to the same issue, **so work on the metric is not being duplicated** it is only being presented in different places according to the goal/question/metic format.	2019-07-11 14:49:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693347	\N	@klumb Thanks for the detail explanation, sounds good to me and clearer.	2019-07-11 14:57:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693348	\N	@klumb @germonprez @foundjem thanks!	2019-07-15 21:49:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693349	\N	Resolved. 	2019-07-31 15:19:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693350	\N	looks good to me	2019-07-09 18:53:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693351	\N	Me too	2019-07-11 13:53:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693352	\N	I think we should provide a reference for different types of merge commits and how they might be evaluated. I don't think its complex, but different systems use different types of flags (i.e., Github v a straightup git repo v gitlab). 	2019-07-09 16:41:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693353	\N	I would like to see: \r\n1. Lines Deleted\r\n2. Lines added\r\n3. Whitespace \r\n\r\nas lines of code categories that are optional. 	2019-07-09 16:42:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693354	\N	> I think we should provide a reference for different types of merge commits and how they might be evaluated. I don't think its complex, but different systems use different types of flags (i.e., Github v a straightup git repo v gitlab).\r\n\r\nThanks, @sgoggins. Changes in source code refer mostly to commits, and thus are the same with independence of how commits are reviewed. In the metric description we have a [specific section on git](https://github.com/chaoss/wg-evolution/blob/master/metrics/Code_Changes_Lines.md#specific-description-git), because currently, this is defined only for git commits. But of course, other source code review systems could be considered.\r\n	2019-07-09 17:15:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693355	\N	> I would like to see:\r\n> \r\n>     1. Lines Deleted\r\n> \r\n>     2. Lines added\r\n> \r\n>     3. Whitespace\r\n> \r\n> \r\n> as lines of code categories that are optional.\r\n\r\nThanks, @sgoggins. What do you mean by "categories that are optional"?	2019-07-09 17:17:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693356	\N	@sgoggins I think we can know this from git log/diff?\r\n\r\nThe visualization makes this metric more informative.	2019-07-09 18:25:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693361	\N	The rationale for `Naive implementation` is reasonable enough, but its not clear to me if "affecting the code" means introducing a bug for example. If that should be the case here, then maybe SZZ algorithm will best tell us which particular commit introduce a bug. What do you think? 	2019-07-03 17:48:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693362	\N	In this case, "affecting the code" means that the change touches "source code" or if you want, "source code files". It may introduce a bug, or not, that is something which is not addressed here: only the change is relevant. Think of a commit that may include source code files between the files it changes, or not.\r\n\r\nIs it more clear now? Do you think we should clarify the text?	2019-07-09 17:48:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693363	\N	@jgbarah thanks, it's clearer now. Since we are not considering if multiple changes might be bugged prone.	2019-07-09 17:58:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693364	\N	For the "Activity", suggest rephrasing this to "Learn about activity involved in developing (e.g. adding/changing) code. 	2019-07-17 05:01:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1693365	\N	Suggest rephrasing the third question to "How many issues related to the source code are there during a certain time period?"	2019-07-17 05:04:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1693366	\N	Thanks for your comments, @rpaik. I understand that you refer to the focus area document, not to this specific metric. I've just opened #209 with (hopefully) your proposal.	2019-07-17 11:00:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693367	\N	Resolved	2019-07-31 15:29:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693368	\N	Please have a look @aswanipranjal @jgbarah 	2019-06-30 19:36:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693369	\N	Please have a look @jgbarah. Once this is merged, I'll change the naming for all files in a single pull request, hopefully tomorrow.	2019-07-07 20:06:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693370	\N	Please, have a look at the comments, mainly at the one on assuming all items are pull requests.	2019-07-10 15:14:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693371	\N	@jgbarah. I have responded to your comments above. Please have a look whenever possible. Thanks for the review!	2019-07-10 16:07:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693372	\N	Done. Please proceed as commented, and we can merge this one. Thanks!	2019-07-15 19:03:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693373	\N	Have a look @jgbarah.	2019-07-16 10:46:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693374	\N	I am closing this since it has been resolved.	2019-08-12 04:46:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693375	\N	Thanks @aswanipranjal. Please have a look at #177 . @jgbarah has made some significant changes. A couple of the changes you suggest are there in #175 as well.	2019-06-19 08:49:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693376	\N	@Polaris000, [#174](https://github.com/chaoss/wg-evolution/pull/174) changes the README.md file. Did you mean to point me towards [#177](https://github.com/chaoss/wg-evolution/pull/177) instead?\r\n\r\nI actually didn't see it before, my bad.	2019-06-19 09:10:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693377	\N	Oops, sorry. Yeah I meant to point you to #177. 	2019-06-19 09:14:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693378	\N	@aswanipranjal thanks a lot for this pr. After merging #177 I'm not sure if is better to rebase this one, to open a new one, or what... What do you think?	2019-06-19 16:19:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693379	\N	@jgbarah, I'll rebase with master and open a new PR with the remaining changes (if any).\r\n\r\nClosing this for now. Thanks!	2019-06-19 17:44:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693380	\N	@jgbarah, is the goal of this pull request to let me know what changes should be made or will this pull request get merged? There are a few very minor problems in the doc strings of some methods. 	2019-06-19 08:27:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693381	\N	>  the goal of this pull request to let me know what changes should be made or will this pull request get merged? There are a few very minor problems in the doc strings of some methods.\r\n\r\nI was intending to merge it, so that we have a more solid starting point. I think we can deal with docstrings and other details in further pull requests, if you all agree.	2019-06-19 16:00:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693382	\N	LGTM @jgbarah you can merge it, and minor changes will happen later.	2019-06-19 16:07:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693383	\N	OK, I'm merging it for now. Thanks a lot for all the comments. Let's continue from here. @Polaris000 (and everybody), in any case, please feel free to follow on the discussion in the items that were opened above.	2019-06-19 16:17:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693384	\N	A few suggestions: \r\n- We could also implement classes for Empty/Merge commits, just like MasterInclude and remove those parameters from `compute()`\r\n- We can have a data directory which has three files: git_commit data, issue data and pull request data.\r\nLet me know what you all think about these points. Thanks!\r\n	2019-06-23 18:26:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693385	\N	> A few suggestions:\r\n> \r\n>     * We could also implement classes for Empty/Merge commits, just like MasterInclude and remove those parameters from `compute()`\r\n\r\nYes, that was my idea. Those would be like a family of filters to the data, to be applied to "select" the items we're interested in.\r\n\r\n>     * We can have a data directory which has three files: git_commit data, issue data and pull request data.\r\n\r\nGood idea.\r\n	2019-06-24 07:36:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693386	\N	Ok! Will implement that!	2019-06-24 07:39:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693387	\N	Maybe you could rebase this (if you feel it is still convenient) after #177 was merged? Or maybe re-start from scratch, I m not sure what would be better...	2019-06-19 16:21:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693388	\N	@jgbarah, following the patch you merged, in `conditions.py`, the class `Code` and its children all have a `pass` statement in their `__init__` methods ([here](https://github.com/chaoss/wg-evolution/blob/1a275d0c4688935309c9c88fd6e9c78bcc1dc2cc/implementations/code_df/conditions.py#L19)). But I think you wanted them to raise a `NotImplementedError` exception as you mentioned in previous reviews. Which one do you prefer?\r\n\r\nI'll have a look as to what can be done with this pull request. 	2019-06-19 16:50:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693389	\N	Please have a look @jgbarah. This is a temporary solution to the problem of having `since` and `until` being populated in the `__init__` method of commit.py.	2019-06-20 18:03:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693392	\N	The current implemention of `compute_timeseries` of Code_Changes metric is like this:\r\n- create a dataframe by grouping data based on `year`, followed by `month` of creation and then aggregating them with `count`.\r\n- create a dataframe with rows representing every possible interval of time between the `since` and `until` parameters. For example, if the period is "month", then the second dataframe will have each year, followed by each month for that year between the `date_range` dates as rows.\r\n- merge the two dataframes above\r\n\r\nIt is clear that creating the second dataframe will require a definite `since` and `until` date. The advantage of this method is that it allows for easier plotting of graphs, say, the number of commits per month. Only grouping the first dataframe would mean that months without commits will not be included at all, making a plot based on this dataframe skewed. 	2019-06-18 16:39:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693393	\N	Closing this since this was addressed in #176	2019-06-28 16:12:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693394	\N	Any comment???	2019-06-19 16:22:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693395	\N	@germonprez I see you found the same typos :D I had started my review during the call and never submitted it :-o	2019-06-19 21:08:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693396	\N	Thanks a lot for your comments. Please, check the current version, with the problems hopefully fixed.	2019-06-26 22:08:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693397	\N	@germonprez @GeorgLink could you please check if my changes are good enough to accept the pull request?	2019-07-15 21:46:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693398	\N	Thanks @jgbarah 	2019-07-16 01:57:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693399	\N	Please, check [my comment](https://github.com/chaoss/wg-evolution/issues/157#issuecomment-503335939) about the new structure in #177.	2019-06-18 22:31:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693400	\N	Please have a look @jgbarah. 	2019-06-21 15:26:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693401	\N	Please have a look @jgbarah, @aswanipranjal	2019-06-26 19:13:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693402	\N	@jgbarah,I think it has been updated. \r\n- The `NewContributorsOfCommits` now has an overridden `_agg` method, defined (but raising`NotImplementedError`) in the Metric (root) class. \r\n- The `compute_timeseries` method has been renamed to `time_series` and is now defined in the Metric(root) class.\r\n- Different parameters to the `compute` method( which allow excluding empty, merge commits, etc.) have been removed as well.\r\n\r\nThe thing that may seem different is the nested class. The problem here is that to find new committers in a given period (a week or a month), committers in that period must be checked with all committers from the start of the data to before the start of the current period to find out how many are first time committers.\r\n\r\nTo make this computation easier, I implemented a custom aggregation method which I have nested inside `_agg` so that the overall structure remains the same when compared to metrics which do not need a custom aggregation method. \r\n\r\nHence, in the review **I** performed above, I asked whether you liked the nested aggregation method or did you want it outside as part of the `NewContributorsOfCommits` class, or even anywhere else.\r\n	2019-07-03 02:47:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693403	\N	Thanks for the clarification on the nested class. Now I think I understand your code. However, two comments:\r\n\r\nI think you have another, more simple, approach for the implementation: in `__init__`, in addition to the current df, you can build another one by grouping by author, and getting for each group the first date (which is when the author started to contribute). You can use the approach described at [this answer in SOF](https://stackoverflow.com/a/41525937), something like:\r\n\r\n```\r\nself.df = self.df.loc[df.groupby('author').date.idxmax()]\r\n```\r\n\r\nIn other words, you change the dataframe for one which has a row per author, with the first time that person contributed as time field.\r\n\r\nThen, in `_agg` you just count persons (rows)...\r\n\r\nWhat do you think?\r\n\r\nIn any case, now I realize that we should also work on the definition of this metric, because it is not one of those that we're about to release. But that's not a big issue, so go ahead anyway.	2019-07-03 21:35:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693404	\N	@jgbarah, I modified the code.\r\nPlease have a look. \r\n\r\nThough the code is now a lot cleaner, it strays from the other metrics, in that we completely modifying the dataframe. I am not sure how this becomes easier to someone trying to understand this code when compared to my implementation (adding a new column or a nested aggregation method), especially when the implementation you suggest changes the dataframe for the sake of easier calculation.\r\n\r\nCould you please give me some pointers on this?	2019-07-04 20:02:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693405	\N	> Though the code is now a lot cleaner, it strays from the other metrics, in that we completely modifying the dataframe. I am not sure how this becomes easier to someone trying to understand this code when compared to my implementation (adding a new column or a nested aggregation method), especially when the implementation you suggest changes the dataframe for the sake of easier calculation.\r\n> \r\n> Could you please give me some pointers on this?\r\n\r\nMy idea is that every metric may need a different dataframe. For example, I think not all the fields in the current dataframe are needed, at least not for all metrics we're computing, But we can come back to that late.\r\n\r\nWith this implementation, you do have the "standard" dataframe, although you change it (by reducing it) in a further step...\r\n\r\nOf course, we have to document all of this in detail, so that it doesn't confuse somebody ready the code.	2019-07-05 10:33:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693406	\N	@alpgarcia I need to ask clarification on how the data works here.\r\n\r\nAssume the following scenario.\r\nIssue A was updated in week 1 and week 2.\r\nMy understanding of the graph is that issue A will only be counted in week 2 because that is the most recent update. Therefore, week 1 will show not # of active issues during that week because it is missing Issue A.\r\n\r\nIf my understanding is correct, then we can resolve the misunderstanding in one of two ways:\r\n1. Don't show over time, but only show a single number.\r\n2. Don't call it `# Issues Active` but `# Issues Last Active` to indicate that the graph only shows when issues were last active, not all weeks they were active in. 	2019-06-18 07:53:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693407	\N	@GeorgLink you are correct, that's a limitation of GrimoireLab data. Thanks a lot for the clear explanation!\r\n\r\nProbably 1 is the best option. If we try to find an intersection between a general definition of activity like: `having any update within a given time period` and the data we have, i.e.: `last update`, we could end with something like: `Issues last updated from a given date to now`. Adding `now` is key because that makes last update valid as an indicator of activity. Using any previous end date will end with the problem you pointed out.\r\n\r\nDoes that make sense to you?\r\n\r\n	2019-06-18 08:52:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1693408	\N	@jgbarah I agree that GrimoireLab does not fully support this metric yet. However, in the dashboard, you can specify a time frame and have a single number returned with issues that were last active during that timeframe. That is a very closely related metric, assuming that the timeframe ends on the current date.\r\n\r\nI support @alpgarcia's suggestion to acknowledge the limitation but still including a Single Metric visualization for "issues active from x to now"!	2019-06-18 11:21:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693409	\N	LGTM\r\n\r\n> > I agree that GrimoireLab does not fully support this metric yet. However, in the dashboard, you can specify a time frame and have a single number returned with issues that were last active during that timeframe. That is a very closely related metric, assuming that the timeframe ends on the current date.\r\n> \r\n> OK, i understand. in that case, please the text that explain that the metric is close, but not exactly the one defined, so that there is no confusion. I agree that the visualization is still useful.\r\n> \r\n> So, from my side, once that clarification is included, I'm good with the patch.\r\n\r\nLGTM, however, instead of only acknowledging GrimoireLab‚Äôs limitation, we can add the missing features since it has already been tested/used in the field.	2019-06-19 15:23:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693410	\N	> instead of only acknowledging GrimoireLab‚Äôs limitation, we can add the missing features since it has already been tested/used in the field.\r\n\r\nWhat do you mean? Adding the missing features to GrimoireLab?	2019-06-19 15:34:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693411	\N	> > instead of only acknowledging GrimoireLab‚Äôs limitation, we can add the missing features since it has already been tested/used in the field.\r\n> \r\n> What do you mean? Adding the missing features to GrimoireLab?\r\n\r\nYes, if that is possible it will be better. Since GrimoireLab has wide usage thus far.	2019-06-19 15:53:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693412	\N	Thanks @GeorgLink, this LGTM. From the point of view of GrimoireLab your PR contents are correct and useful :)	2019-06-17 09:54:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1693413	\N	Thanks, Matt. I hope we can review all of this in our weekly meeting. There are some other metric in progress in a pull request, and some improvements as well.	2019-06-18 10:09:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693414	\N	Looks good to me, just a clarification on the "Review" metric, do we keep track of the number of iteration a Refiew undergoes?	2019-06-19 14:48:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693415	\N	> Looks good to me, just a clarification on the "Review" metric, do we keep track of the number of iteration a Refiew undergoes?\r\n\r\nNot in the "basic" Review metric. But that's a good diea, and an interesting metric that we could have for goal "Efficiency". Please, feel free to comment that in #138, and/or produce a pull request on the [code development focus area](https://github.com/chaoss/wg-evolution/blob/master/focus_areas/code_development.md).	2019-06-19 22:23:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693416	\N	WRT the metrics ready for release, the proposal we agreed during our meeting today, following the idea of accepting all metrics that went through code review, is to propose all metrics in the ["Summary or Metrics"](https://github.com/chaoss/wg-evolution/blob/master/focus_areas/code_development.md#summary-of-metrics) table:\r\n\r\n\r\nGoal | Question | Metric\r\n-- | -- | --\r\nActivity | Changes | Code_Changes\r\nActivity | Changes | Code_Changes_Lines\r\nActivity | Issues | Issues_New\r\nActivity | Issues | Issues_Active\r\nActivity | Issues | Issues_Closed\r\nActivity | Reviews | Reviews\r\nActivity | Reviews | Reviews_Accepted\r\nActivity | Reviews | Reviews_Declined\r\nEfficiency | Reviews | Reviews_Duration\r\n\r\nIf nobody objects, this wiill be the list of metrics released in V1.	2019-06-19 22:27:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693417	\N	This sounds great to me. Thanks for the push on this. 	2019-06-20 11:28:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693418	\N	Yes. Thank you.\n	2019-07-03 16:47:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693419	\N	Any comment on this one?	2019-06-18 10:12:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693420	\N	Thanks @jgbarah: I fixed the DCO sign-off.\r\n\r\nWhat do other WG members think about this approach of more closely linking metrics with software.	2019-06-12 09:42:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693421	\N	> What do other WG members think about this approach of more closely linking metrics with software.\r\n\r\nI'm requesting review by some other people, and would merge this if no negative feedback is received.	2019-06-12 09:58:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693422	\N	This came up in the June 11 CHAOSS community call. I hope that all metrics can have something like this. So I approve. 	2019-06-12 10:47:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693423	\N	Great! Merging then. Thanks to everyone!	2019-06-12 11:05:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693424	\N	Please have a look at @jgbarah and @aswanipranjal!	2019-06-10 14:19:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693425	\N	After following the last few comments in #160, please have a look at this PR. Thanks!	2019-06-11 18:24:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693426	\N	@jgbarah, please have a look at the new commits as well my comments in the review you performed yesterday. Once, this is resolved, I'll squash the commits / add a proper discription. \r\nThanks!	2019-06-13 10:37:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693427	\N	@jgbarah, unfortunately I am running into some bugs after the recent changes. As it is getting late here (IST), I'll only be able to send the next patch tomorrow at the earliest. I am really sorry. \r\n\r\nI had a few queries (after latest meet). Though they are minor, I'll ask them here so we won't have to review them later in the next iteration:\r\n1. IsSourceCode:\r\nSo my current structure (the last changes I pushed to this branch and you reviewed) involves all algorithm classes inheriting from a `Algorithm` class. Since we are planning on only using classes (and not having to create objects), the `__init__` method is not of any use. \r\nThis is purely in regard to better readability but should I just not define __init__ in any class?\r\nOr I could do something like this: \r\n```python\r\nclass Naive(Algorithm):\r\n    """\r\n    Instatiates an object of Naive. It is one of several\r\n    "algorithms" used to define source code. \r\n    """\r\n    def __init__(self):\r\n        super().__init__()\r\n   \r\n     @staticmethod\r\n     def check().....\r\n\r\n```\r\nwhere Algorithm is:\r\n```python\r\nclass Algorithm:\r\n    """\r\n    Parent class to all Algorithms.\r\n    """\r\n    def __init__(self):\r\n        pass\r\n    \r\n    @staticmethod\r\n    def check ... \r\n```\r\nWhich one do you prefer?	2019-06-14 18:33:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693457	\N	Thanks, @germonprez! @sgoggins do you think we can merge this?	2018-12-12 13:07:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693902	\N	I think this is done by now.	2019-06-05 14:39:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693428	\N	> @jgbarah, unfortunately I am running into some bugs after the recent changes. As it is getting late here (IST), I'll only be able to send the next patch tomorrow at the earliest. I am really sorry.\r\n\r\nDon't worry. Do it at your earliest convenience.\r\n\r\n> I had a few queries (after latest meet). Though they are minor, I'll ask them here so we won't have to review them later in the next iteration:\r\n> \r\n>     1. IsSourceCode:\r\n>        So my current structure (the last changes I pushed to this branch and you reviewed) involves all algorithm classes inheriting from a `Algorithm` class. Since we are planning on only using classes (and not having to create objects), the `__init__` method is not of any use.\r\n>        This is purely in regard to better readability but should I just not define **init** in any class?\r\n>        Or I could do something like this:\r\n\r\nI'm still not sure we really don't need objects, but for now, we can work with classes and class methods. In this case, you can define __init__, but make it raise an exception.\r\n\r\nMy main concern is that if we don't need to instantiate the class, having just functions (without being embedded in classes) could be enough, and is simpler.\r\n\r\nBut for now, let's go with classes. Just a minor comment: don't name the root class `Algorithm`, which is too generic. Something like `IsSourceCode` or `CodeCriteria` would be clearer.\r\n   \r\n> \r\n> ```python\r\n> class Naive(Algorithm):\r\n>     """\r\n>     Instatiates an object of Naive. It is one of several\r\n>     "algorithms" used to define source code. \r\n>     """\r\n>     def __init__(self):\r\n>         super().__init__()\r\n\r\nIn any case, you don't need to redefine '__init__', if it does nothing new. It will just inherit the `__init__` in the parent.\r\n    \r\n>      @staticmethod\r\n>      def check().....\r\n> ```\r\n> \r\n> where Algorithm is:\r\n> \r\n> ```python\r\n> class Algorithm:\r\n>     """\r\n>     Parent class to all Algorithms.\r\n>     """\r\n>     def __init__(self):\r\n>         pass\r\n>     \r\n>     @staticmethod\r\n>     def check ... \r\n> ```\r\n> \r\n> Which one do you prefer?\r\n\r\nIs it more clear now?	2019-06-16 20:36:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693429	\N	Thanks @jgbarah. I had left a few comments on your last review. Please have a look whenever convenient. Regarding your response for my query above:\r\n- `Algorithm` is different from `IsSourceCode`. `IsSourceCode` is like a factory class, which calls the `check()` method for the class passed to it while instantiating its object\r\n`Algorithm` is the base class for all algorithms (`Naive`, `FolderExclude`, ...)...  I'll send the patch and you can have a look at the naming. \r\n\r\n- > In any case, you don't need to redefine 'init', if it does nothing new. It will just inherit the __init__ in the parent.\r\n\r\n    Since, in Python, the __init__ of super classes are not automatically called, I would have to a use \r\n    `super().__init__` to inherit `__init__` of the super class.	2019-06-17 09:09:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693430	\N	@jgbarah, please have look at this patch whenever convenient. I have mentioned a few points in **my** review above for this patch.	2019-06-17 11:13:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693431	\N	Please have a look at @jgbarah!	2019-06-10 14:18:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693432	\N	Please have a look at @jgbarah!	2019-06-10 14:18:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693433	\N	@jgbarah Thanks for the prompt review! I had a look and left a few comments where I was a little unsure. I'll combine the pull requests and create a new one. I thought they would be easier to review if separated. 	2019-06-11 13:12:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693434	\N	I have added combined #160 and #161 into #162 and added commits there. Please have a look . Before that, please have a look at my comment here (just above this one). Thanks :)	2019-06-11 18:22:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693435	\N	Good idea, @GeorgLink !!\r\n\r\nSome pointers, just in case:\r\n\r\n* [Example of a dashboard description in Sigils for a CHAOSS metric](https://chaoss.github.io/grimoirelab-sigils/chaoss-gmd-cde/lines_of_code_changed/). Maybe it would be good enough to write these kind of descriptions in Sigils, and link from the metrics description, or you think it is better to include a part of this content in the metrics description itself?\r\n\r\n* [Live dashboard including the above metric, in the CHAOSS dashboard](https://chaoss.biterg.io/app/kibana#/dashboard/f13af0e0-18e5-11e9-ba47-d5cbef43f8d3)\r\n\r\n* [Description page in Sigils](https://github.com/chaoss/grimoirelab-sigils/blob/master/docs/_chaoss-gmd-cde/lines_of_code_changed.md) for the same metric. The description in the dashboard, linked above, comes from this file.	2019-06-07 16:52:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693436	\N	Thanks @jgbarah. I don't know what the best format is. \r\n@alpgarcia and I will explore this together on Tuesday. \r\nWe want to have a first draft (pull request) ready to discuss at the next Evolution WG meeting. 	2019-06-07 16:58:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693437	\N	I think we're done with this. Thanks!	2019-07-03 14:47:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693438	\N	Sounds good to me.	2019-06-04 16:50:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693439	\N	Please, have a look at #177, still under review. In it, I restructure your code for the first metric. Still some restructuring is needed, but maybe you can get the idea. If so, please consider re-writing these other metrics with that structure in mind (I think it is not far away from your proposal, but trying to formalize the structure a bit). 	2019-06-18 22:30:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693440	\N	Thanks a lot, @kfogel. Yes, this is the place for having this conversation ;-)\r\n\r\nFirst comment is purely procedural: in this issue, are you submitting one or two cases? If they are two, I think it is better to open one issue for each of them (we could keep this for the first use case in your description, and have a new one for the second one). If they are only one, I think I need more data to see how they come together...\r\n\r\nSecond comment is also procedural, for anyone willing to contribute. This issue is a part of the process described in the [use cases README](https://github.com/chaoss/wg-gmd/blob/master/README.md) in this repository. As such, please provide any feedback you may want about how to better describe this use case, but let's try to maintain it concrete (that is, we don't need to make it valid for any likely scenario, and therefore @kfogel, who is proposing it, can define its scope).	2018-11-14 12:38:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693441	\N	Now, with respect to the proposal itself, we should end up filling in this [template](https://github.com/chaoss/wg-gmd/blob/master/use_cases/template.md). So, we would need to define the main goal(s), main actor/stakeholders, and questions that metrics should help to answer. I think goals and actor/stakeholders can be easily extracted from the proposal, but we still need to find out about the specific questions that metrics should help to answer. I suggest some (but I'm not sure if they are appropriate):\r\n\r\n* How much expert on  the project is this person?\r\n* How much activity in the project had this person in the past?\r\n* How valuable were the contributions of this person?\r\n* To which extent this person has helped in the learning / engagement process of others?	2018-11-14 12:38:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693442	\N	Ping @kfogel! ;-)	2018-12-12 13:03:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693458	\N	I've started a pull request, #59, implementing the proposed goals and scope.	2018-12-12 13:15:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693459	\N	Now we have another pull request for an specific metric #72.	2019-01-23 15:40:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693460	\N	I think we merged all the related pull requests, so I am not sure if we can close this.  I think so? 	2019-02-20 15:35:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693443	\N	Hi, @jgbarah.  I reluctantly have come to the conclusion that it's probably two use cases, so I've opened issue #61 for the second one.\r\n\r\nLooking at the questions you asked:\r\n\r\n* How much expert on the project is this person?\r\n\r\n  I think it doesn't matter for our purposes.  I'm kind of changing the use case here, or narrowing it down: I think this is more about making a first pass.  That is, we're not directly evaluating expertise here, we're just trying to figure out where to devote our attention -- that is, *whom* to evaluate.  Once we've figured that out, we can use a multitude of other techniques, archives, tools, and social navigation knowledge to do the rest of the assessment for maintainership.\r\n\r\n* How much activity in the project had this person in the past?\r\n\r\n  Not sure I understand this one?  This sounds like exactly the information that the use case proposes to gather as input metrics in the first place.\r\n\r\n* How valuable were the contributions of this person?\r\n\r\n  Similarly to the answer to the first question: maybe that doesn't matter here.  We're just figuring out whose contributions to evaluate in the first place.  Once we have determined the person, we will look more closely at their contributions.\r\n\r\n* To which extent this person has helped in the learning / engagement process of others?\r\n\r\n  Well, we can try to infer that from responsiveness metrics, but ultimately we'd have to look at some of the responses themselves to be sure.  Having easy access to those responses and those threads would make that process fairly easy, though -- you just dip in and pick a random sample to evaluate (that is, evaluate in a non-automated way).	2018-12-13 05:58:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277317
1693444	\N	> Hi, @jgbarah. I reluctantly have come to the conclusion that it's probably two use cases, so I've opened issue #61 for the second one.\r\n\r\nOK, thanks. I will follow up there too.\r\n	2018-12-14 13:01:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693445	\N	WRT the questions, first a clarification. We're trying to apply GQM methodology (goal-question-metric). That's the reason why I wanted to define the questions before we enter into the metrics. I know you did your analysis already, so it may seem awkward to talk about the questions when you are proposing metrics. But the idea is to first ensure that the questions of your use case are clear, and then discuss the metrics based on how they help to answer those questions.\r\n\r\nSo, summarizing, based on your comments to the questions I proposed:\r\n\r\n* How much expert on the project is this person? I understand that his question does not make sense to reach your goal, so let's not consider it.\r\n\r\n* How much activity in the project had this person in the past? It seems you agree this is the fundamental question for helping to reach the goal, so let's keep it.\r\n\r\n* How valuable were the contributions of this person? As with the first question, let's not consider it.\r\n\r\n* To which extent this person has helped in the learning / engagement process of others? If I understand well, you prefer also not to consider it, right?\r\n\r\nThis would leave us with a single question, which is no problem at all, if you think it captures well what you need to reach the goal.\r\n\r\nI suggest also to define the goal, based in your comments as "Get a shortlist of people who should be consdiered for being offered commit access or whatever the equivalent is for the kind of work they're doing".\r\n\r\nIf you agree with all of this, I can produce a pr based on the template, and we discuss the metrics and everything in it.	2018-12-14 13:12:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693446	\N	@kfogel just checking if you have any comments on this. If nothing in the next few weeks, we're going to close this but happy to open it again at any time. 	2019-01-16 15:48:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693447	\N	@kfogel ???	2019-01-23 13:13:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693448	\N	Hi, @jgbarah: I agree with your summary above -- ready for PR based on the template, as you say above.\r\n\r\nIt might help if I clarify the overall real-world goal this use case is for.  My hope with this metric is to alleviate two separate-but-related problems:\r\n\r\n1. Deciding where to allocate human attention.  That is, these metrics help decide the boundary between where machines pay attention for us, and where we humans should start paying attention to the activities/goals/methods of other humans.\r\n\r\n2. Overcoming biases by providing data.  For example, maybe if I just follow my instincts, I'd be (unconsciously) more likely to respond to people in forums who have Western-sounding male-sounding names, or something like that.  But if a dashboard shows me that some person -- whom I'd not really been paying attention to before -- is very active in the project, very responsive in forums, participating daily, and has successfully submitted PRs -- then that might help me overcome those biases and direct my attention based on the actual activity of people.\r\n\r\nAgain, the main observation here is the idea of gathering of metrics around people rather than around projects.  I'm almost always more interested in the activity of one person across many projects than I am about the activity of various people within one specific project, because most of my decisions about where to allocate attention are about people.	2019-01-23 21:29:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277317
1693449	\N	Thanks, @kfogel! I'm assigning this to me, until I produce the PR (which I will do asap).	2019-01-29 22:00:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693450	\N	Finally I found the time to produce the pull request (#91). @kfogel (and everyone else), please have a look at it. Any comment / review is appreciated!	2019-02-20 12:22:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693451	\N	@kfogel  and @GeorgLink : Can this issue be closed with the pull request. 	2019-08-14 14:53:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693452	\N	Closing as discussino is continuing in another issue. 	2019-08-14 14:54:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693453	\N	@sgoggins, @rpaik, and @GeorgLink can you review this this PR from @jgbarah 	2018-12-05 17:45:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693454	\N	Let's start with defining the scope for this focus area. From my memories of the meeting today, we could define as "Aspects related to how the source code changes over time, and the mechanisms that the project has to perform and control those changes".\r\n\r\nWhat do you think about this?	2018-11-07 21:32:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693455	\N	With respect to goals for this focus area, again from my memories from our last meeting:\r\n\r\n* Learning how effective new code is merged into the code base\r\n* Learning about the processes to improve/review quality that are used (for example: testing, code review)\r\n\r\nAdd your goals to this list ;-) (or comment on how appropriate you find these).	2018-11-07 21:33:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693456	\N	@jgbarah, thanks for this. I agree with the scope for this as: Aspects related to how the source code changes over time, and the mechanisms that the project has to perform and control those changes. \r\n\r\nFurther, regarding the specific goals that you provide are great. +1	2018-12-05 17:42:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693461	\N	Closing issue as this is well represented now. 	2019-03-27 14:34:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693464	\N	Merging,since there is no comment against and I already approved.	2018-11-05 13:50:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693465	\N	@sgoggins I understood you were to take care of this, so I'm assigning this ticket to you. If I'm wrong, just reassign it to me, please.	2018-10-31 16:50:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693466	\N	@jgbarah : yes. Me. 	2018-11-07 17:03:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693467	\N	For "core contributors", maybe we should follow the example we have at https://github.com/chaoss/grimoirelab-sigils/blob/master/doc/community-structure.md?  I think we need to add a timeline/time period of contribution.  Something like 6 months or 1 year makes sense to me....\r\n	2018-10-31 23:31:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1693468	\N	This is good, I vote to merge it.	2018-10-31 15:16:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693469	\N	Long folder and file names are one of my foibles.  This change is good, I vote to merge.	2018-10-31 15:19:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693470	\N	I think this reads well and describes the process clearly. There are some minor typos but other wise good. I am not sure how to share those here. I would be happy to edit the document.\r\n\r\nI like the issue requirement. Due to the nature of the work, I think it is important to explicitly link pull requests to issues. 	2018-10-31 15:12:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693471	\N	@jgbarah : Yes, I will do that today. 	2018-10-31 16:17:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693472	\N	I think this is closed by #49, closing.	2018-11-14 19:53:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693473	\N	This is some house keeping. Everything code related had a "pull requests" preface, which made no sense in a number of cases. Also got rid of some metrics that obviously duplicated each other. 	2018-10-30 20:12:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693474	\N	I have nothing against the changes, but I don't understand its rationale. Some of the files I don't find them in the goals files. For example, I cannot find `pull-requests-review.md` in the [Code Development goal](https://github.com/chaoss/wg-gmd/blob/master/focus_areas/code_development/goal_code_development.md). Maybe I'm missing something?	2018-10-30 23:13:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693475	\N	I saw some of those too, but I wasn't sure if they were a metrics that still needed a home, or if someone else was perhaps working on them, so I elected to leave them alone and tried to mostly clean up cruft and rename metrics that I thought could benefit from a renaming. Sorry for the confusion @jgbarah! Please let me know if there's anything else!	2018-10-30 23:18:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1693476	\N	Thanks @rpaik \r\n\r\nFirst-time contributors seem to be easily defined as those who have no prior contributions.\r\n\r\nDo we have a definition for `core developers` (or `core contributors`)?	2018-10-30 21:12:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693477	\N	@GeorgLink said:\r\n\r\n> Do we have a definition for core developers (or core contributors)?\r\n\r\nGood question. Maybe we could work with an intuitive idea of what core developers (contributors) are, as those who perform most of the contributions, until we define the specific metrics.\r\n\r\nIn any case, we could define that either:\r\n\r\n* In administrative terms: developers with admin privileges, or nominated as such by the project (which is difficult to generalize, but in some specific cases, such as GitHub, could be particularized as people with admin and/or merge rights on the repository)\r\n* In quantitative terrms. Following the 80-20 rule, we could consider people producing 80% of the contributions over a certain period of time (eg, since the start of the project, or during the last six months).\r\n\r\nBut maybe we can think about the questions, and then metrics, based on that we can define "core", to sidstep that issue...\r\n\r\nIn fact, I wonder if that could lead to another use case: "Knowledge about who are core contributors to a project". What do you think?	2018-10-30 22:31:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693478	\N	When particularizing, we should also define "contribution". For example, a commit is (I think) clearly a contribution. Maybe, at least for a start, we could concentrate on this. But there are other kinds of conributions... What do you think @rpaik: for focusing, we consider only code contributions in the form of commits, or we try to extend to other kinds of contributions?\r\n\r\n(I would focus on code contributions, for focusing the case, at least until we have things more clear, and then maybe extending it to other contributions, or opening another use case for that).	2018-10-30 22:35:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693479	\N	For the questions, from my side we could start with these ones, and start thinking about metrics for answering them right away.	2018-10-30 22:36:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693480	\N	I wonder if "core" contributors need something of an explicit definition. For example, perhaps this means maintainers? Or, it could be people who are active in several aspects of the project above a certain threshold? Or, is it newcomers or "not newcomers"\r\n	2018-10-31 16:19:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693481	\N	Let's use some vocabulary definitions, for terms like "contributor", "new contributor", and "core developer", so that the use case is more clear.	2018-10-31 16:28:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693482	\N	I've opened #40 for having this section with a vocabulary in use cases.	2018-10-31 16:47:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693483	\N	> When particularizing, we should also define "contribution". For example, a commit is (I think) clearly a contribution. Maybe, at least for a start, we could concentrate on this. But there are other kinds of conributions... What do you think @rpaik: for focusing, we consider only code contributions in the form of commits, or we try to extend to other kinds of contributions?\r\n> \r\n> (I would focus on code contributions, for focusing the case, at least until we have things more clear, and then maybe extending it to other contributions, or opening another use case for that).\r\n\r\nI agree @jgbarah.  I think we can focus on code contribution for now.  As for the definition of "core contributors", I think we should use what we already have at https://github.com/chaoss/grimoirelab-sigils/blob/master/doc/community-structure.md.  So it could be something like people who made 80% of contribution over the 6 month period (or may be a year).  I'll also add my comments on https://github.com/chaoss/wg-gmd/pull/40 \r\n	2018-10-31 23:29:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1693491	\N	Great! In this case, except if @rpaik says otherwise, I will produce a pull request with the first draft for this use case, based on the original proposal and the discussion here.	2018-11-07 21:38:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693492	\N	I've produced a pull request, #63, to start introducing metrics in the use case. Feedback is welcome.	2018-12-19 13:51:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693484	\N	OK, if nobody objects, let's focus, at least for now, on git contributions (commits). That would make "contributors" as "people who are authors of commits", right? (notice that I'm saying "people" and not "identities", since I guess it is persons what matters here).\r\n\r\nWe can also consider that core is the minimum set of contributors with a certain percentage of participation (such as 80%) during some period of time (eg, last 6 months). Those could later be parameters for the metrics, if convenient.	2018-11-05 13:15:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693485	\N	I think we risk creating a box that we are stuck in if we become quantitatively precise in our definition of "core contributors" in this way. These percentages smell more like parameters or filters that we would apply to specific metrics like "commits". \r\n\r\nWhat would a definition look like then? \r\n\r\nFirst, I think we are defining "core code contributors", not "core contributors"; as "core contributors" does not automatically include only code. And if we define it this way now we are, again, "boxed in" I think when we move on to "issues" and "comments" and "documentation" and other kinds of contribution that are essential for a project. \r\n\r\nThere are also phenomena that make something like "total commits" gameable, even in some cases accidentally. Lines of code as another metric might be a way of balancing this gameability.\r\n\r\nSuggestion: Differentiate between people with commit rights and others. Describe a "code contribution" distribution based on number of commits and a separate metric based on LOC.  "Distribution" seems like a term that we may want to define as the specification of different statistical models of distribution (power law, etc.). Percentages mean substantially different things in communities that are governed differently (highly centralized v highly distributed). \r\n\r\nThat's an idea.  \r\n\r\nHere's a couple papers that my thoughts emerge from: \r\nGreater diversity in how we measure performance and participation: https://goo.gl/Mp6GjB\r\nThe role of project/repo leadership models in how commit metrics emerge: https://goo.gl/6ZUJqv\r\n\r\nLooking at these 80% measures preference specific models for project leadership; in a sense, it risks "encasing" or "putting in a box" the way that we define important code contributions. 	2018-11-05 14:18:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693486	\N	I agree that having a specific definition of core contributions is going to cause some boxing, to a use case that could be useful in any case. So, one idea could be to avoid defining "core", and let that to the user of the use case.\r\n\r\nOTOH, any kind of more precise definition is going to cause some "boxing". For example, if we define based on commit rights, that's going to be dependent on project policies: some are very liberal with granting commit rights, while some others are very strict. That could render any metric we derive as not suitable for comparison.\r\n\r\nJust to unblock this, I propose one of these two ways out:\r\n\r\n* We stick to defining core commit contributors based on a people producing a significant fraction of all commits (eg, 80%, but that could be variable).\r\n* Letting "core commit contributors" be undefined, and for each use of this use case, you should define core commit contributors.\r\n\r\nI would go for the first, since (at least in my view) use cases are specific to some goal and some stakeholders. If we find that a certain definition of core is good enough for the goals and stakeholders for this use case, maybe that¬¥s good enough. Then, when we do the complete goal-question-metric analysis for a case derived from (or related to) this use case, we can consider the more general use case where we have more general ways of defining core, or leave it as a parameter of the goal...\r\n\r\nWDYT?? 	2018-11-05 17:21:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693487	\N	> Looking at these 80% measures preference specific models for project leadership; in a sense, it risks "encasing" or "putting in a box" the way that we define important code contributions.\r\n\r\nA final note. As I commented above, use cases are always going to consider a certain option among all the possible ones. Of course there are many other ways of contributing, but if for an specific stakeholder commits is the one they want to consider, that's fine. We can of course have other alternative, or more general, use cases. Same for how they define "core", if that is important for their scenario.\r\n\r\nIn the end, my guess is that we are not "mandating" how use cases should be. They are use cases, and that's it, that's all: how people intend to use metrics, or how they are using them already. Of course, when doing our goal-question-metric analysis, we need to be much more exhaustive, precise, and "fair". And if we have a goal of "measuring contributions of newcomers", we need to be very careful of defining "contributions", "newcomers", and how and with what we compare them. Hopefully, we will be able of doing that based on several use cases, or their discussion. For example now, even not having the use case complete, we already have learned a lot about what to have into account when working with contributions by newcomers.	2018-11-05 17:33:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693488	\N	To make things simple, we can look only at questions for `first-time contributors` to start with.  I think comparison against more experienced contributors are definitely interesting, but if defining what we mean by `experienced contributors` isn't straightforward I think we can skip that for now.\r\n\r\nBTW, I'm not sure if LOC is any better than the number of commits.  Just because someone wrote more LOC doesn't mean that person's contribution is more valuable vs. others.....	2018-11-06 04:55:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1693489	\N	OK, if you agree, let's do it this way:\r\n\r\n* For the description of the use case, and goals, let's just mention "code contributions", "new contributors" and "experienced contributors" (I use "new" instead of "first-time" to allow for some metrics comparing eg, the first three commits instead of just the first one).\r\n\r\n* For the questions / metrics, let's make this particular, following the xx% rule over a certain period for defining "experienced", using commits (instead of LOC) for now, and focusing on commits and pull / merge requests.\r\n\r\n* In the definitions section, let's define  "code contributions", "new contributors" and "experienced contributors"  as above, but indicating that other definitions (and therefore, related use cases) are possible.\r\n\r\nThen, let's work on the questions, and then metrics, and let's try the results, to see how they work.\r\n\r\nAt any moment we want, we ca write a derived used case with other definitions for "code contributions", "new contributors" and "experienced contributors", with other derived questions and metrics, and compare results, if we want.\r\n\r\nIn any case, when we feed this back into our goal-question-metric methodology for the correspondent focus area, we have into account all the possibilities we're discussing here.\r\n\r\nIs this good enough, @rpaik @sgoggins (and others) to move forward for now? If so, I can write the first draft of the use case based on this, and pull request it.	2018-11-06 08:41:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693490	\N	@rpaik @jgbarah : I agree that we will make the use cases specific, which ensures that we get solid stakeholder engagement. \r\n\r\nThe Goals/Questions/Metrics may be parameterized in a way to support use cases. 	2018-11-07 17:20:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693493	\N	@rpaik do you think the use case is closed, or do you have any feedback?	2019-01-09 17:21:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693494	\N	@rpaik : Can we close this issue? Two pull requests are merged. Do they capture what you expected?	2019-01-23 15:52:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693495	\N	Sorry for the delay.  Yes I'm good with this üòÑ 	2019-02-01 13:39:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1693496	\N	I think this is a low impact "housekeeping" pull request. 	2018-10-30 16:27:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693497	\N	Thanks for putting this together Jesus. The template looks good.\r\n\r\nWhat about a section that discusses the value of a metric for decision making? E.g. if value is above 80th percentile, then this indicates an amazing investment opportunity.	2018-10-26 16:02:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693498	\N	Thanks, @GeorgLink.\r\n\r\nFor the value of the metric, maybe we could use for now the comments section? For now, I was intending to focus on the description of the goals and questions, so that anyone can write their use cases, even if the use of specific metrics is not completely clear. I'm going to include it as a possible comment for now, while I wait for your feedback.	2018-10-28 18:45:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693499	\N	Thanks for your comments, @GeorgLink @sgoggins \r\nMerging...	2018-10-30 16:49:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693500	\N	We could remove the reference links at the bottom. Looks good otherwise.	2018-10-18 17:59:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693501	\N	> We could remove the reference links at the bottom. Looks good otherwise.\r\n\r\nI thought they could be interesting as a reference, but if you prefer, I will delete them.	2018-10-18 18:21:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693502	\N	Why remove the reference links?\r\n\r\nI think they are good for building a shared language and understanding.	2018-10-18 18:51:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693503	\N	The reference links aren't specific to the meeting. The text comes from the email I sent with the notes in it. They are part of a template I am creating for the recurring agenda and notes emails so all future versions of my notes/agendas will also include it. \r\n\r\nQuestion - Are we appending notes to this document or are we replacing them? If we are replacing them then I see no issue in leaving them. If we are appending multiple meeting dates here, then the links will be redundant.   	2018-10-18 20:56:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693504	\N	Maybe I missed something.\n\nWill notes be for the entire document or only live within a section of a\nspecific meeting?\n\nI favor the latter and do not mind repetitions if it i accurately reflects\nwhat is on the mind of members or was mentioned during the meeting.\n	2018-10-19 06:09:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693505	\N	My idea is to capture in the meetings minutes all that seems worth to mention. That will usually include all notes, and/or a merging of notes if more than one person takes notes. The idea is to have a single place for checking what happened in past meetings.\r\n\r\nWith time, we can have a separate file for meetings, to avoid overbloating README.md	2018-10-19 07:24:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693506	\N	> Question - Are we appending notes to this document or are we replacing them? If we are replacing them then I see no issue in leaving them. If we are appending multiple meeting dates here, then the links will be redundant.\r\n\r\nReplacing, I think. If I'm missing something that was in the notes but is not in the minutes, please add it.	2018-10-19 07:25:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693507	\N	I think we should fast track these notes pull requests\r\n	2018-10-24 16:38:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693508	\N	Isn't this what we would put into the "Focus Areas" Folders if we are following the D&I Structure? \r\n\r\n	2018-10-18 15:35:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693509	\N	Following up on my comment just now, Underneath "Focus Areas" I see the specific metrics defined. I know we have discussed using Use Cases, but I do not see them in the D&I Structure. @GeorgLink : Can you advise regarding how D&I is handling use case definitions and if any are committed to the repository yet? Or, if the use cases are embedded in your metrics definitions? 	2018-10-18 15:38:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693510	\N	As far as I know, D&I are not using use cases in this way. The idea here came from several people in CHAOSS having interesting experiences on using (or willing to use) metrics, which could be useful for defining the questions and framing the metrics.\r\n\r\nThe idea of these use case is to be orthogonal to the "focus area | goal | question | metric" structure (therefore the different directory).	2018-10-18 16:47:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693511	\N	In D&I, we do not use the term 'use case'. What we include on our resource pages are 'objectives', which are not full fledged use cases but provide rationale for why to use metrics. [Example][1]\r\n\r\nHow does the use case compare to our idea of the blog posts series [Metrics in Use][2] (which we still need to launch)?\r\n\r\n[1]: https://github.com/chaoss/wg-diversity-inclusion/blob/master/focus_areas/project_and_community/documentation.md\r\n[2]: https://docs.google.com/document/d/1p9FZM6rixjiEsxXQ7Ij-mbGCJKm_OrOQ6nd3oIBRnto/edit	2018-10-18 17:42:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693512	\N	> How does the use case compare to our idea of the blog posts series Metrics in Use (which we still need to launch)?\r\n\r\nI think most use cases could be the basis for a blog post.	2018-10-18 18:12:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693513	\N	> One suggestion: Point to our blog post series as a possibility for disseminating the use case. https://docs.google.com/document/d/1p9FZM6rixjiEsxXQ7Ij-mbGCJKm_OrOQ6nd3oIBRnto/edit#heading=h.i08ikslakwjv\r\n\r\nGood idea. I'm going to do it.	2018-10-18 18:13:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693514	\N	Thanks for putting this together, @klumb. Can we consider this is being addressed by #24 and maybe #34 for now, and close this issue? 	2018-10-31 10:58:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693515	\N	Yes, I believe we can close this.	2018-10-31 15:23:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693516	\N	I am not sure what .DS_Store was it showed up 5 or 6 months ago. I deleted it.	2018-10-09 17:51:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693517	\N	Sorry, slipped and hit wrong button\r\n	2018-10-09 17:51:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693518	\N	@klumb, anything about this?:\r\n\r\n> Why are we using numbers for starting folder names? (I mean, such as 1_template_folder instead of template_folder	2018-10-09 20:35:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693519	\N	@jgbarah, also not needed.  	2018-10-09 20:59:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693587	\N	Closing this as it seems it doesn't need further discussion.	2018-10-31 11:17:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693520	\N	I think this is a good idea. Further, we can create a meeting notes folder to archive them. Notes should include agenda, the notes, and a link to the youtube video. But that may be a new issue.	2018-10-06 00:54:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693521	\N	Thanks, @klumb \r\n\r\nAnybody else can comment / review?	2018-10-09 16:45:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693522	\N	Lgtm	2018-10-09 17:35:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693523	\N	Since nobody objected, and there is a positive comment, I'm merging this one.	2018-10-17 22:38:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693524	\N	We are no longer using this repository. Can you issue the pull request against the "wg-gmd" branch of the metrics repo? 	2018-09-21 14:43:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693525	\N	Will do.\r\n\r\nAn issue template would be great, that informs someone trying to open an issue or pull request that this is not the place.	2018-09-21 14:47:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693526	\N	I'm reopening this pr, since I think we agreed to follow up work here.	2018-10-02 17:47:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693527	\N	looks good to me. Just fix the directory. 	2018-10-24 16:38:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693528	\N	@GeorgLink maybe you can amend the commit to avoid the current conflict? I guess it is a matter of changing the file name to the new one for this metric.	2018-10-24 16:39:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693529	\N	I guess so. I'll have a look next week.	2018-10-26 16:04:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693530	\N	I updated the branch to include the latest master version... \r\n\r\nWhen I `git diff` compare locally, it shows correctly that I only made a minor change.... this pull request shows way more.	2018-10-31 16:29:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693531	\N	Looks like this is a simple change, but the commits look more significant because things moved. 	2018-10-31 16:37:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693532	\N	We moved the workgroup's efforts over to the wg-gmd branch of the metrics repository. Please resubmit this pull request there. \r\n\r\nThanks!\r\n\r\nSean 	2018-09-21 13:18:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693533	\N	Oooops, moving this to the other repo, thanks @sgoggins 	2018-09-21 15:31:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277253
1693534	\N	Reopening, since we're still working in this repository (see message to the mailing list).	2018-10-02 17:46:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693535	\N	Any review or comment? Since I was involved in the change, I prefer that somebody else reviews it...	2018-10-03 16:22:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693536	\N	There's a conflict we will resolve and then merge. @klumb : can you look into this. 	2018-10-24 16:17:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693537	\N	This just a naming convention issue. File was renamed to issues-open.md	2018-10-24 16:37:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693538	\N	Once we're done with the comments in revisions, I can change the name of the file, which seems to be the reason for the conflict, when merging.	2018-10-25 21:19:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693539	\N	@sgoggins are you happy with my comments, and we can merge this pull request, or you still feel I need to do some change before merging?	2018-10-31 10:53:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693540	\N	@GeorgLink : I think some conflicts were introduced during the last pull request approval. Can you see if those can be resolved with some minor edits and resubmit? 	2018-09-21 12:48:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693541	\N	We have moved this work to the wg-gmd branch of the metrics repository.  Please resubmit this pull request there. 	2018-09-21 13:17:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693542	\N	Sure, I should be able to resolve merge conflicts within the same pull request.	2018-09-21 14:13:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693543	\N	I see what happened. Because the files moved, resolving this was more difficult than it was worth. New pull request: #21 	2018-09-21 14:16:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693544	\N	I think this is very much needed. In working on the Augur metrics status page, I realized two concepts: an `ID` and a `tag`. While it applies to Augur in a slightly different way, I think that it could still be useful.\r\n\r\nWithin Augur's idea of metrics, each metric has a `tag`, which is what the working group defines as the metric's "name" if you will. Each metric also has an `ID`, which is created by combining the metric's data source and it's tag. So if the `open-issues` metric (that's the `tag`) has an implementation using GHTorrent, the `ID` is `ghtorrent-open-issues`. This allows a metric to be defined in multiple data sources.\r\n\r\nIn the context of the working group, obviously the data source wouldn't apply, but perhaps something else could? I'd definitely like some standard way to identify (and thus classify) metrics. It sounds like what you're proposing is rather similar anyways - just some food for thought! 	2018-09-06 20:27:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277112
1693545	\N	Is this a duplicate of chaoss/metrics#105?\n\nOn Thu, Sep 6, 2018 at 3:13 PM Kevin Lumbard <notifications@github.com>\nwrote:\n\n> I am going through the metrics markdown files and finding a lot of\n> repetition. I would like to push a fix that will allow us to get these\n> pages up to date and easier to work with.\n>\n> Besides some basic editing, I think we need to agree on a standard naming\n> convention for these files. I propose:\n> "the name of the resource being measured"-"more_description_if_necessary"-\n> "the_measurement_if_necessary".md\n>\n> Ex:\n> issues-open-average_time_distribution.md\n>\n> This example metric describes the average number of issues over a period\n> of time.\n>\n> By doing this we can easily sort and identify related metrics.\n>\n> Thoughts?\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/wg-gmd/issues/18>, or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5Ra25RUG4foJeQIxS1w31m8I8PHyEks5uYYHegaJpZM4Wdomf>\n> .\n>\n	2018-09-06 21:23:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693546	\N	Yes @GeorgLink\r\n\r\nSorry I should have linked it.	2018-09-06 21:39:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693547	\N	Please see https://github.com/klumb/wg-gmd\r\nfor an example.\r\n\r\nPlease note that we are talking about the naming convention for the files in the resource folder and not the content of the file. I believe the files will need to be edited as well but that is a different issue.	2018-09-06 22:03:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693765	\N	I think we need to collect some basic terminology to start.\r\n\r\n\r\n	2019-03-09 15:07:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693548	\N	@ccarterlandis wrote:\r\n> So if the `open-issues` metric (that's the `tag`) has an implementation using GHTorrent, the ID is `ghtorrent-open-issues`. This allows a metric to be defined in multiple data sources.\r\n> ...\r\n> In the context of the working group, obviously the data source wouldn't apply,\r\n\r\nI see where you are coming from and it makes for an implementation like Augur. I agree also, that from the CHAOSS metrics perspective, we want to stay implementation agnostic and not tie a metric definition to the data source. What you call `tag` could then be the canonical definition and within that page, we could have a section talking about the intricacies of implementing it in different technologies. This would provide a nice overview of implementation challenges of the same metric across technologies.\r\n\r\n\r\n\r\n	2018-09-06 22:46:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693549	\N	@sgoggins wrote in chaoss/metrics#105:\r\n> That the GMD group would need to figure out the "Goal" classification and subsequent hierarchies on its own. I agree with @jgbarah that this is something the GMD group can work through, with the GOAL (ha ha) of aligning with the D&I group's general structure.\r\n\r\nIt sounds like GMD and D&I are trying to struggle with very similar issues. I don't want to interrupt the GMD work but make you aware of two discussions within the D&I workgroup that touch on this issue. As the D&I group, I'm sure we would also be happy to adopt new conventions that GMD establishes.\r\n\r\nWe are discussing how to write good goal-question-metrics:  chaoss/wg-diversity-inclusion#66\r\n\r\nWe are also discussing the hierarchy and sub-categories of metrics [in this gdoc](https://docs.google.com/document/d/1LRNBu5f3lw42_p8_NtXnt_2vRSPQvnt_POhDyse88sk/edit#heading=h.32q74ak03v67).	2018-09-06 22:51:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693550	\N	Thanks for the google document @GeorgLink. I think D&Is Question/resource pages match up to the aggregate metrics pages we are wanting to create in GMD. \r\n\r\nI think one of the reasons there is confusion here is because we are coming at it from a different directions. We are working with activity metrics that are for the most part already defined. I believe our goal right now is to establish standards around these metric detail pages then we can begin to construct the question/resource/aggregate pages. \r\n\r\nThis issue is about the standards for the metrics detail pages. Higher level discussions will follow.	2018-09-07 13:15:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693551	\N	Perfect. Much to learn from this discussion.\n\nOn Fri, Sep 7, 2018, 08:15 Kevin Lumbard <notifications@github.com> wrote:\n\n> Thanks for the google document @GeorgLink <https://github.com/GeorgLink>.\n> I think D&Is Question/resource pages match up to the aggregate metrics\n> pages we are wanting to create in GMD.\n>\n> I think one of the reasons there is confusion here is because we are\n> coming at it from a different directions. We are working with activity\n> metrics that are for the most part already defined. I believe our goal\n> right now is to establish standards around these metric detail pages then\n> we can begin to construct the question/resource/aggregate pages.\n>\n> This issue is about the standards for the metrics detail pages. Higher\n> level discussions will follow.\n>\n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/wg-gmd/issues/18#issuecomment-419435462>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5RbZOZPpMTsKXYBvGwFTz9QYdfeJuks5uYnFdgaJpZM4Wdomf>\n> .\n>\n	2018-09-07 14:08:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693552	\N	Oooops. I'm sorry, this was below my radar.\r\n\r\nYes, I find the naming conventions important, mainly to use the same name to the same concept, and to have a convention that allows us to group names according to prefixes, etc. But I think this is discussion is different from how to do goal-question-metric, so I would have it in a separate ticket. And for me, using chaoss/wg-diversity-inclusion#66 for the second is perfect, so maybe we can just follow that discussion there, and then translate the results here, if convenient.\r\n\r\nWRT to naming, with the current state of affairs, I would stop for now, after #24 was accepted, and close this issue (at least form now). @GeorgLink @ccarterlandis @klumb do you agree?	2018-10-31 11:05:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693553	\N	Yes, I believe we can close this.	2018-10-31 15:23:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693554	\N	OK, thanks. Closing...	2018-10-31 16:51:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693555	\N	Per GMD meeting:\r\n\r\n- Adjust naming convention - remove measure and time\r\n- Remove metrics that aren't being used\r\n- Add file and folder structures for UseCases\r\n\r\nWould like to merge this and then make further edits to finalize.	2018-09-12 16:49:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693556	\N	It seemed ok with us during the last GMD Call and we were going to make a final review, and if no comments merge.  Seems like this is ok, so I am going to merge the pull request. 	2018-09-21 12:46:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693557	\N	I'm closing this for now, since we're restructuring and rewritting the metrics.	2019-01-16 15:49:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693558	\N	@BenLloydPearson I really do like this (and the presentation is excellent!). Are any of the tools doing sample implementations of this? 	2018-07-03 11:27:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693559	\N	@BenLloydPearson and @germonprez : If you take a look at the default representation of most metrics on the Augur project, we have time series data presented by default. http://dev.augurlabs.io/?repo=rails+rails	2018-07-12 16:16:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693560	\N	I think we want to have definitions put together in a markdown file. 	2018-07-12 16:17:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693561	\N	Maybe we add "Velocity" as straight up "event counting" for a particular metric.	2018-07-12 16:20:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693562	\N	@BenLloydPearson, since now we have [use cases](https://github.com/chaoss/wg-gmd/tree/master/use_cases), what do you think about converting this into a use case, for further discussing it? If you want, I can open the issue to start the discussion.	2018-10-31 11:10:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693563	\N	@BenLloydPearson & @jgbarah : Ben's proposal "sounds" to me more like a straight up metric than a use case ... I say this mostly because I cannot think of, off the top of my head, the various different actors who would be interested in velocity outside the context of a family of other metrics. ... by itself, I am not sure its a "use case"; but I think it might be part of another use case. \r\n\r\nMy sense of things could be wrong.  @BenLloydPearson : How are you thinking about your suggestion? 	2018-11-05 14:53:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693586	\N	@jgbarah, @GeorgLink: I'll calculate the percentile, mean and variance. And i'll create a visualization so we can use what we like.	2018-05-27 18:39:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693766	\N	Lets make it simply changes from here forward. 	2019-04-10 15:04:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693564	\N	I was thinking of a very simple use case, like "Learning about how quickly new code or content is produced and merged into the mainline project" (borrowing from a sentence in the Background section). From this, questions are already mentioned, and we could (maybe) discuss about some other metrics. But I was just wondering... Now, I'm sort of focused on use cases, and you know, when you have a hammer... ;-) So, @BenLloydPearson what do you think?	2018-11-05 17:11:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693565	\N	I don't really think this fits into the idea of a use case because I think it would likely have value for many  use cases. With that said, I don't really have time to develop this idea further, and I suspect that the use case model might be better for providing a higher level understanding that what I'm proposing here. I'll close this for now and reopen it if I think the idea is worth revisiting.	2018-11-06 01:43:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277280
1693566	\N	OK, @BenLloydPearson, thanks. In any case, let's keep this idea in mind when we do the goal-question-metric for the different focus areas.	2018-11-06 08:44:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693567	\N	Hi, @aswanipranjal when you say "Currently the users are being divided into: None, Owner, Collaborator, Contributor and Member", you mean in the GitHub API, right?	2018-06-18 10:54:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693568	\N	Yes, @jgbarah.	2018-06-22 04:41:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693569	\N	i'm closing this for now, since this is part of a broader discussion on the concepts that we deal with for the metrics. Please, feel free to reopen if you think it is better to follow on here.	2018-10-31 11:13:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693570	\N	Once we agree on this, we can explore a similar metric for code reviews.	2018-06-12 22:56:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693571	\N	I agree. Besides, I see the number of projects more like an organizational way (how the project decides to think about itself) than something related to activity, or to GMD. What do you think?	2018-06-04 07:13:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693572	\N	Closing for now, for the same reason that #9.	2018-10-31 11:15:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693573	\N	We can split the metric in "new contributor for ..." where we have several kinds of contributors:\r\n\r\n* merged commit (a commit by this person first appears in the git repo)\r\n* opened issue (this person opens an issue for the first time)\r\n* closed issue  (this person closes an issue for the first time)\r\n* opened pull request (this person opens a pull request for the first time)\r\n* merged (accepted) pull request (this person gets accepted a pull request of them for the first time)\r\n* closed (merged or not) pull request (this person gets a pull request closed for the first time)\r\n* review (this person reviews a pull request for the first time)\r\n* message posted (this person posts a message to a mailing list for the first time)\r\n\r\n...and so on.\r\n\r\nThen, we could also aggregate, such as "new contributors of any kind during this month".\r\n\r\nWhat do you think?	2018-06-05 21:19:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693574	\N	Sounds like a good idea! But this too requires us to better enrich the indices and collect more data. But all these combined will give us good insights about the communities growth and outreach.	2018-06-06 17:28:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693575	\N	> But this too requires us to better enrich the indices and collect more data.\r\n\r\nYes. Let's pull request this change (I will do, if nobody comments here against the idea), and once/if it is accepted, let's start talking about implementation. Thanks!	2018-06-06 21:25:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693576	\N	@jgbarah: as per the [discussions on the mailing lists](https://lists.linuxfoundation.org/pipermail/oss-health-metrics/2018-June/000707.html), these metrics have to be derived and time bound, right?	2018-06-23 11:08:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693577	\N	> So are the latter 4 the maintainers for that project?\r\n\r\nI think we could start that way...\r\n\r\n> What can be considered as a response? A reaction or a comment?\r\n\r\nAgain, I think we could start that way...	2018-06-05 21:21:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693578	\N	These still have to be implemented so that we can calculate them from the enriched indices directly as I mentioned in chaoss/grimoirelab-elk#364.  I'll start working on this.	2018-06-06 17:12:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693579	\N	I understand with "closed issue resolution duration" the time from open to closing an issue. An issue that opened today and closed tomorrow has a resolution duration of 1. An issue that was opened on May 22, 2015 and closed on May 23, 2015 also has a resolution duration of 1. \r\n\r\nI think it would be interesting to have a boxed trailing average. By that, I mean that we calculate for each weak the resolution duration of the issues opened (alternatively: closed) in that week and display this average over time.	2018-05-23 12:23:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693580	\N	I agree with @GeorgLink for the definition. To make it more clear from the name, I would change the name to "time-to-resolution of closed issues", or maybe more clear, "time-to-close of closed issues".\r\n\r\nWRT aggregation, same comments that those in #6 apply.\r\n\r\nIn addition, calculating it for specific periods of time (as @GeorgLink) suggests, is sensible, but maybe that depends on the granularity of the "evolution periods" that we're using in an specific case, something that I guess applies to almost any metric.	2018-05-23 13:11:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693581	\N	I think this is closed now, by #24.	2018-10-31 11:16:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693582	\N	I think both are valid ways for displaying and filtering the open issue age. The implementation is a choice of the implementer.	2018-05-23 12:17:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693583	\N	But I think still we need an aggregator, if the metric is to be understood as a such (eg, a measurement).\r\n\r\nIf we agree to use an aggregator, I would use the median, because distributions of this kind tend to be very skewed, and the mean does not provide much information (not being the distribution normal). Maybe a better approach is to (when defining the metric) state that "appropriate statistics of the distribution of open issue age" will be provided, and in the examples provide information for example for median, 75, 90, 95 percentiles, mean and variance (or something like that). Comments, anyone? 	2018-05-23 13:06:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693584	\N	‚Äã+1 to percentiles, although a visual representation may be easier to\ncomprehend for most uses.\n	2018-05-23 13:23:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693585	\N	I agree with having also a visual representation. I think that for all metrics, we could have some aggregators, and one or more "preferred" visualizations.	2018-05-23 21:38:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693588	\N	I'll throw this out there: \r\n\r\nI consider issues abandoned if there has been no activity within the last XX days. \r\n\r\nActivity can be new comments, new reactions, new pull requests, changed labels, changed milestones, or changed assignments. \r\n\r\nWhat the threshold of XX days is supposed to be, that can be a parameter chosen by the user, after all each community works differently, but I think 30 days might be a good start.	2018-05-23 12:21:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693589	\N	I agree with @GeorgLink. However, maybe we should also have into account issues that are closed without fixing (eg, "won't fix"), but that's a bit more tricky (see below).\r\n\r\nI think we can, for now, go with the approach @GeorgLink suggests, but in that case, I would change the name to "unattended issues", which is maybe more precise for that case. And is a useful metric, indeed.\r\n\r\nWe can also open a more general discussion about what exactly we want to track. I think this comes from an extension of the concept of "abandoned reviews" in Gerrit. There, it has a very precise meaning: reviews that were closed as "abandoned", meaning that the proposer of the patch is no longer working on it (thus, abandoning the patch, and signalling reviewers that no review is needed).\r\n\r\nBut for issues, that meaning is maybe difficult to capture, because it would be when somebody opens a ticket, and because whatever the reason, closes it before it is fixed. I think this is unusual, and I'm not sure to which extent useful... If any, could be a measure of engagement: I care so much, that I come to the issue tracking system to close this bug report, which was not addressed, but I found it was addresses somewhere else (for example).\r\n\r\nSo, in short, the "unattended" concept seems more appropriate to me.	2018-05-23 13:02:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693590	\N	Re-reading the metric, maybe the ratio for efficiency would be better defined based on issues open / issues closed (instead of issues abandoned) during a certain period. In the end, it is related to the throughput, I think.	2018-05-23 13:15:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693591	\N	@jgbarah: shouldn't it be: [number of issues closed (with a fix)] / [Number of total issues created]?	2018-05-25 05:12:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693592	\N	> @jgbarah: shouldn't it be: [number of issues closed (with a fix)] / [Number of total issues created]?\r\n\r\nThere are two issues with that:\r\n\r\n* If you're interesting in how you cope with the issues being open, it is the ratio close/open what matters. In that case, it is not relevant why the issue was closed.\r\n* If you're interested in how much you are fixing problems, yes, your definition is more accurate. But AFAIK, there is no way, at least in some issue trackers, such as GitHub's, to determine if an issue was closed with a fix or not. Besides, there are issues that you really don't need to fix (such as questions).\r\n\r\nSo, I would stick to the definition I proposed above.	2018-05-25 09:29:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693593	\N	I like @aswanipranjal's proposal of putting Number of total issues in the denominator, because otherwise the 4/2 will show up the same as 20/10 and 1/0 is undefined. \r\n\r\nTotal number of issues will also be time-boxed, of course.	2018-05-25 17:16:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693594	\N	@GeorgLink, @jgbarah: to summarize, we can have 2 outputs for this metric:\r\n-  abandoned issues i.e the ones which in which there was no comment/reaction or activity of any sorts for a certain XX duration of time (initially 30 days).\r\n- `[total number of issues that were closed with a fix]`/`[total number of issues in the repo]` (here: fix is equals to a PR corresponding to that issue).	2018-05-27 17:40:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693595	\N	@aswanipranjal, the absence of a pr does not always mean the bug was not fixed (it depends on whether the project is using always prs, and how they are using them). Besides, if the ticket was not about a real bug (bug a question, for example), you really don't need to close it by fixing anything.\r\n\r\nSo, I would stick to issues closed / issues open per month. That has a clear interpretation in terms of throughput (if < 1, the project is not coping with all the opening activity), and is easy to compute.\r\n\r\nIf you want, we can later explore some metric related to actually fixing bugs, but I think that should at least some discipline by the project (such as consistently using pull requests, and using "bug" tag in issues, for example). But I'd leave this to a later step.\r\n\r\n@GeorgLink I completely agree with you and @aswanipranjal on having closed in the numerator.\r\n\r\nFor abandoned issues, given that we really don't know if they are abandoned, or just inactive, I would use `inactive`. In fact, for being more precise, it could be `inactive-period`, such as for example `inactive-30d' (meaning inactive for 30 at least days, as of now).\r\n\r\nSo, if you agree, it would be:\r\n\r\n* `inactive-period` issues (we could for now settle on `inactive-30d`). Issues that as of now have been inactive (no comment) for `period` time.\r\n*  `inactive-period` pull requests (we could for now settle on `inactive-30d`). Pull request that as of now have been inactive (no comment) for `period` time.\r\n*  `efficiency-period` for issues (we could for now settle on `efficiency-30d'). Issues closed during period / issues open during period.\r\n*  `efficiency-period` for pull requests (we could for now settle on `efficiency-30d'). Pull requests closed (merged or closed) during period / issues open during period.\r\n\r\nPlease, let us know any feedback, and if positive, we can start proposing a pull request to the text defining the metrics.	2018-06-05 21:11:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693596	\N	‚ÄãThese are all sensible. +1\n\nI would like one clarification on "issues closed during period / issues\nopened during period"\n\nIssues opened is clear. Issues closed: are those the same issues that were\nopened, but whether they were closed at any time after their creation? Or\nare issues closed the ones that were closed during that time period but\ncould have been created before? The problem with the latter is that when we\nreceive no new issues but close 1, then we have an undefined fraction of\n1/0 ...\n	2018-06-06 00:45:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693597	\N	>So, I would stick to issues closed / issues open per month. That has a clear interpretation in terms of throughput (if < 1, the project is not coping with all the opening activity), and is easy to compute.\r\n\r\nOkay, for now we stick to this.\r\n\r\n>If you want, we can later explore some metric related to actually fixing bugs, but I think that should at least some discipline by the project (such as consistently using pull requests, and using "bug" tag in issues, for example). But I'd leave this to a later step.\r\n\r\nYeah! I was thinking that generally there is a PR to an issue which closes it, so we could get relations and derive some useful data from that. We can look into it later.\r\n\r\n> inactive-period issues (we could for now settle on inactive-30d). Issues that as of now have been inactive (no comment) for period time.\r\n> inactive-period pull requests (we could for now settle on inactive-30d). Pull request that as of now have been inactive (no comment) for period time. \r\n\r\nThis works too!\r\n\r\nApart from this, I have the same question as Georg. @jgbarah can you elaborate a little more on issues closed during period/ issues open during period?\r\n\r\n	2018-06-06 16:20:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693598	\N	@GeorgLink said:\r\n\r\n> Issues opened is clear. Issues closed: are those the same issues that were opened, but whether they were closed at any time after their creation? Or are issues closed the ones that were closed during that time period but could have been created before? The problem with the latter is that when we receive no new issues but close 1, then we have an undefined fraction of 1/0 ...\r\n\r\nIn my opinion, the metric which is useful is "how much you close during this period related to how much is open". If you're closing less than it is opened (whenever the closed stuff was opened), you're accumulating work for the future. If you're closing more than is opened (whenever the closed stuff was opened), you're shortening the queue of pending work. For the metric to be this way, you need to consider all tickets closed. \r\n\r\nWhy not "closed bugs that were open during the period"? Because usually it doesn't matter for this when the bug was open. A closed bug is a closed bug: less technical debt, work done. If we only consider issues open during the current period, we're somehow favoring issues open during some "artificial" period, when computing throughput. Besides, we also have metrics on how long does it take to close issues to know about if bugs are being closed quickly or not...\r\n\r\nI see the problem you mention. If we want to avoid it, we need to have a more elaborate metric, which is never zero in the denominator. A simple way of doing that is "issues open - issues closed", but that's not relative. For making it relative, you need to divide by something which gives you an idea of the total amount of work... What about using "bugs still open at the beginning of the period plus bugs open during the period"? That would be zero only if there were no bugs open during the period and no pending bugs when the period starts, but in that case, there will be no closed bugs either, so it would be 0/0 which we could assume to be 0 (not fully correct, but maybe fair enough). And it would be a weird case, anyway.\r\n\r\nIf this is the case, the metric would be "total number of bugs closed during the period / (total number of bugs opened during the period + total number of bugs open at the beginning of the period). In this case, the interpretation would be: the closer to 1, the less bugs remaining open at the end of the period the project is coping well with pending work), the closer to 0, the more bugs remaining open (the project is not coping well with pending work). If the number remains stable over time, project is closing at about the same pace (relative to the pending work), if it decreases, the project is closing less stuff than it should be closing...\r\n\r\nWhat do you think?\r\n\r\n\r\n\r\n	2018-06-06 22:03:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693599	\N	BTW, a complementary metrics would be the backlog: how many bugs remain open at the end of the period. This captures the effect that maybe throughput is sort of good, because the project is focusing on closing bugs which are recent, but ignoring for longer and longer periods bugs that are old (and maybe difficult to close). The backlog can also be absolute or relative, and usually (in my opinion) relative is more useful. Following the spirit of the discussion above, it would be something like "total number of bugs still open at the end of the period / (total number of bugs opened during the period + total number of bugs open at the beginning of the period).  If the number is larger than 1, the backlog is increasing. If it is lower than 1, the backlog is decreasing.	2018-06-06 22:14:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693600	\N	How about, instead of building a ratio, displaying the two numbers for the same timeframe:\r\n\r\n![example](https://4.bp.blogspot.com/-NtLZsKIzoHM/UVbbGaj57nI/AAAAAAAAD4E/PI3odzwg0jQ/s1600/Captureckdk.JPG)	2018-06-06 22:17:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693601	\N	That's a nice presentation, thanks for the suggestion. But still, in addition to that (which I like to have), we need a number, that we can compare from project to project... Your presentation is a good complementary view of issues opened and issues closed in the same chart, but doesn't show to which extent the project is coping with pending work, I think...	2018-06-07 21:52:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693602	\N	Ageed\n	2018-06-07 21:55:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693603	\N	@jgbarah, @GeorgLink: We can create a presentation that Georg mentioned above for\r\n\r\n- ` total number of bugs still open at the end of the period / (total number of bugs opened during the period + total number of bugs open at the beginning of the period)` and \r\n- `total number of bugs closed during the period / (total number of bugs opened during the period + total number of bugs open at the beginning of the period` \r\nshowing the contrast between the two.\r\n\r\nDo you have any other suggestions regarding how these fractions (also `issues closed / issues open per month`) should be visualised?	2018-06-11 10:43:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693604	\N	I've tried to condense the results of this discussion in pull request #12.	2018-06-12 22:55:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693605	\N	As part of aligning and defining CHAOSS processes, I can start working on this.	2018-08-02 16:11:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693606	\N	I think this is done for now, thanks to the work by @klumb and others. Thanks!!!	2018-10-31 11:18:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693607	\N	Do you have the latest and greatest GMD from the Metrics repo? 	2018-05-24 19:19:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693608	\N	> Do you have the latest and greatest GMD from the Metrics repo?\r\n\r\nI think I have it... now ;-) Thanks for the heads up.	2018-05-25 09:25:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693609	\N	I removed myself as a reviewer, since I don't know what criteria to review this for. 	2018-05-24 22:01:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693610	\N	Working on bringing myself up to speed on a few different matters here, but I think for the good of our overall efforts: \r\n\r\nThere are two things I am looking into : \r\n1. Making sure I understand the pattern laid out by this pull request.  Its the first of its kind, and will set a pattern we should all follow (or follow with tweaks maybe?)\r\n2. I am thinking about how and to what extent we might want to explicitly or implicitly make the assessment of pull requests in this repository digestable by non-technologists.  \r\n\r\nPractically, I also confess I don't know how to easily clone the notebook and run it inside of local instance of the repository systematically. On this count, I acknowledge feeling dumb.  	2018-05-25 05:40:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693611	\N	@GeorgLink said:\r\n> I removed myself as a reviewer, since I don't know what criteria to review this for.\r\n\r\nI think none of us have clear criteria yet, so any comment would be appreciated. But if you feel you're too much out of the loop to comment, don't worry ;-)	2018-05-25 08:01:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693612	\N	@sgoggins said:\r\n> Making sure I understand the pattern laid out by this pull request. Its the first of its kind, and will set a pattern we should all follow (or follow with tweaks maybe?)\r\n\r\nThis is the first intention to implement one of our metrics, as much precisely as possible, while showing at the same time the different choices that can be made (eg, counting merge commits or not).\r\n\r\n> I am thinking about how and to what extent we might want to explicitly or implicitly make the assessment of pull requests in this repository digestable by non-technologists.\r\n\r\nI think we could have like two kinds of prs: one more "general", for description of metrics, for example; and another one more specific, for their implementation. If we want to have detailed decriptions of the metrics, and reference implementations, I guess we need the latter. If we want "human readable" text for defining everything, I guess we need the former. This pr would be an example of the latter. \r\n\r\n> Practically, I also confess I don't know how to easily clone the notebook and run it inside of local instance of the repository systematically. \r\n\r\nDon't worry, I'm including some text in the notebook itself about how to run it. If you feel you need more guidance, just let me know.\r\n\r\nYou can also see the notebook, already executed (with results) [in the branch in my original repo](https://github.com/jgbarah-chaoss/wg-gmd/blob/count-commits/examples/Code_Commits.ipynb).	2018-05-25 08:09:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693613	\N	Hi @aswanipranjal, you're right :) \r\n\r\nThe way that this has evolved as been for us to capture the metrics that people would like to see (even if there is not necessarily a known implementation). In essence, we have cast a wide net to listen to what people would like. \r\n\r\nThat said, as work in places like the GMD workgroup find ways to implement in any respective technology (GL, Augur, Kibble), they can update the metric template. 	2018-05-13 12:09:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693614	\N	@germonprez, it is a wide net indeed :P I am also trying to implement them in manuscripts according to my understanding. I'll update on them once I have a better understanding and I solidify my ideas.	2018-05-13 14:30:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693615	\N	As we commented today in our follow-up meeting, please open separate issues for each of the metrics you feel need more definition, and we can work in them. Please, mention this issue in them, so that we can close this one when we're done with all of them.	2018-05-16 17:23:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693616	\N	Since all child issues are closed, I think we can close this one as well. Please reopen if you feel that's needed.	2018-10-31 11:19:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693617	\N	Some time ago we decided to work in the focus area file, and move the names of the metrics to the "new" naming when they were linked from it. Anyway, most of the "wrong" metrics are empty templates, so we could revisit this decision and get rid of them, if we consider that's better.	2019-05-21 22:39:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693618	\N	Complete	2019-08-14 14:49:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693619	\N	This request looks good to me, I approve it.	2019-06-05 14:44:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693620	\N	Re-reading the [CONTRIBUTING file](https://github.com/chaoss/wg-evolution/blob/master/CONTRIBUTING.md), maybe it already describes the process of how to propose metrics, and how to accept, with enough detail. If any, I would suggest to modify it, instead of creating a new file.\r\n\r\nThat do you think?	2019-05-08 15:27:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693621	\N	I think there should be a single file for all WGs that describes this process. What is here is really about an external person wishing to bring something forward. I think that the process by which a metric is released will be slightly different. I'll put such a document in the Metrics repo. 	2019-05-08 17:43:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693622	\N	@germonprez, sorry, I didn't understand. Do you mean that the `CONTRIBUTING.md` file in this repo should remain as such, and that we should have a description of the release process in the metrics repo? Or something else?	2019-05-08 22:18:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693623	\N	@GeorgLink : This is trying to solve the problem of people in working groups having to go to 2-5 different places in order to contribute. I think a little redundancy is helpful because we want people who are not on the calls to contribute. Even though I am on many calls, I still find it sometimes unclear how the different groups will decide metrics are ready to release. We actually left that to the working groups explicitly, I believe. I am fine with this document going away at some point, but right now I think we have too many places to look for important information. 	2019-05-09 04:12:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693624	\N	@jgbarah : I think as long as we distinguish between the contributing process and the releasing process for metrics into "these are metrics we actually worked out" view, and how we make the transition from metrics approved in the repository to metrics that we release clear, it works for me ... I would like to make a push for developing metrics, and some basic standard for saying, these are "ready to release" and "these are not". \r\n\r\nSome aspect of the CHAOSS community has been reticent to "release" the metrics we approved thus far, so it "feels" like there is some standard or check beyond contributing that is expected. Perhaps not, and if not, then the contributing doc with a few more words might do the trick. 	2019-05-09 04:23:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693625	\N	Here is a draft for articulating the criteria for the release of metrics from a WG. \r\n\r\nAs WGs prepare metrics for release they should meet the following criteria: \r\n\r\n1) The WG has a defined focus area with goal within which the metric resides\r\n2) The metric answers a specific question associated with respect to the focus area \r\n3) The metric has a detailed metrics page associated with it. For example, a page that provides: \r\n\r\n1. Description\r\n2. Use Cases\r\n3. Formula\r\n4. Sample Filter and Visualization\r\n5. Sample Implementation\r\n6. Known Implementations\r\n7. Test Cases (Examples)\r\n8. External References (Literature)	2019-05-09 11:09:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693626	\N	> Here is a draft for articulating the criteria for the release of metrics from a WG.\r\n> ...\r\n\r\nThanks for the summary, @germonprez. Maybe I was too quick: I was not thinking on metrics that didn't have all of this. I was mostly thinking of metrics that had all of this, but maybe didn't have the consensus of the wg, which is something that up to now didn't happen, because of the discussion in issues, and the peer review process.\r\n\r\nI'm ok with your proposal, and I agree with you that it should be in the metrics repository, likely linked from somewhere (I suggest the `CONTRIBUTING.md` file) in each working group repository.\r\n\r\nWRT the template for the metric, if we want to specify one, i suggest that we follow the one in the "ready to release" metrics in this wg, just because we had the opportunity to flesh out and complete a bit previous templates.\r\n\r\n	2019-05-09 11:19:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693641	\N	I doubt the below metrics have a file but the link is broken. I have corrected the link beside it \r\n\r\n| Metric with broken link | Correct link |\r\n| --- | --- |\r\n| [Lines of Code Changed](https://github.com/chaoss/wg-gmd/blob/master/metrics/code-lines-of-code-changed.md) | https://github.com/chaoss/wg-gmd/blob/master/metrics/Code_Changes_Lines.md |\r\n| [New Contributors of Initiated Code Reviews] | https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-requests-code-reviews-contributors-new.md |\r\n| [Closed Issues](https://github.com/chaoss/wg-gmd/blob/master/metrics/issues-closed.md) | https://github.com/chaoss/wg-gmd/blob/master/metrics/Issues_Closed.md |\r\n\r\nPlease correct me if I am wrong.	2019-04-11 02:58:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693642	\N	The below files look the same, I would like to learn if there is any under depth meaning of this as I see @jgbarah comment over there\r\n\r\n> What is the number of persons contributing with reviews of code for the first time? this is currently the same as pull-request-code-reviews-new\r\n\r\n- [pull-requests-code-reviews-contributors-new.md](https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-requests-code-reviews-contributors-new.md), [pull-request-code-reviews-new.md](https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-request-code-reviews-new.md)	2019-04-11 02:59:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693627	\N	> @jgbarah : I think as long as we distinguish between the contributing process and the releasing process for metrics into "these are metrics we actually worked out" view, and how we make the transition from metrics approved in the repository to metrics that we release clear, it works for me ... I would like to make a push for developing metrics, and some basic standard for saying, these are "ready to release" and "these are not".\r\n\r\nOK, I see. Then, maybe what @germonprez suggests is good enough in this direction?\r\n\r\n> Some aspect of the CHAOSS community has been reticent to "release" the metrics we approved thus far, so it "feels" like there is some standard or check beyond contributing that is expected. Perhaps not, and if not, then the contributing doc with a few more words might do the trick.\r\n\r\nYeah, I think i see the general feeling.\r\n\r\nSo, i suggest that we have two texts:\r\n\r\n* One would be project-wide, along the lines @germonprez comments, likely in the `metrics` repo. It would mention the minimum criteria for a metric to be "releaseable" (if that is a word ;-) ).\r\n* Another one would be specific for each working group, in the `CONTRIBUTING.md` or in  a spearate file (in this case, i suggest the name `RELEASING.md`, just because I guess that's a standard practice), defining the specific process the working group uses to decide that a metric is considered as released.\r\n\r\nIf you all agree with this, maybe we should widen the discussion about the first item to the whole CHAOSS community (I suggest preparing a pull request to the metrics repo, and then proposing the discussion, to focus the matter), and we just merge this pr (maybe renaming the file to `RELEASING.md`) as a first iteration of a wg defining "formally" the process for approval.\r\n\r\nWhat do you think?	2019-05-09 11:26:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693628	\N	Hi @jgbarah and thanks for this. I'll get together a releasing.md file for the metrics repo and issue the pull request today, spelling out the points above. You can then circulate to the wider community. Sounds like a plan. 	2019-05-10 11:10:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693629	\N	I saw the releasing.md file during the CHAOSS weekly meeting today. Can we close this pull request, and if needed continue refining that file?	2019-05-21 22:32:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693630	\N	We agree in closing during our biweekly meeting.	2019-06-05 14:41:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693631	\N	@kevin, I see a new push, but my comments were not addressed. If that's your preference, please comment, and I will accept the change, and later propose the change as I suggest in a separate pr.	2019-05-09 15:36:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693632	\N	Sorry, I hadn‚Äôt seen your comments until after the push. I am looking at them now.\n\nCheers, \n\n\nKevin Lumbard (he/him/his)\nUniversity of Nebraska at Omaha\nPKI 367\n\n> On May 9, 2019, at 10:36 AM, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> @kevin <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_kevin&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=CJJIq-8cDBwNq8GgmnfFvF817XADyNTV2iLgXbb0oJ4&s=90jwOJgDFttoCv16URz3sd9zMehZAnnl1soEX83o7ss&e=>, I see a new push, but my comments were not addressed. If that's your preference, please comment, and I will accept the change, and later propose the change as I suggest in a separate pr.\n> \n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_chaoss_wg-2Devolution_pull_146-23issuecomment-2D490955258&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=CJJIq-8cDBwNq8GgmnfFvF817XADyNTV2iLgXbb0oJ4&s=3jv0d5XTSEsZoFX_-PRi9NNXGIf1U2Vt9QSgeM696IQ&e=>, or mute the thread <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACQNBNPY4CZUMIHIBY3RHK3PURAJTANCNFSM4HLSNT5A&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=CJJIq-8cDBwNq8GgmnfFvF817XADyNTV2iLgXbb0oJ4&s=EFbZI1ytMyVrRcM4tTadvs6RfLT_lJJqgGsiId1sNMg&e=>.\n> \n\n	2019-05-09 15:38:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693633	\N	I agree, the meeting notes link on readme should point to the meeting_notes.md. I made the change. I also changed the wording on the google doc link and hid the URL. I think this addresses your comments. I didn't include a link to the google doc on the readme as I think it may be redundant. If you want to include it I will submit another patch.	2019-05-09 15:52:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693634	\N	After switching links from the google doc to the GitHub archive, where will people find the link to the google doc when they join a call?	2019-05-09 19:39:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693635	\N	@GeorgLink I think that's in the file:\r\n\r\n> We use [Google Notes](https://docs.google.com/document/d/1fgMT5onwvNQE6b4gPWE7oSPHRvb9q1z6XEbD51EtCFg/edit#) to take the meeting minutes. Notes are captured by the entire group and a volunteer acting as the primary scribe.	2019-05-21 22:36:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693636	\N	> Concerning proposals, is there a time frame to consider? For example, we mention ... during a certain time period, which is?\r\n\r\nSorry @foundjem, I don't understand your question. Are you thinking a focus area needs to be described differently? Maybe a different issue or pull request would be good for that.\r\n\r\nThis pull request is not about framing focus areas but about how they are presented in the README. 	2019-04-24 15:14:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693637	\N	Fixed merge conflict.\r\n\r\nOdd. I don't mean to edit the code_development.md file, only the README.md.	2019-04-24 17:30:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693638	\N	@jgbarah Can you review? I don't have the ability to assign or request reviewers.	2019-04-12 16:26:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693639	\N	@jgbarah @sgoggins \r\nI will be asking about the files here. You can decide what to do about such files and lets see what we can do it. :smiley: 	2019-04-10 19:30:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693640	\N	These metrics in the focus_areas doesn't have a `.md` file in metrics (not even the template)\r\n\r\n- [Pull Request Merged](https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-requests-merged.md)\r\n- [Pull Requests Closed](https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-requests-closed.md)\r\n- [Pull Requests Code Review](https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-requests-code-reviews.md)\r\n- [Open Issues](https://github.com/chaoss/wg-gmd/blob/master/metrics/issues-open.md)\r\n\r\nIf you are planning to create them later maybe during the GSoC period, I am ok with it. You can use this issue as a reference at that time but if you are likely to close this asap then I would like to send a PR to this issue.	2019-04-11 02:57:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693681	\N	Resolved in #150. This issue can be closed now.	2019-05-22 14:51:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1693767	\N	add proposals and reviews	2019-04-10 15:04:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693643	\N	Hey @vchrombie, as you know this project is still under development, and so the files would be made in place once the implementation for those metrics is also done. Till then I don't think adding metric files by including only the headers will do any good. Also considering the fact that this is the case for only a few metrics :slightly_smiling_face:\r\nAnyways, this was just my opinion. 	2019-04-11 03:56:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693644	\N	Ok, @harshalmittal4. Thanks for the comment.\r\n\r\n> If you are still discussing and working on the metric, then you can close this issue. But, if it is like a mistake, I can send a PR fixing it.\r\n\r\nI too felt the same, maybe we can use this issue as a reference at that time.\r\n\r\nIf you anyone feels this as unnecessary, please let me know. I am ok with closing this issue.	2019-04-11 04:01:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693645	\N	>I too felt the same, maybe we can use this issue as a reference at that time.\r\n\r\nAgreed, this can be discussed that time :)	2019-04-11 04:22:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693646	\N	@jgbarah @sgoggins \r\nany comments on this issue?	2019-04-16 13:09:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693647	\N	I would just let this as it is now, if needed explaining in the README.md file that we're still in the process of producing metrics, which means that many of the metrics found in focus area files are still not detailed, and don't have their own file.\r\n\r\nDo you think you could produce such a text for the README.md file?\r\n\r\nI'm labeling this as help wanted, just in case someone wants to produce that pr.\r\n\r\n(And of course, thanks a lot for raising this issue)	2019-04-23 22:15:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693648	\N	> I would just let this as it is now, if needed explaining in the README.md file that we're still in the process of producing metrics, which means that many of the metrics found in focus area files are still not detailed, and don't have their own file.\r\n> \r\n> Do you think you could produce such a text for the README.md file?\r\n\r\nIt would be good, I can produce a PR if you are Ok with that.	2019-04-24 05:44:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693649	\N	> It would be good, I can produce a PR if you are Ok with that.\r\n\r\nYes, please, go ahead.\r\n	2019-04-24 12:18:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693650	\N	I agree that we should simply make a note in the README.md that metrics without full definitions are great places for newcomers to start, and that we are leaving them initially with a template so that newcomers will have the structure "at the ready" and be able to structure the definition as we intend. \r\n\r\nI think we might also consder opening issues for each metric that is empty 	2019-04-24 15:05:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693651	\N	Sorry, I couldn't attend the meeting. I went through the discussion in the minutes just now. I will produce the required PR.	2019-04-24 16:15:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693652	\N	> I think we might also consder opening issues for each metric that is empty\r\n\r\nMaybe we can do this while the GSoC coding time. We can open one issue for each metric for discussion, clarifications of doubts on the implementation of the metrics.\r\n	2019-04-28 16:45:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693653	\N	I just merged the PR. I guess we can close this issue, right?	2019-05-07 21:31:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693654	\N	@jgbarah ^	2019-04-10 15:32:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693655	\N	Actually had today a look at a project and discussed the efficiency on Agile environment by measuring tickets that are not completed in one but two sprints or extend over to various sprints due to bad planning, code (buggy), or architectural issues. Noticed also team churn aftermath in speed fluctuation. Poorly documented code and highly nested code also correlate to efficiency as they slow down development. Highly experienced developers that are tightly knit working together for a long time tend to develop strategies and compensate even the flux of changing teams, but that is not so much the case on projects where the teams are in constant flux with few "residents".	2019-04-10 12:20:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277320
1693656	\N	Thanks a lot @rsanchez-seerene Some of the metrics you mention, even when I agree they are correlated with efficiency, tend more to be related to facts that help the project to be more efficient, with independence of the processes that it follows. In this set of metrics, I think it is more relevant to have metrics more specifically measuring the actual performance of processes, but that's only my opinion ;-) (this is mainly about metrics on code documentation, code nesting, etc.)\r\n\r\nThe metric on tickets not completed in a single sprint is interesting. I wonder if measuring the duration (time-to-close) of issues  could be good enough, given that not always people are using agile, and not always it is easy to know which issues were open for which sprint. \r\n\r\nThe metric about "experienced developers working together" could be considered in the "community growth" focus area. I also think it is correlated with efficiency, but still, i don't see it as a primary measure for efficiency, but of a factor that could (and very likely do) impact on efficiency.\r\n\r\nWhat do you (all) think?	2019-04-23 18:30:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693657	\N	First pull request for a metric for this goal: #151.	2019-05-21 23:14:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693658	\N	We need to discuss this as one of the next metrics we discuss at the next meeting. 	2019-08-14 14:56:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693659	\N	Efficiency is now a focus area, so we are closing this issue. 	2019-10-10 15:12:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693660	\N	please have a look @valeriocos @jgbarah @GeorgLink 	2019-04-08 14:43:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693661	\N	Thanks for sharing your thoughts. I defer to others.	2019-04-08 15:27:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693662	\N	I like the idea @Polaris000 so +1 from my side :) \r\nLet's wait for @jgbarah feedback.	2019-04-09 07:47:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693663	\N	I like the idea too. In fact, it would be great doing that, and including a set of projects as a part of a kind of "test projects", so that we can run periodically the reference implementations on them.\r\n\r\nWRT the approach, I'm not sure which one is better. Maybe extracting a script from the notebook (also, designing the notebook in a way that theg script can be extracted) would be the way to go, if we want to be able of automating the whole process, assuming a notebook with a reference implementation is available.\r\n	2019-04-09 16:55:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693664	\N	A travis-CI build function would make *some* sense, but I think we should consider this a pilot study for all working groups. 	2019-04-10 14:42:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693682	\N	Thx!	2019-05-22 14:57:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693665	\N	If the metric reference implementation is tightly coupled to the metric definition, then I think that will ensure there is no drift over time. It will also limit coupling of code to a specific data pipeline. Such that we have a clear enough and abstract enough clarity about necessary inputs that testing could be implemented through "any" pipeline. \r\n\r\nThis proposal is to treat the pipeline for getting test data as abstract as well, so that tests could be written using a pipeline appropriate for the metric, or familiar to the person who is proposing the metric definition. \r\n\r\nTight coupling between these tests and one, specific implementation of pipeline would, I think, make this approach more brittle and less likely to be extended to other working groups.  If this process is undertaken with the objective of it being only for this working group I think we are at risk of isolating our work from the rest of CHAOSS, which now has four other working groups. 	2019-04-10 14:54:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693666	\N	Thanks for the reply! I had a look at the discussion on youtube (since I could n't attend the call myself) just so that we are all on the same page. 	2019-04-11 07:15:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693667	\N	Anyone willing to propose a more concrete implementation of this, or we better close the issue for now, and deal with this idea at a later stage?	2019-04-23 22:17:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693668	\N	Since the testing part is still unsure for the pipeline (which repositories to be used as test references), may we still go ahead with the pipeline idea which would enable us to evaluate more metrics at once and for more then a single repositiory; also this would ease the process of using the reference implementations of the metrics. \r\nThe testing could be added to the pipeline once this is done. \r\n\r\nAlso, the conversion from jupyter notebooks to python scripts is automated (using Ipython magic command), and the scipt is updated everytime the notebook is run, so it wouldn't be an issue.\r\n@Polaris000 \r\n\r\nJust a thought, please see, else this could be closed for now as required.\r\n@jgbarah, @sgoggins, @valeriocos, @GeorgLink 	2019-04-24 13:03:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693669	\N	Thanks for the reply @harshalmittal4!. My main intention for this idea was to automate the task of evaluation, rather than testing. \r\n> Also, the conversion from jupyter notebooks to python scripts is automated (using Ipython magic command), and the scipt is updated everytime the notebook is run, so it wouldn't be an issue.\r\n\r\nYes, this will make the task much easier.\r\n\r\nI think it would be a good idea if we run the metric evaluation as a notebook, rather than a script. \r\nThe ipython structure (input and output cells) is much easier to follow, especially when analyzing charts, since they appear "in context".	2019-04-24 13:09:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693670	\N	This issue seems to have different opinions how how to proceed and there are fine arguments on both sides. Until this issue comes up again, I'm closing this issue. 	2019-08-28 14:59:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693671	\N	I think this has already been implemented as part of the GSoC project of this year...	2019-08-28 16:09:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693672	\N	@GeorgLink Please see.	2019-04-08 14:33:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693673	\N	In general, I prefer to define issue resolution in terms of "issues fixed vs issues closed with no fix". But that is difficult, I know.\r\n\r\nSince "Issue Resolution Efficiency" is in the "Issue Resolution" focus area, which is still not structured according to GQM (goal, question, metric), maybe we should start to refine goals for it, and then, in that context, find a good/useful definition for the metric.\r\n\r\nAll of this said, if we're to base the metric on abandoned issues, we should (I think) define "Abandoned Issues" as a metric, maybe based on time with no change in the issue, as you suggest. That time could be a parameter in that case. But I would rather call such a metric something like "Inactive Issues", instead of "Abandoned Issues", because "abandoned" seem to imply a decision to abandon the issue (such as "Abandoned patchsets" in Gerrit, for example).	2019-04-09 16:53:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693674	\N	@jgbarah : I think abandonment is perhaps valenced negatively as I think your comment observes. Its also more clear than "inactive". I am unsure if abandonment is a decision or if it is kind of an expression of latency. Inactive could be parameterized as @parthsharma2 and Jesus suggest. 	2019-04-10 14:58:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693675	\N	What about:\r\n- **Inactive Issue**: An open issue that has had no activity (comments, references, tags updated, etc) in the past X days.\r\n- **Abandoned Issue**: An open/closed issue that has been tagged as "Abandoned", "Stale", etc. or is no longer relevant and has been closed or tagged as abandoned by the maintainers. [Maybe have parameters to let the maintainer decide what an abandoned issue is]\r\n	2019-04-10 17:00:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1693676	\N	For "Inactive issues", I agree. I would use a definition such as "An open issue that has had no activity (comments, references, tags updated, etc) during X days previous to the snapshot time" (the metric would be defined for a snapshot time, that can be "now", or some other moment in the past.\r\n\r\nFor "Abandoned Issues" I don't think that's useful. It is rather strange that a project label an issue as "Abandoned", "stale", etc. Instead, either they do nothing, or they close the issue... which means we have no way of telling apart issues that were close because of whatever other reason, or because of abandonment.	2019-04-23 22:23:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693677	\N	Add a sentence to the "inactive issues" metric that some projects use the term "abandoned issues" ... explain the abandonment concept there. Optimize for SEO so that others can find it via search.\r\n\r\nThis issue can be closed once the explanation was added.	2019-04-24 15:00:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693678	\N	@GeorgLink currently there is no metric defined for "abandoned issues" or "inactive issues." "Abandoned issues" is mentioned in the "[Issues resolution efficiency](https://github.com/chaoss/wg-evolution/blob/master/metrics/issues-closed-resolution-efficiency.md)" metric.\r\n\r\nSo should I create a document defining "Inactive Issues"? And also should I change "abandoned issues" to "inactive issues" in "[Issues resolution efficiency](https://github.com/chaoss/wg-evolution/blob/master/metrics/issues-closed-resolution-efficiency.md)"?	2019-04-30 13:32:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277113
1693679	\N	@parthsharma2 I realize my comment was a cryptic because it did not state that I was documenting the discussion during the weekly call. \r\n\r\nWe want both terms "inactive issues" and "abandoned issues" on the same page, because both are similar and may be found through Google. 	2019-04-30 14:13:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693680	\N	Could somebody write a note in `issues-closed-resolution-efficiency.md`, for the moment when we work with this metric, with the text that @GeorgLink suggested? That way we could close this issue.	2019-05-07 21:39:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693684	\N	We need to work on that. But in any case, please remember that we're working sort of top-down, from a focus area, to the (knowledge or actionable) goals for that focus area, to the questions that may help to reach those goals, to the metrics that can help to answer those goals. Therefore, we need to consider this (organizations and subprojects) in the context of the relevant focus area / goal / question.\r\n\r\nI would close this for now, but at the same time, find out in which focus areas organizations and subprojects are relevant, and reopen the discussion in that context. 	2019-04-09 16:46:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693685	\N	Thanks for the reply! \r\n> I would close this for now, but at the same time, find out in which focus areas organizations and subprojects are relevant, and reopen the discussion in that context.\r\n\r\nWill do!	2019-04-09 17:04:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693686	\N	@jgbarah  @sgoggins @GeorgLink,\r\nPlease review for the required changes if any.	2019-04-04 05:39:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693687	\N	@jgbarah, @valeriocos please see for changes.	2019-04-05 09:31:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693688	\N	@jgbarah I had a look at the PR and LGTM, however your feedback is needed to be sure that everything is OK.	2019-04-05 10:27:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693689	\N	fixes #83 	2019-04-08 13:47:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693690	\N	Hey @GeorgLink, @valeriocos, please review, if this looks good now.	2019-04-08 16:47:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693691	\N	Thanks for fixing the LICENSE file change.\r\n\r\nIn the README, how about filling in or removing empty sections? The information `To be updated.` is not valuable by itself. A better way might be to create an issue for each of these sections and add them to the readme only after content was developed.	2019-04-08 17:05:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693692	\N	Hey @GeorgLink, I think it is better to comment out the empty sections instead of removing them, to keep track of adding them in the same order once the content is developed. Is this fine or shall I modify the PR to remove the comments.	2019-04-08 19:07:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693693	\N	> Hey @GeorgLink, I think it is better to comment out the empty sections instead of removing them, to keep track of adding them in the same order once the content is developed. Is this fine or shall I modify the PR to remove the comments.\r\n\r\nI'd be okay with it. I defer this decision to the maintainers of the repository. \r\n\r\nThank you for continuing to work on this.	2019-04-08 20:59:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693694	\N	@valeriocos, @jgbarah, review required as you get time :smile: 	2019-04-09 07:32:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693695	\N	lgtm! thank you @harshalmittal4 	2019-04-09 07:44:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693696	\N	To be honest, I'm no longer sure what we're trying with this pull request. Comparing with the D&I README, I see sections that are the same, and sections that are in one of them, but not in the other. In the end, maybe there is a tension between the [Standard Readme](https://github.com/RichardLitt/standard-readme) and the one in D&I, which only partially resembles it.\r\n\r\nTo avoid further discussion, and have a useful README, i suggest accepting this pr (because I think we're starting to get lost in the details), and then, in a separate pr, make it closer to the D&I README, to have some more uniform READMEs in CHAOSS.\r\n\r\nPlease, comment on this, or just merge this pr and we start working in the new one.	2019-04-09 17:24:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693697	\N	Hey @jgbarah, this PR tries to follow the structure proposed in #83, omitting the sections for which content is not present for now (I have commented out those headings in Readme's markdown). I checked the D&I Working Group's Readme, it also tries to the adhere to the same structure except the fact that some sections are missing there too. I think thats why they appear non-uniform to us.	2019-04-09 17:36:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693698	\N	Thanks for the clarification, @harshalmittal4. Yes, I know about the proposal in #83, and I'm happy with it. But I have the feeling that maybe we're now in the middle between that proposal, the D&I Readme, and the original proposal on following some standard for Readme files...\r\n\r\nBut in any case, as I commented, I think we can just accept this pr, and follow on from here...\r\n\r\nThanks a lot for moving this forward, @harshalmittal4 	2019-04-09 21:25:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693699	\N	Yes sure @jgbarah whatever you feel good :)	2019-04-10 04:16:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693700	\N	I'm merging this, since nobody opposed, and I think it would be better to have this merged before our next meeting.	2019-04-09 17:28:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693701	\N	OK, I think we are keeping minutes in google docs now. 	2019-04-09 17:40:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693702	\N	@sgoggins, some days ago, we [closed an issue with this text](https://github.com/chaoss/wg-gmd/issues/100#issuecomment-474826374):\r\n\r\n> So, if I understood it well, during our last meeting we proposed that we will use Google Docs during the meeting for collaboratively writing the minutes, and then use the content of that document to produce a pull request, adding the text to meeting_notes.md.\r\n>\r\n> Am I right? Can we close this issue, if we have consensus on this?\r\n\r\nMaybe we closed the issue too quickly? If you don't agree, let's reopen the issue...	2019-04-09 21:19:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693703	\N	Can we close this?	2019-04-05 15:16:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693704	\N	Please have a look @GeorgLink 	2019-04-02 15:42:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693705	\N	> I'll leave this pr for a repo maintainer to merge.\r\n\r\nAny comment on my suggestion of having the details about the browser plugin in a separate file, maybe in the governance repo, linked from all the `CONTRIBUTING.md` files in repos? Just to make it more clear how to contribute (which is the spirit of the file) instead of how to use the browser plugin for signing (which is, in this patch, most of the file now).\r\n\r\nIf you want, I could accept this, and then propose this change (moving the browser content to another file) so that other repos can use the link.\r\n\r\nWhat do you think?	2019-04-03 15:37:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693756	\N	I agree that we should have appropriate licensing and little overhead. @tobie and @germonprez  summarized the debate well.\r\n\r\nTo provide background and if I remember correctly, we have MIT for the metrics repositories, because (1) we were expecting sample code and wanted it to be licensed liberally, and (2) MIT is liberal enough to apply to documentation such as we are creating in describing metrics. Rather than have CC for the docs and MIT for code snippets, we have one single license.	2019-03-21 13:47:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693706	\N	> Any comment on my suggestion of having the details about the browser plugin in a separate file, maybe in the governance repo, linked from all the CONTRIBUTING.md files in repos? Just to make it more clear how to contribute (which is the spirit of the file) instead of how to use the browser plugin for signing (which is, in this patch, most of the file now).\r\n\r\nThe DCO sign-off is an important part of how to contribute. Using the browser plugin makes it easier to contribute and linking to it in a different file might make it harder to find this helpful information. I suggest including it in the CONTRIBUTING.md as proposed by this pr.	2019-04-03 15:53:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693707	\N	> The DCO sign-off is an important part of how to contribute. Using the browser plugin makes it easier to contribute and linking to it in a different file might make it harder to find this helpful information. I suggest including it in the CONTRIBUTING.md as proposed by this pr.\r\n\r\nOK. Let's try.	2019-04-03 22:28:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693708	\N	Please sign your commit by typing the following in the commit description: \r\nSigned-off-by: Your Name \\<YourName@example.org\\>	2019-04-01 17:02:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693709	\N	After reading some literature on the subject (Thank you Tom) I can understand the context of Software Evolution as the encompassing name with finite development periods/activity/processes that have a Lifecycle.	2019-04-01 09:41:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277320
1693710	\N	- evolution\n- lifecycle\n- (activity)	2019-04-01 11:56:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693711	\N	1. Evolution \r\n2. Activity\r\n3. Lifecycle 	2019-04-01 17:22:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693712	\N	Evolution. 	2019-04-10 14:59:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693713	\N	Evolution	2019-04-10 14:59:35	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693714	\N	We decided the change in name during the latest meeting, based on the feedback here: Evolution. After a reasonable time seeing that nobody opposed, i changed the name of the repository, and accepted a patch changing the README.md file.\r\n\r\nThanks to all of you who participated!	2019-04-22 19:05:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693715	\N	I agree.\r\n@jgbarah?	2019-03-29 08:24:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693716	\N	Yesssss. That's an error, very likely because of too much copy&paste. Please, provide a fix if you want.	2019-04-01 11:12:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693717	\N	@sarvesh211999 are you working on this issue? 	2019-04-01 11:55:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693718	\N	Yeah.	2019-04-01 12:12:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693719	\N	@sarvesh211999 , can you close this issue as the corresponding pull request appears to have been merged?\r\n	2019-04-08 13:39:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693720	\N	@Polaris000 here is a neat little trick for automatically closing an issue when a pull request is merged: https://help.github.com/en/articles/closing-issues-using-keywords	2019-04-08 13:46:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693721	\N	Thanks @GeorgLink for the information. Though I am aware of this feature and use it quite often myself, I think I am missing the point. Since I neither have write access to this repository nor am I the author of this issue, won 't it be impossible for me to close this issue?	2019-04-08 14:37:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693722	\N	Sorry for the confusion. I always like to point this feature out because anyone can write a comment on a pull request before it gets merged to automate the closing of issues.\r\n\r\nThis was for future reference, not for this particular issue.	2019-04-08 15:30:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693723	\N	I think this is potentially confusing. See comments on the related issue. 	2019-03-27 14:45:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693724	\N	After the discussion we had during our last weekly meeting, we decided to accept the change for now. The recently uploaded new version of the patch solves conflicts, and adds a file for tracking changes in metrics names.	2019-04-23 22:11:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693725	\N	closes #110	2019-04-24 15:05:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693726	\N	closes #101	2019-04-24 15:06:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693727	\N	Risk and value are new working groups and we agreed to merge this yesterday. 	2019-03-27 14:44:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693728	\N	Thanks for the comment. `Proposals_Accepted` is the total number of proposals that finished by accepting the proposed change. `Proposal_Acceptance` is the ratio of proposals that finished by accepting the change to the total number of proposals. I'm sorry the latter one is still not detailed (does not have its own page). We hope to work with it soon.\r\n\r\nPlease, close this issues if you feel the answer is dealing with your concern.	2019-03-27 13:15:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693729	\N	Thanks for the reply @jgbarah!.\r\n\r\n> Metric Proposal_Acceptance(Period): How many proposals are finally accepted.\r\n\r\nThis line from the code_development.md file does not talk about a ratio. I'll send a pull request if this has to be updated. Let me know.\r\n\r\n	2019-03-27 13:22:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693730	\N	Also, there is another metric defined under the goal of efficiency:\r\n> Summary metric: Proposal_Acceptance_Ratio(Period): Which fraction of new proposals are finally accepted?\r\n\r\nThis sounds quite similar to the definition you gave for `Proposal_Acceptance`.	2019-03-27 13:33:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693731	\N	OK, I see now. Sorry for my error: you're right, `Proposals_Accepted` in goal `Activity` should be the same as `Proposal_Acceptance` in goal `Efficiency`. Please, feel free to submit a pull request to fix that, and sorry for the noise.	2019-03-31 22:00:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693757	\N	> I will try to work on this during this week.\r\n\r\n@jgbarah, I can activate the DCO bot on the chaoss/wg-gmd repo. \r\nThis requires then all contributors to sign-off on their commits. No other change needed.\r\n\r\nI have piloted the DCO bot on the chaoss/governance repository and can report that it works well. The most trouble is if someone forgets to sign-off. I use a browser plugin to automate the sign-off in the browser when I use the GitHub UI. For a single commit locally, `git commit amend -s` adds the sign-off later.\r\n\r\nI propose a change to the chaoss/governance repo CONTRIBUTING.md to explain how to sign-off for DCO.\r\nhttps://github.com/chaoss/governance/pull/100/files	2019-03-21 13:53:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693768	\N	I've added it as a part of #119, following the suggestion by @sgoggins.	2019-04-23 22:25:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693732	\N	Thanks for the reply @jgbarah. I am not sure I perfectly understand what is to be done.\r\nWhen you said:  \r\n> Proposals_Accepted in goal Activity should be the same as Proposal_Acceptance in goal Efficiency.\r\n\r\nyou probably meant that both metrics should refer to the same thing. Since in the current version of the file, both metrics point to more or less the same thing (the reason for raising this issue in the first place), I could replace `Proposal_Acceptance` in goal `Efficiency` with `Proposals_Accepted` in goal `Activity` (having `Proposals_Accepted` in two places) since the former already has its own page.  \r\n\r\nOr I could do it the other way around (having `Proposal_Acceptance` in two places), which would ultimately mean creating another page for `Proposal_Acceptance`. \r\n\r\nI'll create a pull request to fix this issue. If what was supposed to be done is something completely different, please suggest those changes in the review.	2019-04-01 03:14:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693733	\N	Good catch, but I have an opened a PR this morning which has that change. :)\r\nhttps://github.com/chaoss/wg-gmd/pull/112/files#diff-a1da987b25a7d8953456d7e19057feeaL19	2019-03-24 11:00:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693734	\N	As @vchrombie said, already fixed in @112. Thanks anyway!	2019-03-24 22:56:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693735	\N	Sorry, didn't notice this was included in a previous pull request, sent only a few hours before mine!. 	2019-03-25 05:48:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693736	\N	No problem. Thanks anyway!	2019-03-25 08:50:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693737	\N	Merging, since nobody opposed.	2019-03-27 13:26:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693738	\N	This makes sense to me. I didn't even understand 'proposals' until you explained it here. Reviews is something I understand more :)	2019-03-20 19:03:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693739	\N	Very important concept, which reminds me the document control system and RFC processes: Submit for review, Pending review, Pending approval, release, obsoleted. However in this case the author can decline review comments/suggestions.   Disclaimer: The diagram below is not my property and it is only to illustrate the process.\r\n![ReviewProcess](https://user-images.githubusercontent.com/19904348/54718873-d2aa6400-4b5b-11e9-9f9c-e702bfe5f404.png)\r\n	2019-03-20 21:02:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277320
1693740	\N	So it seems like the inclination is for 'review'	2019-03-20 23:11:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693741	\N	Good. Thanks for the feedback. If there is no comments against, I will produce the pr changing this.	2019-03-20 23:34:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693742	\N	Pull_Merge_Request? \r\nForked_code_merge_request?\r\nI think the word "review" is confusing with regards to code reviews. 	2019-03-27 14:41:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693743	\N	Thanks for the feedback, @sgoggins. My comments on it:\r\n\r\n* Pull_Merge_Request: a bit longish, but also misses important systems, such as Gerrit, where the name has nothing to do with "pull request" or "merge request".\r\n* Forked_code_merge_request: not sure what "forked code" means in this context...\r\n\r\nBut, from a general point of view, why "review" is confusing when talking about code *reviews*? Maybe "Code_Review" would be more clear?	2019-03-27 16:33:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693744	\N	Any other comment about this?	2019-04-05 15:14:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693745	\N	what about "code_integration"? 	2019-04-10 15:02:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693746	\N	As related now to #119 	2019-04-24 15:04:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693747	\N	I will try to work on this during this week.	2019-03-20 13:16:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693748	\N	I'm confused as to how a DCO is appropriate for what is essentially non-code textual content. I'm also very confused about the licensing choice for this repository. Why MIT and not a CC-type license plus a patent attribution?\r\n\r\nThis might not be the right forum to discuss that, but the real value of the work that's happening here doesn't fall under copyright laws. That work is the description of the metrics, and those are patentable ideas. If anything, that's what should be protected here.	2019-03-21 11:14:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277322
1693749	\N	The DCO and licensing choice are what are described in the charter: \r\n\r\nhttps://chaoss.community/about/charter/\r\n\r\nThese were decisions that were prescribed at the start of the project -- as hosted at the LF. 	2019-03-21 11:19:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693750	\N	Yes. I read the charter. These feel like really strange defaults for such a project.\r\n\r\nImho, they make contributing more difficult for a community that isn't as technically savvy as pure developers without dealing with the only potential threat given the nature of the work produced: patents around metrics.	2019-03-21 11:25:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277322
1693751	\N	I hear your point on the overhead and I share the same concern. There's just not much we can do about this -- without modifying the charter. I can re-start a conversation with legal but I think that's the only path right now. 	2019-03-21 11:29:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693752	\N	Doesn't requiring a DCO prevent any contribution from the web interface? If that's the case, I think it's worth revisiting the legal aspects.	2019-03-21 11:31:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277322
1693753	\N	It wouldn't. However, it would require manual entry of a signed-off line into a commit. 	2019-03-21 11:48:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693754	\N	I could have read the initial message from @GeorgLink and avoided that last exchange. Apologies. In that case, whoever is going to do the work should make the call. I'm happy to sit on a call with legal to discuss the real needs of this project given what's actually produced, and help carry out the charter changes this would induce, but I can't be the one initiating this.\r\n\r\nSo if this is something that bothers you sufficiently to do something about, I'm happy to help.	2019-03-21 11:53:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277322
1693755	\N	Sounds good. Thanks @tobie. I'm always in search of ways to work with the needs at the LF and community while at the same time managing the overhead in the project. 	2019-03-21 13:07:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693758	\N	We discussed this in the meeting and agreed to accept it into our working group. 	2019-03-27 14:39:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693759	\N	Great. DCO bot is active üëç 	2019-03-27 14:39:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693760	\N	Thx @GeorgLink !!	2019-03-29 08:19:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693769	\N	@jgbarah, @sgoggins, @klumb \r\nif there is anything else that needs to be added to name_changes.md (not sure whether to add the names of the existing metrics), let me know and I'll update it there.	2019-04-24 12:42:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693770	\N	I think we can close this now, after merging #119 which includes a first version of that dictionary.	2019-05-07 21:40:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693771	\N	I still prefer to keep using the [meeting_notes.md file in the git repo](https://github.com/chaoss/wg-gmd/blob/master/meeting_notes.md), to avoid having yet another system to deal with (Google Docs). But if most of you think this is going to be better, i won't oppose.\r\n\r\nIn any case, in case we're moving to Google Docs for minutes, we need to define how/whom we're going to grant access to modify the corresponding files.	2019-03-06 16:41:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693772	\N	FYI: For the CHAOSS weekly minutes and the D&I WG minutes, edit rights are\nopen to the public. To have an unchanging history, we copy-paste the\nminutes as emails on the mailing list.\n	2019-03-06 17:43:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693773	\N	@GeorgLink, maybe this could be the way. I would just include the resulting minutes in a file in git, in addition to sending it to the mailing list (or maybe, just sending the link to the file could be enough). This could be quite similar to what you are doing now for CHAOSS and D&I weekly meetings, but also keeping that log file that could be more convenient for finding old decisions or discussions than the mail archive...\r\n\r\nWhat do you think, could this be good enough for everybody?	2019-03-06 22:36:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693774	\N	@jgbarah, I can appreciate the Markdown file in git. \r\n\r\nFYI: Google doc has an add-on that exports to Markdown formatting.	2019-03-06 23:04:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693775	\N	Hi @jgbarah,\n\nThis was the point I brought up in the meeting. The method of taking the notes doesn‚Äôt matter for how they are archived. Because google doc has a markdown plugin, it would be very easy to take the notes in google docs, email them and archive a copy on the repo. \n\nCheers, \n\n\nKevin Lumbard (he/him/his)\nUniversity of Nebraska at Omaha\nPKI 367\n\n> On Mar 6, 2019, at 5:04 PM, Georg J.P. Link <notifications@github.com> wrote:\n> \n> @jgbarah <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_jgbarah&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=sRPnV4JJAyy0u0Y9_f_2zqFL2nxuoFEOOzxTO1bueT8&s=4exac2uWJXlJaQvMJa9SOyWewVerAaSrA5Fa8M0bq-g&e=>, I can appreciate the Markdown file in git.\n> \n> FYI: Google doc has an add-on that exports to Markdown formatting.\n> \n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_chaoss_wg-2Dgmd_issues_100-23issuecomment-2D470313161&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=sRPnV4JJAyy0u0Y9_f_2zqFL2nxuoFEOOzxTO1bueT8&s=yWptSGyMg9PE_w97QYni8FKU0nkqXN3E5M1X3uTtSfo&e=>, or mute the thread <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_AKDQteFyuOFdwuM1vUExN9AI-2DeIzfinDks5vUEmUgaJpZM4bhLzo&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=sRPnV4JJAyy0u0Y9_f_2zqFL2nxuoFEOOzxTO1bueT8&s=CmudhLmxsIFz4Rb-jxyXIZG8RYafkLze97llPbEVECU&e=>.\n> \n\n	2019-03-07 14:39:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693776	\N	So, if I understood it well, during our last meeting we proposed that we will use Google Docs during the meeting for collaboratively writing the minutes, and then use the content of that document to produce a pull request, adding the text to `meeting_notes.md`.\r\n\r\nAm I right? Can we close this issue, if we have consensus on this?	2019-03-20 13:23:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693777	\N	Yes!\n\nOn Wed, Mar 20, 2019 at 6:23 AM Jesus M. Gonzalez-Barahona <\nnotifications@github.com> wrote:\n\n> So, if I understood it well, during our last meeting we proposed that we\n> will use Google Docs during the meeting for collaboratively writing the\n> minutes, and then use the content of that document to produce a pull\n> request, adding the text to meeting_notes.md.\n>\n> Am I right? Can we close this issue, if we have consensus on this?\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/wg-gmd/issues/100#issuecomment-474826374>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AAoDUISjUJ257dDjVPLYKKjQNiijESLcks5vYjZkgaJpZM4bhLzo>\n> .\n>\n\n\n-- \nMutual of Omaha Associate Professor\nInformation Systems\nCollege of Information Science & Technology\nUniversity of Nebraska Omaha\nhe / him / his\nhttps://goo.gl/E87KdK\n	2019-03-20 17:24:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693778	\N	Great! Closing this one, then...	2019-03-20 23:38:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693779	\N	Good points, @sgoggins! What about considering them in the details for the metrics (I mean, the file describing the metric) instead of at the focus area (questions, goals) level?\r\n	2019-03-06 15:29:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693780	\N	After #90 was merged, we still need to address these concerns. I'm leaving this issue open for not forgetting about that...	2019-04-23 22:26:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693781	\N	This issue will be revisited with the new metrics release. 	2019-08-14 14:55:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693782	\N	This looks good. 	2019-03-05 19:40:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693783	\N	Thanks, @klumb. Merging...	2019-03-06 13:01:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693784	\N	Thanks a lot, @sgoggins. Please have a look at my comments.	2019-03-06 13:24:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693785	\N	@sgoggins I know that you are assigned to this issue. But I want to ask, can I solve this issue?\r\nI want to give it a try as it is labeled as `good first issue`.	2019-03-04 02:31:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693786	\N	@vchrombie please go ahead!	2019-03-20 13:24:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693787	\N	There are few, very minor grammatical mistakes in the [CoC](https://github.com/chaoss/governance/blob/master/code-of-conduct.md). You can view the changes here https://github.com/chaoss/governance/compare/master...vchrombie:fix-typos-CoC\r\n\r\nIs it relevant?\r\nIs there any particular procedure to be followed to change it or a PR to the CoC of chaoss/governance works fine? 	2019-03-21 16:04:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693788	\N	Great find. Yes, a pull request to chaoss/governance would be the best way\nto help.\n	2019-03-21 16:28:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693789	\N	I think this can be closed now. \r\n@sgoggins 	2019-03-27 14:31:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693790	\N	We can close this since its merged. 	2019-03-27 14:32:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693791	\N	This is ongoing and we have made improvements. Closing. 	2019-03-27 14:36:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693792	\N	@kfogel any feedback?\r\n	2019-03-06 17:10:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693793	\N	Since we're having no feedback, I'm proposing to merge this anyway, and if needed, work later on the resulting files. Do you agree?	2019-04-22 19:07:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693794	\N	I agree.\n\n> On Apr 22, 2019, at 15:07, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> Since we're having no feedback, I'm proposing to merge this anyway, and if needed, work later on the resulting files. Do you agree?\n> \n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n	2019-04-22 22:29:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693795	\N	Merged as a first version of the use case. continue discussion in #48	2019-04-24 15:12:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693796	\N	New version, hopefully addressing @alpgarcia comments.	2019-02-25 14:50:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693797	\N	I merged the pull request. I do not see any of my comments as obstacles to progress, though we might open an issue for addressing them in the future. 	2019-03-06 11:57:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693798	\N	Hi @awaiken, thanks for submitting this issue. \r\nI am unable to duplicate this error. Could you paste the URL you are trying to access into the comments?	2019-02-20 15:12:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693799	\N	Ping @awaiken, can you say if you can still see this? Specific link, please.	2019-02-27 15:48:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693800	\N	Hello Jesus, I‚Äôm traveling this week but I‚Äôll try and replicate the error tomorrow and send you a screen shot.\r\n\r\n\r\nRegards,\r\n\r\nAndrew Aitken\r\nGM & Global Open Source Practice Leader\r\nm: 650-704-6321, in/opensourcestrategy/\r\nWipro Limited\r\n\r\n[http://marketing.wiprodigital.com/apps/wipro-esig/assets/images/logo-01.jpg]\r\n\r\n\r\n\r\nFrom: Jesus M. Gonzalez-Barahona <notifications@github.com>\r\nSent: Wednesday, February 27, 2019 3:48 PM\r\nTo: chaoss/wg-gmd <wg-gmd@noreply.github.com>\r\nCc: Andrew Aitken (Service Transformation) <andrew.aitken@wipro.com>; Mention <mention@noreply.github.com>\r\nSubject: Re: [chaoss/wg-gmd] 404 error (#89)\r\n\r\n\r\n** This mail has been sent from an external source. Treat hyperlinks and attachments in this email with caution**\r\n\r\nPing @awaiken<https://clicktime.symantec.com/3KX9id3y5FyJxfLBwaqkDAT7Vc?u=https%3A%2F%2Fgithub.com%2Fawaiken>, can you say if you can still see this? Specific link, please.\r\n\r\n‚Äî\r\nYou are receiving this because you were mentioned.\r\nReply to this email directly, view it on GitHub<https://clicktime.symantec.com/3BRMSTXizseFbgNt4TyM15z7Vc?u=https%3A%2F%2Fgithub.com%2Fchaoss%2Fwg-gmd%2Fissues%2F89%23issuecomment-467914759>, or mute the thread<https://clicktime.symantec.com/3EAcJw3W9oK94yZY9cDJf4w7Vc?u=https%3A%2F%2Fgithub.com%2Fnotifications%2Funsubscribe-auth%2FAfWerDewEQiUxBB4y1JLvpoXCUFTaL0Lks5vRqjAgaJpZM4a_lVj>.\r\n\r\nThe information contained in this electronic message and any attachments to this message are intended for the exclusive use of the addressee(s) and may contain proprietary, confidential or privileged information. If you are not the intended recipient, you should not disseminate, distribute or copy this e-mail. Please notify the sender immediately and destroy all copies of this message and any attachments. WARNING: Computer viruses can be transmitted via email. The recipient should check this email and any attachments for the presence of viruses. The company accepts no liability for any damage caused by any virus transmitted by this email. www.wipro.com\r\n	2019-02-27 16:31:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277323
1693801	\N	Great. Thanks! Telling in which page is the error, and which link in it is failing could be good enough. It seems we cannot find it ;-)	2019-02-27 19:53:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693802	\N	I think @awaiken is referring to the links to Risk and Value Focus areas in the README.md.\r\n	2019-03-09 05:21:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277315
1693803	\N	@jgbarah please have a look	2019-02-16 16:39:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693804	\N	Thanks! It would be worth exploring if `sort=False` (which is less time-consuming) is also ok (I think it is, but I'm not completely sure). I would appreciate if you can have a look and find out.\r\n\r\nBut for now, I'm merging this, since it is better than the current situation ;-)	2019-02-20 12:25:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693805	\N	Thanks for the reply. I'll find out	2019-02-20 12:28:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693806	\N	So first I tested the append method directly by timing the creation of a Code_Changes object for different counts as shown below:\r\n\r\n```python\r\nsort_true_times = list()\r\nsort_false_times = list()\r\n\r\ndef time_test(sort):\r\n    changes = Code_Changes('git-commits.json', sort)\r\n\r\nfor i in range(100):\r\n    sort_true_times.append(timeit.timeit("time_test(True)", setup="from __main__ import time_test", number=i))\r\n    sort_false_times.append(timeit.timeit("time_test(False)", setup="from __main__ import time_test", number=i))\r\n    print(i, end=" >> ")\r\n    \r\nplt.plot(sort_true_times, 'r')\r\nplt.plot(sort_false_times, 'b')\r\nplt.show()\r\n```\r\n\r\n\r\n**red -> sort=True\r\nblue -> sort=False**\r\n\r\nThe output:\r\n![image](https://user-images.githubusercontent.com/31214064/53288916-ba416680-37b4-11e9-9d10-fe7dae8d628c.png)\r\n\r\nNext, I checked for each class method, which were making use of self.df:\r\n```python\r\nsort_true_times = list()\r\nsort_false_times = list()\r\n\r\nchanges_true = Code_Changes('git-commits.json', True)\r\nchanges_false = Code_Changes('git-commits.json', False)\r\n\r\nfunctions1 = [\r\n                "changes_true.total_count()", \r\n                "changes_true.count(since='2018-01-01', until='2018-07-01')",\r\n                "changes_true.by_month()"\r\n             ]\r\n\r\nfunctions2 = [ \r\n                "changes_false.total_count()", \r\n                "changes_false.count(since='2018-01-01', until='2018-07-01')",\r\n                "changes_false.by_month()"\r\n             ]\r\n\r\nfor i in range(3):\r\n    sort_true_times.append(timeit.timeit(functions1[i], globals=globals(), number=500))\r\n    sort_false_times.append(timeit.timeit(functions2[i], globals=globals(), number=500))\r\n    print(i, end=" >> ")\r\n    \r\nplt.plot(sort_true_times, 'r')\r\nplt.plot(sort_false_times, 'b')\r\nplt.show()\r\n```\r\n\r\nThe output:\r\n0 -> total_count()\r\n1 -> count(since='2018-01-01', until='2018-07-01')\r\n2 -> by_month()\r\n\r\n\r\n**red -> sort=True\r\nblue -> sort=False**\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/31214064/53288969-ad714280-37b5-11e9-8226-c0786e866609.png)\r\n\r\n	2019-02-23 16:27:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693807	\N	Thanks for the detailed analysis!	2019-02-24 22:19:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693808	\N	Created this issue following discussion in weekly call. 	2019-02-12 17:16:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693809	\N	Can anyone have a look at this one, and maybe produce a pull request? In principle, it is a matter of adding the sections that could be missing, using (when necessary) the file in the D&I working group as a template. In a quick check, it is mainly the section "key focuses/roadmap" (which could just include a link to our roadmap file), and maybe "software work" (not sure about this one).\r\n\r\nBefore doing the pr, an analysis in a comment to this ticket, about the changes to do (by comparing with the D&I file, and the file linked in the description of this ticket) would be great (so that we can have a preliminary discussion, if needed).	2019-04-01 11:18:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693810	\N	Hey @jgbarah, I will take it and make the PR!	2019-04-01 11:28:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693811	\N	D&I has not changed the headings yet. Please find new headings in the\nGoogle doc shared on the mailing list a few weeks ago.\n\n>\n	2019-04-01 11:42:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693812	\N	@jgbarah, @sgoggins, @GeorgLink, \r\nFew questions regarding the update:\r\n1) What could be the appropriate content for the **Background** heading for the GMD working group, or shall I just put the heading for now?\r\n2) For the **Roadmap**, **Implementations** and **Use cases** headings, I suppose that I have to include the links to their files. Please correct me if I am wrong.\r\n3) What would comprise the discussion forum if it is to included, in the **Communications** heading.\r\n4) Where can I find the list of maintainers for the **Contributors** heading.	2019-04-03 16:38:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693813	\N	> Few questions regarding the update:\r\n\r\nHeadings without content can be omitted. The goal is a useful README.\r\n\r\n**Update:** D&I has an active pull request to update its README structure. \r\nhttps://github.com/chaoss/wg-diversity-inclusion/pull/172	2019-04-03 16:42:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693814	\N	Closing this one, since #132 addresses this (at least for now, i think).\r\n\r\nPlease feel free to reopen if you think otherwise.	2019-04-23 22:28:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693815	\N	Hello, I'm interested in this project and have been working on the microtasks. I would like to ask if like in the other GSoC ideas that is recommended to show the completion of some microtasks, on this project if I want to show them as well, may I create a repository and upload evidence like screenshots because there are no coding related tasks, like in this [issue](https://github.com/chaoss/grimoirelab/issues/182). \r\nThanks in advance for your response	2019-03-11 04:16:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277324
1693816	\N	Hi @ManuelLecaro : Please submit!	2019-03-27 14:35:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693903	\N	Thx! Merging...	2019-01-29 22:53:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693817	\N	@parthsharma2 contributed a pull request to augur. He communicated directly in the repository, which is my fault, not his. He accomplished to microtasks 0,2 & 3 with great effectiveness and understanding. 	2019-04-09 16:48:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693818	\N	Hello, I'm also interested in this project. I have contributed a few pull requests to augur, accomplished all microtasks and submitted my proposal. 	2019-04-09 17:23:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277114
1693819	\N	OK, @bing0n3 : we will evaluate your pull request. 	2019-04-09 17:41:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693820	\N	I think this is done by now.	2019-06-05 14:39:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693821	\N	@jgbarah I think the link for the *Python notebook with the\r\n[reference implementation for commits](https://github.com/chaoss/wg-gmd/blob/master/implementations/Code_Commits.ipynb).* is incorrect here. Did you meant to point at [https://github.com/chaoss/wg-gmd/blob/master/implementations/Code_Changes-Git.ipynb](https://github.com/chaoss/wg-gmd/blob/master/implementations/Code_Changes-Git.ipynb), instead? 	2019-02-08 10:41:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693822	\N	Yes, @aswanipranjal thanks for noticing. I'll change that.\r\n	2019-02-13 15:33:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693823	\N	Which metrics are we specifically talking about here? \r\nOnly [these metrics](https://github.com/chaoss/wg-gmd/tree/master/metrics) (present in wg-gmd repository)? Or is it something else?\r\n\r\nThough most metrics are consistent between the [chaoss/metrics repository](https://github.com/chaoss/metrics/tree/master/activity-metrics) , some are present as [archived metrics in the wg-gmd repo](https://github.com/chaoss/wg-gmd/tree/master/metrics/archived_metrics). What about such metrics?	2019-02-23 13:01:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693824	\N	We're in the process of defining the metrics in the [focus areas directory](https://github.com/chaoss/wg-gmd/tree/master/focus_areas). Have a look to those files, which are still work in progress. 	2019-02-24 22:26:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693825	\N	Produce one notebook per data source (git, GitHub/GitLab issues, GitHub pull requests / GitLab merge requests) showing a summary of the contents of that file\r\n\r\nFor a given repo we have to produce one notebook right ?? And in that we have to output number of commits, pull request open and merged ??\r\n\r\nIs this what is required for microtask0 or any else?	2019-02-27 23:33:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693826	\N	@sarvesh211999 \r\nTo keep everything tidy, you need to **produce a Notebook for each of the data sources that you gather the data for.**\r\n> Produce one notebook per data source (git, GitHub/GitLab issues, GitHub pull requests / GitLab merge requests) \r\n\r\nSo the repository that you create can have multiple Notebooks	2019-02-28 06:05:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693827	\N	Ohkkay. I will create a pull request and then you can review it. So if there are any changes I can make it.\r\nThanks for you help	2019-02-28 06:08:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693828	\N	@sarvesh211999 please go through this document to understand how to show CHAOSS what you have done: [https://github.com/chaoss/governance/blob/master/GSoC-interest.md](https://github.com/chaoss/governance/blob/master/GSoC-interest.md)	2019-02-28 06:11:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693829	\N	Yeah I was just asking whether it will be reviewed and responsed back if anything is missing ?	2019-02-28 07:19:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693830	\N	@aswanipranjal \r\nAfter analysis of how many data source I have to create pull request for Microtask0?	2019-03-02 01:31:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693831	\N	@sarvesh211999, I apoligize about the late reply:\r\n> Yeah I was just asking whether it will be reviewed and responsed back if anything is missing ?\r\n\r\n@jgbarah might be better suited to answer this.\r\n\r\n>  After analysis of how many data source I have to create pull request for Microtask0?\r\n\r\nThe microtask0 is more about you understanding how Grimoirelab tools work and interact with each other. The more data sources that you can produce the reports for, the better you'll understand the systems I'd say.	2019-03-02 11:45:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693832	\N	Thank You Very Much. @aswanipranjal	2019-03-02 12:41:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693833	\N	Can we improve the wording of **micro-task 0**? I suggest adding information answering the following questions as they have been asked in the comments: \r\n- **what exactly is meant by a data source?** (A repository ?, or a project with several repos? or the data fetched from a repository like commits, pull requests, etc. ?)\r\n- **How many data sources do we fetch the data from?** (answered in the comments but would be better to include)\r\n- **How many notebooks are to be submitted per data source?** (this will become clearer when the first question is answered)\r\n\r\n\r\nPlease have a look @aswanipranjal, @jgbarah.	2019-03-02 13:19:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693834	\N	Hello, I am interested in this project. I have mostly completed microtask0 (analysis of commits), however, I encounter a problem with the rate limits of GitHub being exceeded (If I try to `perceval github` any large project). I have tried a few ways to get around this but I'm afraid Ive hit a roadblock. Can I just use a smaller project instead? Also, as @Polaris000 said, I find the wording of the task to be unclear as well and we would benefit from further clarification.	2019-03-03 15:20:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277315
1693835	\N	HI @s-ankur! Regarding your rate limit, have you tried using the authentication token parameter with perceval?\r\n	2019-03-03 15:31:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693836	\N	The rate limit is low for unauthenticated users.\r\nHave a look at [the documentation](https://chaoss.github.io/grimoirelab-tutorial/perceval/github.html#retrieving-from-github-with-no-credentials)	2019-03-03 15:32:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693837	\N	Yes, I did, but I guess the repo I'm trying is too big either way. I think I'll try it with a smaller repo after my timeout is over. Thanks @Polaris000 	2019-03-03 15:37:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277315
1693838	\N	@s-ankur use sleep-for-rate flag	2019-03-03 16:10:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693839	\N	This should do the trick. Thanks @sarvesh211999.	2019-03-03 16:22:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693900	\N	Thanks @valeriocos, also need suggestions regarding [this](https://github.com/chaoss/wg-gmd/issues/81#issuecomment-482786160) (and [this](https://github.com/chaoss/wg-gmd/issues/81#issuecomment-482795608)).\r\nShall it be discussed in seperate issue..(would be easier to follow for everyone)	2019-04-13 14:55:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693840	\N	@sarvesh211999 said:\r\n\r\n> Yeah I was just asking whether it will be reviewed and responsed back if anything is missing ?\r\n\r\nUsually, you upload the results for all the microtasks you do in your own repository, and include that in the pull request you produce (as stated in the `/GSoC-interest.md` file).\r\n\r\nWe will go through all the repos in that file when we enter the evaluation period, or earlier (if we find some time to have a look earlier). Of course, you can ask whenever you find some problem. But if you understand what to do, I think you'll know if it is (well) done. Of course, the better documented, and maybe complemented with related stuff, the better. Remember that the idea is to show that you can work with the kind of stuff that you will need during the GSoC.	2019-03-03 18:56:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693841	\N	@Polaris000 said:\r\n\r\n> Can we improve the wording of micro-task 0?\r\n\r\nThanks for the suggestion, but i think we better will leave it as it is now. The main reason for that is that (I think) the microtask is reasonably well defined, if you read it carefully. Of course, there may be some level of fuzziness depending on your assumptions, but that's the reason why we have comments. And finally, I think it is better to leave it relatively open, because the main reason for the microtask is not to do something specific, but to show that people are familiar with the basics needed for this idea.	2019-03-03 19:00:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693842	\N	@jgbarah can you please review [**microtasks**](https://github.com/s-ankur/microtasks-perceval). Although currently I have completed 3 Microtasks (slightly incomplete) and am working on the rest, I would love to have some feedback as to whether I am on the right track.	2019-03-05 21:05:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277315
1693843	\N	@aswanipranjal @jgbarah I was just asking while creating pull request whether we have to keep repo private and can add u as collaborator, or we have to keep it public. Because in public there is possiblity that it can be copied.	2019-03-06 11:59:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693844	\N	@sarvesh211999, maybe you can have a look at this conversation. :) \r\nhttps://github.com/chaoss/governance/issues/86	2019-03-06 12:01:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693845	\N	 I want to ask is there any list of decided metrics that has to be implemented. Then our proposal will be more on point rather than being general or a long list.	2019-03-08 17:30:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693846	\N	The metrics are being worked on [in the focus group](https://github.com/chaoss/wg-gmd/tree/master/focus_areas)	2019-03-08 17:44:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693847	\N	So we have to draft proposal on the basis of metrics as how we are going to implement it??	2019-03-08 17:59:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693848	\N	# Hello, Everyone.\r\nI am an Indian Undergrad student , in my sophomore year, from Kolkata currently pursuing B-Tech in Information Technology. I am very excited and interested in this Project. I feel like I am very late to this conversation but I would still love to contribute. I have gone through the comments above and started working with the Micro Tasks.  	2019-03-14 10:19:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277325
1693849	\N	For all of you asking for us to review microtasks, in public or private repos:\r\n\r\n* I prefer not to look at private repos. Thanks for the invitations, anyway. The main reason for this is to maintain transparency, and letting anyone see any advice that we provide anyone else. I know that some student prefer not to make their repo public until the very last moment, to avoid other reusing their code, and I understand that. But even in that case, please consider that in GitHub it is very easy to know who copied from whom, if that would happen, and that the main criteria for accepting proposals is the overall evaluation of microtasks, involvement, etc, and not whether a single microtask was completed or not.\r\n\r\n* I prefer not to provide overall evaluations of microtasks. I will be happy to answer specific questions, and help people to complete microtasks. But in general, I will only evaluate microtasks when the evaluation period starts.	2019-03-20 13:30:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693850	\N	@jgbarah, @valeriocos, @aswanipranjal:  is there a way to get a definite idea regarding which metrics a potential gsoc student would be expected to implement? \r\n\r\nAs pointed out by @sarvesh211999, proposals would be quite vague without a clear idea.	2019-03-20 15:05:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693851	\N	@jgbarah Sorry, I read your comment a bit late. Thanks for the response.	2019-03-21 15:03:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1693852	\N	@jgbarah @aswanipranjal after checking the [repo](https://github.com/inishchith/chaoss-microtasks) of @inishchith , I'd propose to adopt its structure as the standard way to present the applicants' work for this idea and also for the other ones (or at least for https://github.com/chaoss/grimoirelab/issues/182). Thus, the repo should have a folder per micro-task, and a readme section that summarizes the work done together with links to the corresponding micro-task folder. What do you think ?\r\n	2019-03-22 10:55:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693853	\N	Is it necessary to send a pull request to governance with my information before the start of the student application process? As I have n't finished my proposal yet, can I wait until my proposal is ready and send everything all at once (during the student application process)?\r\nThough the answer might be obvious, better safe than sorry!\r\n@valeriocos @jgbarah @aswanipranjal 	2019-03-25 16:51:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693854	\N	> Is it necessary to send a pull request to governance with my information before the start of the student application process? As I have n't finished my proposal yet, can I wait until my proposal is ready and send everything all at once (during the student application process)?\r\nThough the answer might be obvious, better safe than sorry!\r\n\r\nThe pull request has to be accepted before the application period ends. You can submit a pull request with a link to a google doc that is under development and finish the proposal after the pull request was accepted.	2019-03-25 17:13:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693855	\N	Thanks! I'll send a pull request in a couple of days	2019-03-25 17:15:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693856	\N	@aswanipranjal @valeriocos @jgbarah \r\n\r\nIs there any list of metrics that have been already implemented in Jupyter-Notebook so that we can remove it from our proposal and make our schedule accordingly to the metrics not implemented.\r\n\r\n------------\r\n\r\nAnother question is regarding the metrics like 'Pull Request Open and 'Pull Request Closed', so are they to be implemented in different notebook or can be implemented in one.	2019-03-26 03:32:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693901	\N	Good idea @harshalmittal4 , please open a different issue, we can comment there, thanks!	2019-04-13 14:59:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693857	\N	> @jgbarah @aswanipranjal after checking the repo of @inishchith , I'd propose to adopt its structure as the standard way to present the applicants' work for this idea and also for the other ones (or at least for chaoss/grimoirelab#182). Thus, the repo should have a folder per micro-task, and a readme section that summarizes the work done together with links to the corresponding micro-task folder. What do you think ?\r\n\r\nThis sounds good, @valeriocos.	2019-03-26 16:04:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693858	\N	@sarvesh211999 \r\n> Is there any list of metrics that have been already implemented in Jupyter-Notebook so that we can remove it from our proposal and make our schedule accordingly to the metrics not implemented.\r\n\r\nImplementations of the metrics can be found here: [https://github.com/chaoss/wg-gmd/tree/master/implementations](https://github.com/chaoss/wg-gmd/tree/master/implementations)\r\n\r\n> Another question is regarding the metrics like 'Pull Request Open and 'Pull Request Closed', so are they to be implemented in different notebook or can be implemented in one.\r\n\r\nI think it'll be better if they are implemented separately. @jgbarah @valeriocos?	2019-03-26 16:17:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693859	\N	@aswanipranjal @jgbarah @valeriocos \r\nDo we have to give view access to all for proposal or can we just give access to mentors ?	2019-03-28 04:52:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277314
1693860	\N	sorry for the late reply @aswanipranjal and @sarvesh211999 \r\n\r\n> I think it'll be better if they are implemented separately. @jgbarah @valeriocos?\r\n\r\nI agree with @aswanipranjal 	2019-03-28 07:38:08	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693861	\N	> @aswanipranjal @jgbarah @valeriocos\r\n> Do we have to give view access to all for proposal or can we just give access to mentors ?\r\n\r\nI would say that is better to give access to all, but let's wait for @jgbarah and @aswanipranjal replies	2019-03-28 07:39:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693862	\N	I had asked a query more than a week ago. It probably got overlooked, so I am repeating it here: \r\n\r\nFrom what I understand, the metrics supposed to be implemented are those present in the [focus areas of wg-gmd repository](https://github.com/chaoss/wg-gmd/tree/master/focus_areas). Since risk and value are being moved to separate repositories, that leaves the code_development, community_growth and issue_resolution metric categories to be implemented as part of this GSOC idea.\r\n\r\nPlease correct me if I am wrong. \r\n@aswanipranjal @jgbarah @valeriocos 	2019-03-28 08:12:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693863	\N	I guess you are right, let's double-check with @jgbarah (and sorry for the late reply @Polaris000 :) )	2019-03-28 08:21:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693864	\N	\r\n>> Do we have to give view access to all for proposal or can we just give access to mentors ?\r\n\r\n> I would say that is better to give access to all, but let's wait for @jgbarah and @aswanipranjal replies\r\n\r\nYes, please do make repositories and proposals public. We debated private vs. public here: https://github.com/chaoss/governance/issues/86	2019-03-28 13:13:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693865	\N	> I had asked a query more than a week ago. It probably got overlooked, so I am repeating it here:\r\n> \r\n> From what I understand, the metrics supposed to be implemented are those present in the [focus areas of wg-gmd repository](https://github.com/chaoss/wg-gmd/tree/master/focus_areas). Since risk and value are being moved to separate repositories, that leaves the code_development, community_growth and issue_resolution metric categories to be implemented as part of this GSOC idea.\r\n\r\nSorry for not addressing this earlier. Yes, the idea is to work with the metrics in this (wg-gmd) repository. However, as usual, the task is open: some similar metrics in other wg could also get implementations (if people working in those wgs agree), and some other related tasks could be included (such as a testing system for all reference implementations, or a tool to run reference implementations on a set of repos, for example). But I think that until we see progress, it is difficult to know what exactly will be accomplished.	2019-03-29 08:11:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693866	\N	@valeriocos,  @jgbarah, @aswanipranjal \r\nJust a little clarification w.r.t. microtask3 :sweat_smile: :\r\nthe issues to be considered are the ones which were opened in the last year and closed anytime after that uptil now ?	2019-04-01 06:31:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693867	\N	Please see to this, any help would be useful. Thanks.	2019-04-01 17:07:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693868	\N	@harshalmittal4 sorry for the late reply. Your interpretation seems good to me:\r\n- issues opened in the last year\r\n- all issues closed\r\n\r\nplease @jgbarah @aswanipranjal correct me if I've misunderstood that sentence (reported below)\r\n\r\n> Microtask 3: Produce a notebook with charts showing the distribution of time-to-close for issues already closed, and opened during the last year, for each of the repositories analyzed, and for all of them together...	2019-04-02 09:18:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693869	\N	Sorry about the late reply @harshalmittal4.\r\n\r\n@valeriocos @harshalmittal4, I think the interpretation is\r\n- issues opened in the last year\r\n- issues closed in the last year	2019-04-04 15:05:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277273
1693870	\N	Thanks @aswanipranjal, I considered the other interpretation in the microtask, although this could also be done similarly. Will possibly update it soon. Meanwhile, may you please review the microtasks and suggest some other changes for improvements, maybe in an issue if it suits.  :slightly_smiling_face:  	2019-04-04 16:44:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693871	\N	What is the preferred mode of communication between a potential GSOC student and his/her mentors?\r\nIs the discussion exclusive to the student and the mentor, or does it happen in the public mailing lists and general IRC channels?\r\n	2019-04-05 05:37:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693872	\N	@Polaris000 \r\nI think it is the (weekly/bi-weekly) video call meetings and the mailing list as far as I know.\r\n\r\nThe discussions through IRC are not much active. You can check these, [mail thread](https://lists.linuxfoundation.org/pipermail/chaoss/2019-January/000263.html), https://github.com/chaoss/website/issues/112\r\n\r\nYou can have a look at the weekly schedules of the working group meetings.\r\nhttps://chaoss.community/participate/#user-content-chaoss-community-calls\r\n\r\nThe GMD working group meets bi-weekly, on Wednesday (next is on April 10th). It would be really great if you all can join the meetings. :slightly_smiling_face: \r\n\r\nWe had a discussion regarding this in the last weekly meeting, [GMD WG Minutes](https://docs.google.com/document/d/1fgMT5onwvNQE6b4gPWE7oSPHRvb9q1z6XEbD51EtCFg/edit?usp=sharing).\r\n	2019-04-05 06:48:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693873	\N	Thanks @vchrombie for your answer! I am aware of the schedules. Since you said "I think...", lets confirm it once with one of the maintainers.\r\n\r\nI'd love to join the meets! Till a few days ago, I thought the meeting was only for the maintainers. 	2019-04-05 06:50:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693874	\N	> I'd love to join the meets! Till a few days ago, I thought the meeting was only for the maintainers.\r\n\r\nSorry, intruding here in between!\r\nActually, I also had the same thought about the meetings till yesterday when I asked in the mailing list. So they are open to all, and now this thing about the meetings seems resolved:slightly_smiling_face:\r\n\r\n> lets confirm it once with one of the maintainers.\r\n\r\nYes confirming things with the with the maintainers is important, the main concern being we all are new and there may be ideas or plans being worked upon which we may not be aware of! \r\n\r\nThanks! 	2019-04-05 09:23:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693875	\N	Hey @valeriocos, @jgbarah, @aswanipranjal, \r\nI had few questions (similar amongst theemselves) with regard to some metrics :\r\n \r\n1. Proposal_accepted (**period**), Proposals_declined (**period**) :\r\n<pre>\r\nRegards to proposals \r\n\r\n- opened anytime and accepted/closed in that period\r\n- opened in <b>that period</b> and accepted/closed in that period \r\n</pre>\r\n\r\n2. Proposal_participants (**period**):\r\n<pre>\r\n- Consider all open prs and count participants from the discussion that happen during that period in any of the open prs.\r\n- Consider prs opened in <b>that period</b> and count participants from the discussion that happen during that period in those prs.\r\n</pre>\r\n\r\n3. Proposal_Backlog (**period**);\r\n<pre>\r\n- Consider proposals opened in that period and which remain undecided till now\r\n- Consider proposals opened in that period and which remain undecided in <b>that period</b>\r\n</pre>\r\n(This is similar to one clarification I asked earlier, but just to be sure, I asked these :slightly_smiling_face: )\r\nIs it the second interpretation which is meant in all these.\r\nThanks!\r\n\r\n	2019-04-05 15:06:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693876	\N	Hi @valeriocos @jgbarah is there still a chance of getting some feedback on my proposal? Or should I upload it already? Thanks!	2019-04-08 14:11:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277265
1693877	\N	@valeriocos @jgbarah @GeorgLink @aswanipranjal\r\nOn the GSoC submission page, do I have to submit a draft first? Or can I directly submit the proposal pdf?\r\nI am asking for official reasons only: If I send you a draft, will you approve it? And for a student to get to  work with CHAOSS, is it necessary to get a draft approved first?\r\nPlease let me know.	2019-04-09 08:02:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693878	\N	@Polaris000 and @quirroone I would recommend that you get your proposal (in PDF) submitted to the Google submission system. Follow their rules. I suspect that the mentors are not going to pre-approve submissions as that would create an additional layer of work for them. That said, others can give their advice. 	2019-04-09 10:38:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693879	\N	Submitted\r\n	2019-04-09 12:52:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693880	\N	Submitted!!	2019-04-09 16:26:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693881	\N	@valeriocos, @aswanipranjal, \r\nFor the metric pull_request_participants, participants are defined as those who review a PR **or** comment on a PR **or** both (anyone who either reviews or comments on a PR) ?	2019-04-13 07:47:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693882	\N	@harshalmittal4 \r\nI think both can be counted because participants mean being a part of the discussion. \r\n\r\nBut when coming to the sample implementation in the [metrics/pull-requests-participants.md](https://github.com/chaoss/wg-gmd/blob/master/metrics/pull-requests-participants.md), it is just implemented as with review comments because the Perceval doesn't store the normal comments. I think GitHub API gives only the code review comments, we can't blame Perceval :sweat_smile:.\r\nThe discussion comments cannot be retrieved, I guess. \r\n\r\nPlease correct me if I am wrong.	2019-04-13 09:19:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693883	\N	Let me give an example, this is the data retrieved by Perceval for PR #112, [pr-structure.json](https://github.com/vchrombie/chaoss-microtasks/blob/master/microtask-6/pr-structure.json). \r\n\r\n[Jesus' comment](https://github.com/chaoss/wg-gmd/pull/112#pullrequestreview-218106202) is not stored but [Aniruddha's comment](https://github.com/chaoss/wg-gmd/pull/112#discussion_r268442329) is stored. [#L612](https://github.com/vchrombie/chaoss-microtasks/blob/master/microtask-6/pr-structure.json#L612)	2019-04-13 09:24:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693884	\N	> because the Perceval doesn't store the normal comments. \r\n\r\nyes, this is known @vchrombie :slightly_smiling_face:,  and thats why the question popped on who all to include in participants (while I was trying to implement pull_request_participants). \r\nAnyways thanks for putting the example.\r\n\r\n>The discussion comments cannot be retrieved, I guess.\r\n\r\nThey can be retrieved, although not very straightforward (The github's API response for pull_requests includes only the reviews, but it does include a url to the comments, which can be used to fetch the commentators for the metric pull_request_participants using python's `requests`).\r\nWas trying this, for [this](https://api.github.com/repos/Cloud-CV/Origami/pulls/107/comments) comments url obtained fron the pull_request response data.\r\n\r\n(Note : The issues which are actually pull_requests, include the comments, but the reviews aren't included in this case which is why we can't use them either) \r\n\r\n@valeriocos @aswanipranjal @jgbarah,  please see when you have time :)	2019-04-13 10:04:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693885	\N	> > The discussion comments cannot be retrieved, I guess.\r\n> \r\n> They can be retrieved @vchrombie, although not very straightforward (The github's API response for pull_requests includes only the reviews, but it does include a url to the comments, which can be used to fetch the commentators for the metric pull_request_participants using python's `requests`).\r\n\r\n@harshalmittal4, thanks for letting me know.\r\n\r\nThat is really good. Then it would be a good feature for the Perceval tool too. The metric can be improved if we can fetch the PR commentators using Perceval.\r\nWhat do you say @jgbarah @valeriocos @aswanipranjal \r\n\r\n@harshalmittal4, can you see if this is the correct URL for the comments\r\nhttps://api.github.com/repos/chaoss/wg-gmd/issues/112/comments	2019-04-13 10:57:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693886	\N	Why does https://api.github.com/repos/chaoss/wg-gmd/issues/112/comments not include Jesus' comment?@vchrombie\r\n	2019-04-13 11:02:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693887	\N	> Why does https://api.github.com/repos/chaoss/wg-gmd/issues/112/comments not include Jesus' comment?@vchrombie\r\n\r\nI had the same doubt, let's confirm with @harshalmittal4 whether there is any other link regarding it (I couldn't find any) or maybe there is some other procedure to do it. \r\n\r\nI also think this is not the right place for this discussion (fetching comments details using Perceval, not about the metric). Can we open an issue in the [chaoss/grimoirelab-perceval](https://github.com/chaoss/grimoirelab-perceval)?	2019-04-13 11:11:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693888	\N	>I also think this is not the right place for this discussion (fetching comments details using Perceval, not about the metric). Can we open an issue in the chaoss/grimoirelab-perceval?\r\n\r\nGood idea!	2019-04-13 11:26:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693889	\N	Hey @vchrombie, @Polaris000, I would try to answer you fast and clearly, lets have some examples:\r\n[#PR 112](https://github.com/chaoss/wg-gmd/pull/112) \r\nComments url : [https://api.github.com/repos/chaoss/wg-gmd/issues/23/comments](https://api.github.com/repos/chaoss/wg-gmd/issues/23/comments)\r\nJesus's comment isn't a regular comment, it is made when he approved the changes as you can see in the PR (lets say it to be a merge comment), so information about the participant (Jesus) is present in the `merged_by` section in the json structure ([this](https://github.com/vchrombie/chaoss-microtasks/blob/master/microtask-6/pr-structure.json#L316) line), instead of being present in the comment's url.\r\n\r\n[#PR 12](https://github.com/chaoss/wg-gmd/pull/12)\r\nComments url :[https://api.github.com/repos/chaoss/wg-gmd/issues/12/comments](https://api.github.com/repos/chaoss/wg-gmd/issues/12/comments)\r\nJesus's comment is present in the PR (regular comment), so it is shown in the comments url. Sean's comments are not regular comment, they are made when he approved the changes, so information about him is present in the `merged_by` section in the json structure [here](https://github.com/harshalmittal4/CHAOSS-Perceval-microtasks/blob/master/pr_structure.json#L595).\r\n\r\n[#PR 17](https://github.com/chaoss/wg-gmd/pull/17)\r\nComments url : [https://api.github.com/repos/chaoss/wg-gmd/issues/17/comments](https://api.github.com/repos/chaoss/wg-gmd/issues/17/comments)\r\nHere again, Klumb's and Sean's comment are regular comments, so they are present in the comment's url, while others are either reviews or comments made while approving the changes so they would be present in the json structure retrieved of the PR.\r\n\r\nHope that it is resolved now @vchrombie @Polaris000. If still there is some confusion, play around with some examples and you will get it yourself :slightly_smiling_face: \r\nThanks!	2019-04-13 12:56:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693890	\N	> Hope that it is quite clear now @vchrombie @Polaris000. If still there is some confusion, play around with some examples and you will get it yourself \r\n\r\nOkay, so approval changes is also a review comment (can't read the comment though).\r\nThanks for the clarification @harshalmittal4. :smiley: \r\n\r\nNice work. I was playing with the wrong PR (with less diversity of comments). :sweat_smile: 	2019-04-13 13:23:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693891	\N	Sorry for being late in answering @harshalmittal4 @Polaris000 @vchrombie. If I understand correctly the discussion, it seems that some comments are retrieved and others are not. \r\n\r\nDepending on the type of comment (issue comment, pull request comment, pull request review, commit comment), the GitHub API provides different endpoints. For instance, for this issue: https://github.com/chaoss/wg-gmd/pull/12, all comments are available at:\r\n- https://api.github.com/repos/chaoss/wg-gmd/issues/12/comments\r\n- https://api.github.com/repos/chaoss/wg-gmd/pulls/12/comments\r\n- https://api.github.com/repos/chaoss/wg-gmd/pulls/12/reviews\r\n\r\n*the body of the issue (or the initial comment) is available at: https://api.github.com/repos/chaoss/wg-gmd/issues/12\r\n*commit comments are not present in this example, but they would be available inside each commit returned by https://api.github.com/repos/chaoss/wg-gmd/pulls/12/commits\r\n\r\nThe GitHub perceval backend returns:\r\n- issue comments (https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L554) [when using the category `issue`]\r\n- pull request comments (https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L653) [when using the category `pull_request`]\r\n\r\nThe addition of reviews and commit comments would be interesting, and wouldn't require big changes in the backend. If you want to work on these enhancements, feel free to submit PRs :)	2019-04-13 13:29:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693892	\N	Thanks for the reply @valeriocos!. I'd love to work on this. 	2019-04-13 13:36:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693893	\N	Hey @valeriocos, for the specific case of pull_request :\r\n\r\n>pull request comments (https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L653) [when using the category pull_request]\r\n\r\nThe pull request comments^ are the review comments made on the the PR, and \r\n\r\n>issue comments (https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L554) [when using the category issue]\r\n\r\nthis^ gives the comments which are not reviews, made on the same PR.\r\n	2019-04-13 13:38:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693894	\N	Great @Polaris000 , feel free to start with one enhancement (reviews or commit comments), thanks!	2019-04-13 13:40:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693895	\N	@valeriocos, the body of the pull request retrieved by perceval for the case of  #12 is present [here](https://github.com/harshalmittal4/CHAOSS-Perceval-microtasks/blob/master/pr_structure.json).\r\nIt already contains the 3 commit comments ([line163](https://github.com/harshalmittal4/CHAOSS-Perceval-microtasks/blob/master/pr_structure.json#L163), [line 363](https://github.com/harshalmittal4/CHAOSS-Perceval-microtasks/blob/master/pr_structure.json#L363) and [line 526](https://github.com/harshalmittal4/CHAOSS-Perceval-microtasks/blob/master/pr_structure.json#L526)) , but not the regular and review comments  I think we need to add those to the retrieved json for the pull_request category. I would like to work on one of them, once other things are finalized :)	2019-04-13 14:03:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693896	\N	line163, line 363 and line 526 should be review comments, which are extracted with this [method](https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L653).\r\nRegular comments (= issue comments) are extracted when using the category `issue` (the default one, see [here](https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L117)).\r\nThe missing comments are:\r\n- (1) reviews, which should be implemented using this call: `https://api.github.com/repos/<user-name>/<repo-name>/pulls/<pull-id>/reviews`\r\n- (2) commit comments, which should be plugged [here](https://github.com/chaoss/grimoirelab-perceval/blob/master/perceval/backends/core/github.py#L391)\r\n\r\nPerfect @harshalmittal4 ! maybe @Polaris000 can focus on (1) and you on (2), or viceversa. What do you think @harshalmittal4 @Polaris000 ?\r\n\r\n	2019-04-13 14:22:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693897	\N	Ok @valeriocos, I can work on including the commit comments in the PR json response. Also, do we need to include the regular comments in the PR json response?	2019-04-13 14:42:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277312
1693898	\N	@harshalmittal4 said: \r\n> Ok @valeriocos, I can work on including the commit comments in the PR json response. Also, do we need to include the regular comments in the PR json response?\r\n\r\nI can work on (1) then, @valeriocos.\r\nI'm busy for a couple of days and the patch will be slightly delayed. Hope that's alright.	2019-04-13 14:46:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277268
1693899	\N	@harshalmittal4 @Polaris000 , feel free to open two ssues in Perceval about including commit comments and reviews. \r\n\r\n@harshalmittal4 I wouldn't add regular comments to the PR, because they are already available when fetching issues.\r\n\r\n@Polaris000 no worries, you can start working on it when you have time.\r\n\r\nThank you both!	2019-04-13 14:49:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1693904	\N	Thanks for the positive reviews. I'm merging after addressing your comments.	2019-01-29 21:52:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693905	\N	Thx for the review. I'm merging.	2019-01-29 21:57:56	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693906	\N	I saw your comments, @sgoggins. So, I wait until you move stuff around. Please, ping me and I have a look when you're done!	2019-01-29 13:27:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693907	\N	This is ready for another review. 	2019-03-06 11:44:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693908	\N	Any comment?\r\n	2019-01-23 13:16:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693909	\N	Looks good!	2019-01-16 15:37:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693910	\N	I created a document and shared with @jgbarah 	2019-01-16 15:48:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693911	\N	I'm late with this, I hope to work on it during the net few days. Sorry for my delay.	2019-01-23 13:14:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693912	\N	Could you please provide a short description that we can put on the CHAOSScon schedule.	2019-01-23 14:09:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693913	\N	A short description could be (@sgoggins please modify as you may wish):\r\n\r\nThe GMD working group is exploring metrics related to growth-maturity-decline and other focus areas (such as risk). Our idea is to go top down, from the definition of the focus areas down to the goals that we want to fulfill in those areas, the questions that we would like to answer to reach those goals, and finally the metrics that could help us to better answer those questions. We also intend to work in reference implementations for the metrics. In parallel, we also work bottom-up, by collecting use case from real life.\r\n\r\nThis will be a workshop to explain all of this in more detail, to also explain our procedures, and how anyone can contribute. The workshop will also include a discussion on the current status of the working group, and on specific aspects of the focus areas, goals, questions and metrics we're considering. Anyone is welcome to submit issues and pull requests in advance, to propose topics of their interest.	2019-01-23 19:11:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693914	\N	Thank you, I added the description to our CHAOSScon schedule:\n\nhttps://chaoss.community/chaosscon-2019-eu/#user-content-jesus-m-gonzalez-barahona\n	2019-01-23 19:23:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693915	\N	@sgoggins have a look at the deck. I think we could publish it as a first draft.	2019-01-29 09:42:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693916	\N	View only link to slides: https://docs.google.com/presentation/d/1KT7hu3x-4tmlDnU0WHrZ9xo3_x294N0wuni6fIaiNZE/edit?usp=sharing	2019-01-30 15:45:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693917	\N	Thank you for the slides. A current version is now on the CHAOSScon schedule website.	2019-01-30 19:54:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693918	\N	The session on GMD happened during CHAOSSCon EU 2019. I think we can close this.	2019-02-06 15:31:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693919	\N	Thanks for the feedback. I think we all know metrics in general (not only GMD metrics) are not a problem, but a try to provide data to inform a decision or work towards solving a problem.\r\n\r\nIn this case, we're trying to organize the "problem" in focus areas, each trying to address some goals. For example, if you have a look at the [Code Development focus area](https://github.com/chaoss/wg-gmd/blob/master/focus_areas/code_development.md), the scope is\r\n\r\n> Aspects related to how the source code changes over time, and the mechanisms that the project has to perform and control those changes.\r\n\r\nand within this scope, the goals are:\r\n\r\n> * Activity: Learning about hwo much activity in involved in changing (or adding) code\r\n> * Efficiency: Learning how effective new code is merged into the code base\r\n> * Quality: Learning about the processes to improve/review quality that are used (for example: testing, code review)\r\n\r\nAll of those are goals that could be relevant for a specific case, or not. But in case they are relevant for your case (and there is always a *you* deciding what's relevant), we propose the corresponding list of questions, that would help you in reaching that goal, and of metrics, that should help you to answer those metrics.\r\n\r\nDoes this explanation address your concerns? 	2019-01-08 18:20:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693920	\N	My concern is not addressed. From the front page\r\n\r\n> Growth, Maturity and Decline is a working group focused on the lifecycle of open source projects.\r\n\r\nWhat is missing here are people. In my country outsourcing services is the primary business. Most people are busy working in corporations selling their hours and less and less have time to maintain open source infrastructure.\r\n\r\nOpen source started as a community, but in corporate world, treating people as resources, managing product lifecycles, community doesn't matter. The less people communicate, less distracted, the more effective their neural network are processing code. This is the loaded question I had. What problem will you solve once you get all the metrics without people?	2019-01-08 20:57:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277274
1693921	\N	Hi Anatoli,\n\nPlease correct me if I am wrong. I understand your concern to be that the\nGMD metrics are centered not on people and community but on measurable\naspects of a project like source code.\n\nI work under the assumption that nothing can be done in an open source\nproject without people. People are what cause the GMD metrics to change. To\nsome extend, bots and automated systems will have an influence too.\n\nMaybe one way to think of this is to consider the D&I workgroup\n<https://github.com/chaoss/wg-diversity-inclusion> [1] to bring balance by\nmeasuring people's engagement, not worrying about their output.\n\nPlease let me know if this helped and if not what I am missing.\n\nBest,\nGeorg\n\n[1] https://github.com/chaoss/wg-diversity-inclusion\n	2019-01-08 21:28:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693922	\N	@abitrolly : I think it would be helpful to continue this conversation, possibly on the email list for CHAOSS (http://chaoss.community). I am keenly interested in knowing the types of projects you are most referring to. 	2019-01-09 17:13:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693923	\N	@abitrolly can we close this issue, and if you find it convenient, continue the discussion in the mailing list?	2019-01-16 13:33:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693924	\N	Since there is no further comment, I'm closing this for now. Anyone, feel free to reopen if you feel it is convenient to follow up here.	2019-01-23 12:14:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693925	\N	@sgoggins @rpaik (or any other one): any comment?	2019-01-08 18:12:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693974	\N	Removed numbers from headers	2019-08-02 18:27:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693976	\N	the absolute path to the image should work after merging this pr	2019-07-30 02:10:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693926	\N	Let me suggest a goal, based on your description: "Find out bug reporters whose past bug reports were successfully fixed".\r\n\r\nIf you agree on this goal, questions could be:\r\n\r\n* To which extent past bug reports by this person were fixed?\r\n\r\nI think this would be the main question.\r\n\r\n* How many bug reports did this person submit in the past?\r\n\r\nThis one could be used to modulate the former question, since if the number of submitted bug reports is really low (like 1), maybe it is not significant to be considered.\r\n\r\n@kfogel what do you think?	2018-12-14 13:18:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693927	\N	@kfogel : We are keenly interested in your thoughts!	2019-01-09 17:14:23	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693928	\N	@kfogel just checking if you have any comments on this. If nothing in the next few weeks, we're going to close this but happy to open it again at any time. 	2019-01-16 15:48:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693929	\N	Hey there!  Please don't close! :-)  Sorry for the delay; I've been meaning to comment, but just had a long winter break followed by a very busy "back at work and catching up" period.  Putting some more thoughts here is on my todo list and I will do so soon.	2019-01-16 23:19:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277317
1693930	\N	No problem! :)	2019-01-17 11:36:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693931	\N	@kfogel : If no movement in the next two weeks we are closing this issue. 	2019-08-14 14:53:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693932	\N	My apologies, @sgoggins.  I won't have time to develop this further right now; please go ahead and close.  If I become able to, we can always re-open.	2019-08-25 03:38:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277317
1693933	\N	Thanjs, @sgoggins @kfogel. Closing then.	2019-08-28 08:22:51	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693934	\N	I share the general lines I see in that document. Should we convert it into a PR, and eventually merge it? I suggest naming it ROADMAP.md (which is customary in some repos), and then making it evolve to a real roadmap if we want.	2018-12-19 13:34:22	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693935	\N	https://docs.google.com/document/d/1CkzlCT1hi9OI1SQf_GAZSsNv9o3Po25x8wC5G424d2U/edit?usp=sharing	2018-12-19 17:27:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693936	\N	I'm going to produce a pull request with this to a ROADMAP.md document.	2019-01-09 17:15:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693937	\N	We already have a first roadmap, so we can close this.	2019-01-30 15:47:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693938	\N	Thx!	2018-12-12 19:40:16	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693939	\N	I think this is an implementation of #55. Just noting it here so that we have the crosslink.	2018-12-09 22:32:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693940	\N	Here are the thoughts from the meeting and my head: \r\n1. Remove D&I and re-input "GMD" as the specific working group. \r\n2. Remove "security" as a heading \r\n3. Add a new commit pull request, ensuring some alignment with the heading's that Ben notes in issue 55. \r\n4. Then we will merge this PR and expect the cross group iteration to continue. \r\n	2018-12-12 17:18:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693941	\N	@foundjem thx a lot for the new changes. Would you mind summarizing how you addressed our comments? (I'm going through the changes anyway, I think I can figure out it myself ;-) ).	2018-12-19 16:09:02	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693942	\N	Hello, \nSorry this was the initial changes I met before the previous commit, but the file was not in my right repo. The aim of the commit was for Matt and you guys to look into content of what we are to write, if the structure is correct thus far. I explained in the general meeting yesterday that I need help on certain areas, since I don‚Äôt have all the inside of the working group.\nHope we could discuss more today during the meeting.\n\nThanks,\nArmstrong\n\n\n> On Dec 19, 2018, at 11:09, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> @foundjem thx a lot for the new changes. Would you mind summarizing how you addressed our comments? (I'm going through the changes anyway, I think I can figure out it myself ;-) ).\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n	2018-12-19 16:35:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693943	\N	\n\n> On Dec 9, 2018, at 5:41 PM, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> @jgbarah requested changes on this pull request.\n> \n> I think this needs major work... Please, address the comments with a new version, and let me know if I can help. Thanks for your effort!\n> \nOk, I am addressing the comments, also, I need help on the content of Introductions and Background. However, I have fixed the structure of the README.md file.\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056817>:\n> \n> >  _Growth, Maturity and Decline_ is a working group focused on the lifecycle of open source projects. We do not valence the stages, but seek to build awareness of those stages among consumers of these metrics. Decline can be ok when a project's utility is waning; or terrible if 20% of the entire internet relies on that project. Context matters, and we are not the arbiters of your context. The "valence" of "good/bad" emerges from use cases and YOUR context.\n>  \n> -This is a [CHAOSS](https://chaoss.community) working group, focused on the [Growth-Maturity-Decline][gmd] metrics category. Its aim is to coordinate the definition of the metrics, and the production of software for implementing them, in this area.\n> +This is a [wg-diversity-inclusion](https://chaoss.community) working group, focused on the [Growth-Maturity-Decline][gmd] metrics category. Its aim is to coordinate the definition of the metrics, and the production of software for implementing them, in this area.\n> I think this is not right. This is still a CHAOSS working group, and certainly it is not the D&I working group ;-)\n> \nI have deleted the D&I entry, now its only GMD  wg\n\n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056851>:\n> \n> >  \n> -Usually, we try to make decissions mainly during the last meeting of each month,\n> -so that decisions can be brought when convenient to the monthtly main CHAOSS meeting,\n> -which is the first meeting of each month. In all the meetings we may have an agenda,\n> -but random issues can be raised if time allows, after we're done with the agenda.\n> -Whenever possible, and specially if a decission needs to be made,\n> -ensure that issues / pull requests about the subject matter were opened some time before the meeting,\n> -so that anyone had the opportunity of commenting on them, and make up their mind about that subject matter.\n> +TODO: Fill out a short section that links to D&I metrics repo and explains how this repo fits into overall CHAOSS metrics effort.\n> Again, this is about D&I, it should be about the GMD wg.\n> \nAddressed. Only GMD -wg now\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056899>:\n> \n> > @@ -39,37 +45,54 @@ You can contribute by proposing new goals for a focus area, or new questions for\n>  or new metrics for answering those questions. Or by helping to refine goals, and questions.\n>  \n>  \n> -## Meetings\n> I think we need info about meetings somewhere, since this is one of the main activities of the wg.\n> \nDone!\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056926>:\n> \n> > +TODO: Fill out a short section that links to D&I metrics repo and explains how this repo fits into overall CHAOSS metrics effort.\n> +[D&I](https://github.com/chaoss/wg-diversity-inclusion)\n> +\n> +\n> +## Table of Contents\n> +\n> +- [Security](#security)\n> +- [Background](#background)\n> +- [Install](#install)\n> +- [Usage](#usage)\n> +- [API](#api)\n> +- [Maintainers](#maintainers)\n> +- [Contributing](#contributing)\n> +- [License](#license)\n> +\n> +## Security\n> What do we intend to comment about Security? Maybe this is not applicable in our case.\n> \nThis isn old, I addressed this in the first commit. See the new structure in the  ``readme-file‚Äô' branch\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056953>:\n> \n> >  \n> -**Exceptions** (these days there will be no meeting): none for now\n> +## Background\n> +* Background - A lot of the current content at the top of the repo will be moved here and expanded on.\n> Instead of this, we should have that content here...\n> \n> \nI need help here!\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056960>:\n> \n> >  \n> -## Mailing list\n> +## Install\n> I think we're not having installation instructions‚Ä¶\n> \nAddressed. \n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056976>:\n> \n> >  \n> -# Relationship with the chaoss/metrics repository\n> +## Usage\n> +* Usage - Should contain the repository structure information with additional detail about the concepts behind focus areas, use cases, implementations and all other important elements of the repo with appropriate links.\n> We need the actual content here...\n> \nI need help here with the content\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056993>:\n> \n> >  \n> -# Maintainers\n> +## API\n> I think this is not relevant...\n> \nAddressed.\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240057019>:\n> \n> >  \n>  - [Jesus M. Gonzales-Barahona](https://github.com/jgbarah)\n>  - [Sean P. Goggins](https://github.com/sgoggins)\n> +\n> +## Contributing\n> This should be completed. In particular, the content about meetings, above, could have a place here.\n> \nI added some content here, pointing to how members can contribute to the GMD working. \n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240057060>:\n> \n> >  \n>  - [Jesus M. Gonzales-Barahona](https://github.com/jgbarah)\n>  - [Sean P. Goggins](https://github.com/sgoggins)\n> +\n> +## Contributing\n> +* Contribute - All of the content that references participation will be moved here and standardized with D&I repo\n> +See [the contributing file](contributing.md)!\n> +\n> +PRs accepted.\n> +\n> +Small note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n> +\n> +## License\n> +* License - A simple statement of the license that will be standardized with D&I repo\n> We should clarify what the license refers to. I think that should be at least the metrics definition, and the examples and reference implementations.\n> \nAddressed but needs reviewer‚Äôs attention.\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240057081>:\n> \n> >  \n>  - [Jesus M. Gonzales-Barahona](https://github.com/jgbarah)\n>  - [Sean P. Goggins](https://github.com/sgoggins)\n> +\n> +## Contributing\n> +* Contribute - All of the content that references participation will be moved here and standardized with D&I repo\n> +See [the contributing file](contributing.md)!\n> +\n> +PRs accepted.\n> +\n> +Small note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n> +\n> +## License\n> +* License - A simple statement of the license that will be standardized with D&I repo\n> +\n> +MIT ¬© 2018 \n> Should be the right copyright holder, I assume CHAOSS...\n> \n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/chaoss/wg-gmd/pull/58#pullrequestreview-182998459>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AFfeWWhFWOAndIonTC1RicI6DJ4Ee1u-ks5u3ZGGgaJpZM4ZJ4uU>.\n> \n\n	2018-12-19 17:27:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693944	\N	@foundjem : Checking on the status of the requested changes. 	2019-01-08 14:50:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693945	\N	Hi @foundjem Thank you for creating a pull request.\r\n\r\nUnfortunately, this is not what I expected. Can I ask you to follow the following **three** step to create a new pull request?\r\n\r\n1. Fork the repository by clicking the "Fork" button at the top right. This will create a copy of the `wg-gmd` repository under your profile.\r\n![image](https://user-images.githubusercontent.com/8862021/49687232-fcb4aa80-fac5-11e8-96f6-3daf2d81dc6f.png)\r\n  - You should see something like this:\r\n  ![image](https://user-images.githubusercontent.com/8862021/49687294-8bc1c280-fac6-11e8-8a4f-93798aa4b881.png)\r\n\r\n\r\n2. In your copy of the repository, edit the `README.md`. You can click on it and edit with your new text OR you can upload your changed README.md file that you included with your zip file on this pull request. Here is where you find these two options:\r\n![image](https://user-images.githubusercontent.com/8862021/49687317-db07f300-fac6-11e8-9eac-f8057ab0fb7f.png)\r\n\r\n3. Once you made the change, you can create the pull request from within your copy of the repository. The pull request then alerts us of the change:\r\n![image](https://user-images.githubusercontent.com/8862021/49687334-1c000780-fac7-11e8-8beb-9f98e23ed17a.png)\r\n\r\nI think the rest of the steps are self explanatory but I'm happy to help. Shoot me an email (linkgeorg@gmail.com) with any questions you have.\r\n\r\n	2018-12-08 14:58:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693946	\N	In summary, the change to the README.md should be done in the repository and you do not need to attach any files when creating the pull request.	2018-12-08 14:59:19	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693947	\N	Thanks @GeorgLink for the clarifications. I'm closing this pull request (I see a new one, anyway).	2018-12-09 22:31:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693975	\N	To be clear, these changes were made by Matt and myself.\r\n\r\nI created the issue for transparency purposes.	2019-08-02 19:00:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693977	\N	the absolute path to the image should work after merging this pr	2019-07-30 02:10:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693978	\N	@sgoggins, please review. These changes do not reflect #25 - I am waiting for comment.\r\n 	2019-07-29 19:29:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693979	\N	@klumb Requesting your OK	2019-07-29 18:45:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1693948	\N	Thanks @jgbarah \r\n\r\n# Readme.md Structure\r\n* Intro - Needs a one-line description, one paragraph description, and a short section that links to D&I metrics repo and explains how this repo fits into overall CHAOSS metrics effort.\r\n* Table of Contents - Clickable links at the top are a lifesaver :-)\r\n* Background - A lot of the current content at the top of the repo will be moved here and expanded on.\r\n* Usage - Should contain the repository structure information with additional detail about the concepts behind focus areas, use cases, implementations and all other important elements of the repo with appropriate links.\r\n* Contribute - All of the content that references participation will be moved here and standardized with D&I repo\r\n* License - A simple statement of the license that will be standardized with D&I repo\r\n\r\n# Repository Structure\r\n\r\nAdditionally, I think it would be good to examine how the content of the directories is presented:\r\n\r\n* metrics, focus_areas - These need a Readme.md that describes the content of the directory with appropriate links\r\n* implementations - the readme here does a great job explaining how to do things, but doesn't explain why I would want to or what the result would be.\r\n* use_cases - This Readme is really great! I just wanted to state that for the record :-)\r\n\r\n\r\n# Steps to Resolve\r\n\r\nI think the best approach would be to create one PR for the README changes, followed by a series of PR's for each of the directories. If we have consensus on the Readme.md changes I can get started on them. I'll do my best to retain all of the information you have, and I'll just present it under this new structure. With that said, there are likely some things I'll need help on with the details so I'll make sure we're on the same page with them.	2018-11-30 22:57:00	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277280
1693949	\N	@foundjem and I will take this on	2018-12-05 17:14:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693950	\N	Hello Matt,\nAttached, please find a rough draft of the proposed README.md file.\n\nThanks,\nArmstrong\n\n\n\n> On Dec 5, 2018, at 12:14 PM, Matt Germonprez <notifications@github.com> wrote:\n> \n> @foundjem <https://github.com/foundjem> and I will take this on\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/chaoss/wg-gmd/issues/55#issuecomment-444566366>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AFfeWQvbthN7Akjg_4CjlPK5rABtRa8Lks5u1_8FgaJpZM4Y6aPK>.\n> \n\n	2018-12-07 15:03:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693951	\N	Hi @foundjem \r\n\r\nThanks!!\r\n\r\nCould you make these changes in a pull request and the we could see them that way? If that isn't super clear, I can take what you have and create the PR. 	2018-12-07 20:13:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693952	\N	We think this is done now, with the latest pull requests on that file.	2019-01-16 15:51:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693953	\N	Well, I'll rather use a merge commit. Don't mind about rebasing. Sorry for the noise.	2018-11-26 18:58:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693954	\N	Sorry, I could have sworn I rebased that.	2018-11-26 19:31:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693955	\N	Let's keep it here (proposal from the GMD meeting today), until we start working on proposals, when we can open issues in the chaoss/governance repo.	2018-12-05 17:19:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693956	\N	Update. This is in progress from the Google Organization side. I need projects from you. \r\n\r\nhttps://github.com/chaoss/governance/blob/master/GSoC-Ideas.md	2019-01-16 15:52:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693957	\N	Update. We have some pull requests with ideas. @germonprez will go through them.	2019-01-23 15:34:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693958	\N	Next step is more detailed project description and microtasks. 	2019-01-30 15:48:03	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693959	\N	> Next step is more detailed project description\r\n\r\nLess detail about the project and more specifics about the project idea. Two paragraphs would hopefully suffice.\r\n\r\n> micro-tasks\r\n\r\nFeel free to reuse the same from last year. \r\nAdd a link to it from the idea page.	2019-01-30 19:53:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693960	\N	Proposal done.	2019-02-13 15:41:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693961	\N	Link to the related blog post: https://chaoss.community/news/2018/11/16/metrics-with-greater-utility-the-community-manager-use-case/\r\n\r\nShould we use this issue to track all possible use case contexts? 	2018-12-05 17:19:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693962	\N	Created a pull request to add this use  (#76)	2019-01-23 15:01:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693963	\N	@jgbarah @sgoggins \r\nIf PR #76 is completed and enough, I think we can close this issue.  	2019-04-10 15:28:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693964	\N	Yes, I think so. Thanks for the suggestion, @vchrombie.	2019-04-23 22:28:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1693965	\N	This pull request now fixes #35 as well; Explaining the working group in the README.md file. I also created a "contributing.md" file. 	2018-11-14 15:45:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693966	\N	Can I take up this?	2019-10-05 19:18:39	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277311
1693967	\N	Certainly. Thanks @vchrombie 	2019-10-06 12:14:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693968	\N	Could you please include a link to "the google doc"?	2019-09-23 18:53:10	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693969	\N	> Could you please include a link to "the google doc"?\r\n\r\nhttps://docs.google.com/document/d/1canGZZYi5iIYRU6qRMPDppfRIUlPSHlzjB5MCofbuf8/edit?usp=sharing\r\n\r\nThanks for reminding me!	2019-09-23 20:53:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1693970	\N	@germonprez or @klumb : Could you look this over to see how close it is to the standard structure that we currently are working with. I know we changed it in the past few weeks, and I am not sure if this is "it". :) 	2019-10-07 18:24:28	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693971	\N	I think this is where we are at\r\n\r\n**Description (required)**\r\n\r\n**Objectives (required)**\r\n\r\n**Implementation (required - sub-headings optional)** \r\n\r\n- Filters (optional). \r\n- Visualizations (optional). \r\n- Tools providing metric (was: known or sample implementations) (optional). \r\n- Data Collection Strategies (optional). \r\n- Success Metrics (optional) -- maybe reword this (To be discussed in the D&I WG) \r\n\r\n**Resources (required)**\r\n	2019-10-07 18:49:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693972	\N	Hi @tghastings -- Yes, the next meeting is planned for Monday, August 26th. Connection information here: \r\n\r\nhttps://chaoss.community/participate/	2019-08-25 12:09:55	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693973	\N	Thanks! 	2019-08-25 15:20:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277327
1693981	\N	Updated metrics release to conform to latest version of CHAOSS Standard Headings. 	2019-07-17 14:43:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693982	\N	About the `Elephant Factor`, we do not have it as a number. What we have are pie charts showing commits by organization. You need to manually calculate the number, e.g.:\r\n\r\n![donut-ors-hover](https://user-images.githubusercontent.com/3502941/60244577-f697e700-98ba-11e9-836b-3d9ac31deca4.png)\r\nFrom: https://chaoss.biterg.io/app/kibana#/dashboard/Overview\r\n\r\nIf we parametrize the elephant factor for Git contributions at 50%, then it is easy to know that is 1. I'd say it is usually easy to get the Elephant Factor from that charts. Another example for GitHub issues:\r\nhttps://chaoss.biterg.io/app/kibana#/dashboard/GitHub-Issues\r\n\r\nIt would be nice to have @jgbarah's view of this too.\r\n\r\n-----\r\n\r\nAbout `Commiters`, we directly have the number in evolution (sliced by time units) and in total (for the complete time range selected at the top right time picker) at Git panel:\r\n![Captura de pantalla de 2019-06-27 09-21-10](https://user-images.githubusercontent.com/3502941/60245479-f8fb4080-98bc-11e9-83cd-951a93ef4bf1.png)\r\n\r\n![Captura de pantalla de 2019-06-27 09-17-55](https://user-images.githubusercontent.com/3502941/60245332-ade12d80-98bc-11e9-99e1-9e94582ffc76.png)\r\nhttps://chaoss.biterg.io/app/kibana#/dashboard/Git\r\nFrom: https://chaoss.biterg.io/app/kibana#/dashboard/Git\r\n\r\nHope it helps!\r\n	2019-06-27 07:24:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1693983	\N	@GeorgLink do you want this added to the upcoming release?\r\n	2019-07-29 19:21:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693984	\N	Thanks for the ping. I'll create a pull request later today	2019-07-29 19:53:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693985	\N	@klumb I created two pr's, one for each metric: #40 and #41	2019-07-30 02:10:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693986	\N	The metric definition would benefit from examples using a few projects to illustrate test coverage metrics. So, run test coverage tools on 2-3 projects and illustrate the output. 	2019-07-01 18:27:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693987	\N	This should be rewritten as a statement: How much of a given code base is covered by at least one test suite. \r\n\r\n	2019-07-09 11:18:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693988	\N	A good test courage might control for code quality, moreover, a machine learning model can be trained  to suggest areas that need more coverage.  	2019-07-09 19:47:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1693989	\N	tested on my repo. Markdown image links are working properly on website with absolute url paths	2019-06-24 20:49:15	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693990	\N	Done. Label created: https://github.com/chaoss/wg-risk/labels/Metrics%20Candidate%20Release	2019-06-25 20:24:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693991	\N	Thanks	2019-06-25 20:25:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1693992	\N	Remove text in Test Cases	2019-07-09 12:37:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693993	\N	We will update the DOSOCSv2 source repository with @Nebrethar 's updates prior to release. 	2019-07-15 18:07:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693994	\N	NTIA SBOM should be added as a reference. https://www.ntia.doc.gov/SoftwareTransparency\r\n	2019-07-15 18:08:17	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693995	\N	The comment period has ended. Changes have been made. Closing issue.	2019-08-05 20:22:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693996	\N	For the SQL, should it be 'license declared' and not 'license concluded'? In SPDX, the former is what is used for the machine (i.e., nomos) identification of licenses. 	2019-07-09 12:32:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1693997	\N	@germonprez : I will verify that with @Nebrethar ... when i looked at what is getting populated I thought "concluded" was more clear ... 	2019-07-15 18:09:18	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1693998	\N	The comment period has ended. Changes have been made. Closing issue.	2019-08-05 20:27:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1693999	\N	@Nebrethar could you fix some of the image and font sizing on this? It is not consistent. \r\n*fixed*	2019-07-02 20:27:54	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694000	\N	The images for this are still really big. Could they be sized down? \r\n*fixed*	2019-07-09 12:30:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694001	\N	Further on this. I think that \r\n\r\n1) What is in Sample Filter/Visualization should be moved to Sample Implementation \r\n2) What is in Sample Implementation should be moved to Formula\r\n3) Sample Filter/Visualization should contain: \r\n\r\nTime: Licenses declared in a repository can change over time as the dependencies of the repository change. One of the principle motivations for tracking license presence, aside from basic awareness, is to draw attention to any unexpected new license introduction.\r\n\r\n*fixed*	2019-07-09 12:34:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694002	\N	PR opened for image resize. I also rearranged the sections as you stated.	2019-07-15 15:46:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1694003	\N	fixed	2019-07-29 18:36:45	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694004	\N	This: \r\n\r\nThis metric will illustrate quickly and visible if there is one license or more than one; and the larger the number, the more complex the considerations grow for decision makers.\r\n\r\nShould be: \r\n\r\nThis metric will illustrate quickly and visibly if there is one license or more than one; and the larger the number, the more complex the considerations grow for decision makers.\r\n\r\n**fixed**\r\n	2019-07-09 12:09:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694005	\N	LGTM. Nicely done. 	2019-07-09 11:16:20	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694006	\N	Looks good to me.	2019-07-09 19:41:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1694007	\N	"number of committers = distinct contributor ids over a time period" under Formula:\r\n\r\nQuick request for more description on this formula (how it is presented).\r\n\r\n**FINISHED**	2019-07-15 18:19:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1694008	\N	@GeorgLink : We could use a higher resolution image for the Elephant Factor graphic in risk metrics.  We are using a Bitergia example and its a little low resolution. 	2019-07-01 18:14:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1694009	\N	A few clunky sentences: \r\n\r\nFor example, one common filter is to say the elephant factor is to say 50% of the commits are performed by n companies and that is the elephant factor. \r\n\r\nA company evaluating open source software products might use an elephant factor to compare how dependent each projects is on a small set of corporate contributors.\r\n\r\n	2019-07-09 11:11:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694010	\N	Stackalytics[1] also implement this metric. Also, it is important if we can talk about join collaboration here. For example git has the co-authored-by trailer, etc. \r\n\r\n1. https://www.stackalytics.com/	2019-07-09 19:39:43	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1694011	\N	The comment period has ended. Changes have been made. Closing issue.	2019-08-05 20:22:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694012	\N	This looks good, I have two comments that we can discuss in the community meeting on June 25th. \r\nFirst, we need absolute paths for links and images in these detail pages because we are pulling them directly from the markdown file.  Second, for know implementations, I think we should include links to repositories or websites.\r\n\r\nAlso, are known implementations specifically "CHAOSS implementations"  or are we looking externally as well.\r\n	2019-06-24 15:53:57	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694013	\N	Ive seen different working groups attack those details in different ways and welcome a standard!  \n\nCan you merge it? I stepped away from my computer for a spell. \n\nThanks,\n\nSean P. Goggins\n(816) 368-1364\nhttp://www.seangoggins.net\n\n\n"I force people to have coffee with me, just because I don't trust that a friendship can be maintained without any other senses besides a computer or cellphone screen.‚Äù\n‚Äî John Cusack\n\n\nOn Jun 24, 2019, at 17:53, Kevin Lumbard <notifications@github.com> wrote:\n\nThis looks good, I have two comments that we can discuss in the community meeting on June 25th.\nFirst, we need absolute paths for links and images in these detail pages because we are pulling them directly from the markdown file. Second, for know implementations, I think we should include links to repositories or websites.\n\nAlso, are known implementations specifically "CHAOSS implementations" or are we looking externally as well.\n\n‚Äî\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.	2019-06-24 15:58:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1694014	\N	I don't have merge rights but I would say LGTM. 	2019-06-24 16:00:13	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694015	\N	Perfect @GeorgLink!	2019-06-24 14:22:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1694016	\N	Hi @GeorgLink,\r\nWe had started working on License related metrics some time ago. (as you might be aware of through the blog posts) and now are continuously looking for additions and improvements to it. You can find a list of ideas and mock visualizations at https://github.com/inishchith/gsoc-graal/issues/14. and the first iteration of the dashboard can be found at [CoLic-Dashboard](https://grimoirelab-incubator.biterg.io/app/kibana#/dashboard/07dadc50-9c19-11e9-82c4-37956b0c932a)\r\n\r\nPlease do have a look whenever convenient :)\r\n\r\n/cc @valeriocos 	2019-07-11 14:12:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1694017	\N	Thanks for the heads up. I'll take a look.\n	2019-07-11 14:48:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694018	\N	@sgoggins is Augur the only known implementation? Also, should that be a link to the Augur site?\r\n	2019-06-23 22:01:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694019	\N	I suspect that Augur is the only known implementation for this. Particularly from a CHAOSS tools perspective. The only other that might be worth checking out (but this could be done during the open period) would be FOSSology. \r\n\r\nYes, a link to AUGUR would be good... just the repo. 	2019-06-23 22:50:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694020	\N	> @sgoggins is Augur the only known implementation? Also, should that be a link to the Augur site?\r\n\r\nI'm pinging @alpgarcia and @valeriocos to see whether GrimoireLab has something. I think the [CoLic backend to Graal](https://github.com/chaoss/grimoirelab-graal#backends) has license information.	2019-06-24 02:29:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694021	\N	The CoLic backend provides license info (raw data), however the implementation of specific metrics (and visualizations) is an ongoing work in the context GSoC (cc @inishchith).	2019-06-24 07:16:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1694022	\N	@valeriocos Sorry for the delayed response.\r\nYes, We're about to start some work on it by later this week (As currently, we're getting ready with the first iteration of some visualizations with the help of CoCom backend data).\r\nPlease let me know if we're looking at something specific, we can have a discussion on it :)\r\n\r\nThanks!	2019-06-24 13:51:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277269
1694023	\N	I'll create a new issue to continue discussing GrimoireLab visualization for license information. This pull request may be merged and closed.	2019-06-24 13:57:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694024	\N	@georg, does it need its own issue or do you want to wait and add it the release comment issues?\r\n	2019-06-24 13:59:25	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694025	\N	@klumb I opened a new issue #13 to not delay this pull request. I would handle it separately from the general release comment issues because it is very specific enhancement and not a feedback.	2019-06-24 14:02:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694026	\N	@GeorgLink : I merged with approval and encourage modification during the evaluation period. 	2019-06-24 15:45:12	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1694027	\N	Please add your sign-off	2019-04-15 18:21:11	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694028	\N	Change is made	2019-03-27 03:52:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1694029	\N	The DCO signoff is not updating with changes to the final commit.	2019-03-25 20:39:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1694030	\N	> The DCO signoff is not updating with changes to the final commit.\r\n\r\nWhat do you mean? Did you `git commit --amend -s` and `git push -f` to add the DCO on a commit you had forgotten it?	2019-03-26 14:50:38	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694031	\N	I would suspect MIT based on the Charter as this will be documents	2019-03-25 20:40:49	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694032	\N	Thanks for the input. MIT is proposed in a PR	2019-03-26 16:32:41	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1694033	\N	Yes, [CHAOSS Charter section 8.2.3](https://chaoss.community/about/charter/#user-content-8-intellectual-property-policy) requires MIT for metrics.	2019-03-26 19:54:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694034	\N	Sure can. I'm working on core docs now.	2019-03-25 20:06:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277117
1694058	\N	I'll created a new issue #27 for the remaining discussion. Closing this thread because the comment period ended.\r\n	2019-08-05 20:55:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694059	\N	Thank you @bproffitt!\r\n\r\nI don't have time to review before the metric deadline but I think this is good.	2019-06-20 16:42:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694035	\N	Do we have a visualization for this metric in GrimoireLab?\r\n\r\nHere is what I came up with:\r\n![Screen Shot 2019-09-23 at 6 17 23 PM](https://user-images.githubusercontent.com/8862021/65470206-bef3f900-de2f-11e9-9b9f-08f65a26f9f4.png)\r\n![Screen Shot 2019-09-23 at 6 22 11 PM](https://user-images.githubusercontent.com/8862021/65470207-bef3f900-de2f-11e9-8da2-449db0e22e75.png)\r\n\r\nI'm not happy with this visualization. I would like to aggregate the commits across days for each hour of the day.\r\n\r\nMaybe we could discuss during one of our Tuesday GL meetings, how to add a field in the index to that calculates the time of day and would allow the kind of visualization that I envision.\r\n\r\n/cc @alpgarcia @dicortazar @sduenas @valeriocos 	2019-09-23 23:28:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694036	\N	The information is already in `grimoire_creation_date` field. I think it's a matter of extracting day and time of such date. Perhaps with [Painless](https://www.elastic.co/es/blog/using-painless-kibana-scripted-fields), that would require some web browser processing, or during enrichment phase with Grimoire-ELK.\r\n\r\nAn step beyond would be to produce such metric/information during enrichment phase, and to make it a *common* field for all data sources, not just commits. Some information that might be derived from such field could be:\r\n* Day of the week for a contribution\r\n* Time of the day for a contribution\r\n\r\nAnd for visualization, I would recommend a heat map, with days of the week range in the x-axis, and day hours in the y-axis	2019-09-24 03:40:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1694037	\N	If it's for commits, with just Perceval you could get such info as shown in [this example](https://gitlab.com/jsmanrique/my-jupyter-notebooks/blob/master/MyUtils.py#L122) using [Python dateutil](https://dateutil.readthedocs.io/en/stable/):\r\n```python\r\n...\r\nfrom dateutil import parser\r\n...\r\n\r\ncommit_date = parser.parse(commit['data']['AuthorDate'])\r\n...\r\n  'weekday': commit_date.isoweekday(),\r\n  'hour': commit_date.hour,\r\n...\r\n\r\n```	2019-09-24 03:53:06	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1694038	\N	I'd say adding those fields to the enricher would be the best option in terms of performance. As this is not going to be recalculated (others, like time opened needs to be calculated on the fly) I'll avoid to use painless.\r\n\r\nI guess it would be easy to add these fields on GELK, @valeriocos wdyt?\r\n\r\nOn the other hand, for a quick PoC, we could try with painless. We would need the right function to convert the date, though. 	2019-09-24 09:51:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1694039	\N	> I guess it would be easy to add these fields on GELK, @valeriocos wdyt?\r\n\r\nyes	2019-09-24 10:14:47	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1694040	\N	@GeorgLink if you want this feature to be included in GL, please create an issue in the Grimoirelab repository. With @sduenas we will plan the work to be done, thanks.	2019-09-24 10:24:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277242
1694041	\N	@valeriocos I created issue https://github.com/chaoss/wg-common/issues/29 and hope that maybe we can work on it together during today's CHAOSS GL call ... maybe even create a PR together :D	2019-09-24 14:11:30	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694042	\N	Thank you @alpgarcia for the PoC for the visualization. This is what I was trying to explain:\r\n![image](https://user-images.githubusercontent.com/1178305/65528751-40618f00-def5-11e9-8f36-53c8c3c3a9de.png)\r\n	2019-09-24 16:01:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277238
1694043	\N	During the CHAOSS GrimoireLab call, we built the visualization.\r\n\r\n@valeriocos shared:\r\nhttps://github.com/chaoss/grimoirelab-elk/pull/691\r\n\r\nWe built a painless implementation and created a histogram:\r\n![Screen Shot 2019-09-24 at 10 54 40 AM](https://user-images.githubusercontent.com/8862021/65528847-bd234780-deba-11e9-9a3b-2962a7ccc758.png)\r\n\r\nAlso of note is the heatmap shared above: https://github.com/chaoss/wg-common/issues/29#issuecomment-534626883	2019-09-24 16:02:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694044	\N	Let's go with @germonprez's suggestion of\r\n\r\n* New organizations that contribute to the project\r\n* Organizations that new contributors belong to	2019-08-08 15:26:14	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694045	\N	This is no longer needed. The comment period is over.	2019-07-25 15:09:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694046	\N	How do you account for accurate curation of multiple and/or shifting email addresses? 	2019-07-09 16:41:36	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694047	\N	And individuals changing organization over time.	2019-07-09 16:43:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277326
1694048	\N	One way to deal with this problem is to encourage a centralized account system, for example, OpenStack uses a kind of one account whereby a contributor can be identified on several login system such as Gerrit, Launchpad, Storyboard with just one login credential. \r\n\r\nThis way, Even if persons change organization or add multiple emails, they will still be identified as one person.	2019-07-09 16:48:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277313
1694049	\N	In the strategies section, let's add the following bullet.\r\n\r\n* Depending on the needs of the project, you may want to consider such issues as how to handle multiple email addresses, affiliation changes over time, or contractor vs. employee.	2019-07-11 15:40:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694050	\N	PR to implement this change: https://github.com/chaoss/wg-common/pull/24	2019-07-11 15:42:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694051	\N	Requested #25 in order to align better with template order. 	2019-07-15 19:19:46	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694052	\N	Under the "Quantitative" section, what's the difference between New Contributing Organizations (7th bullet) and New Contributor Organizations (8th bullet)?	2019-07-17 05:14:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1694053	\N	Minor edit (2nd bullet under strategies): \r\n"Identify contributor affiliations to get a good estimate of which organizations they belong **_to_**"	2019-07-17 05:15:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277307
1694054	\N	@geekygirldawn  and @bproffitt : Do you know what the difference between the 7th and 8th bullets are intended to represent? \r\n- New Contributing Organizations (7th bullet) and \r\n- New Contributor Organizations (8th bullet)?	2019-07-25 15:13:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1694055	\N	@sgoggins I believe we were differentiating between organizations that contribute as an organization and which organizations contributors belong to.	2019-07-25 15:22:50	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277329
1694056	\N	Could they be written like that: \r\n\r\n- New organizations that contribute to the project \r\n- Organizations that new contributors belong to\r\n\r\n	2019-07-25 15:47:01	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694057	\N	Ray's minor edit had been done: https://github.com/chaoss/wg-common/commit/ac5604be485ac1696394bb7f916baa0352404157\r\n	2019-08-05 20:47:29	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694060	\N	Commit Hours is done but has been renamed to Activity Dates and Times	2019-10-17 15:23:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694061	\N	I made comments on the document. \r\n\r\n@alpgarcia, maybe you could help add information on where to find organizational affiliation data in GrimoireLab.	2019-06-15 06:28:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694062	\N	@GeorgLink not sure if you mean at the level of specific components dealing with affiliations information or in terms of final information available.	2019-06-18 08:59:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1694063	\N	@alpgarcia I was thinking about the same edits we made to the Evolution WG metrics. The idea would be to add a sample visualization with description on how to create it in GrimoireLab. ... I realize that this Organizational Diversity metric can have many visualizations, but maybe we can limit ourselves to the basic pie-chart that is on the default panel.	2019-06-18 12:35:42	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694064	\N	@GeorgLink there is a [specific dashboard for Affiliations](https://chaoss.biterg.io/app/kibana#/dashboard/Affiliations) that could help to see this in action for CHAOSS community. The goal of the dashboard is easing affiliations management. At the same time it provides a view of organizational diversity based on a pie and a table, with some extra filters to play around.\r\n\r\nSo maybe we could mention the panel and explain how to build the pie chart, as we did for Evolution WG metrics?	2019-06-18 12:49:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1694065	\N	Thank you @alpgarcia. I tried my hand by adding to directly into the google doc linked in the first issue. What do you think, does this address your suggestion.	2019-06-18 12:58:44	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694066	\N	I've added a comment directly on the document trying to explain the implications of using `all_onion` instead of `affiliations`.	2019-06-18 15:00:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277245
1694067	\N	Thank you @alpgarcia we should fix it according to your suggestion. Whoever has time first can pick this one up.	2019-06-18 16:54:52	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694068	\N	This was done for the release	2019-08-08 15:26:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694069	\N	Looks great - thanks @germonprez for capturing the conversation spot on!	2019-06-13 15:10:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277330
1694070	\N	What is the current state of Responsiveness metrics? Not sure if there are particular metrics that are being developed. Particularly \r\n\r\nTime to close\r\nand\r\nTime to first response\r\n\r\n	2019-06-13 15:57:40	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694071	\N	Here are the docs where we are developing these metrics.\r\n\r\nTime to first response: https://docs.google.com/document/d/1fUTQqGS1WheK01qQrtBRFBX1W_9fLfKfCHr2vIzcbAI/edit#heading=h.d6dkzltsg2wq\r\n\r\nTime to close: https://docs.google.com/document/d/1bwCDOFr2ILss3mtCtIItteUD-ei7sjLb5EPayAmQzR4/edit?usp=sharing	2019-06-25 13:39:32	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694072	\N	A question if I may, is there yet a direction here on measuring the actual textual sentiment in responses?  (EG - natural language processing to measure positive/negative sentiment in comments?).  I understand there's something like this happening in CrossMiner and wasn't clear if that kind of measurement is completely out of scope for CHAOSS?  	2019-07-10 22:47:05	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277331
1694073	\N	Textual sentiment analysis comes up occasionally and is something CHAOSS is\ninterested in. The community have focused on lower hanging fruits so far\nbut I'm sure we are open to including a CrossMiner inspired metric for\nsentiment analysis.\n	2019-07-11 03:58:33	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694074	\N	I think responsiveness and sentiment are two different metrics. Responsiveness should just focus on time. Sentiment should be built separately and a composite or collection/dashboard of responsiveness and sentiment could be discussed. 	2019-08-08 15:33:09	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277148
1694075	\N	Merging my own pull request again, mostly to fix the spacing issue introduced in the last commit.	2019-05-23 09:10:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694076	\N	Merging my own pull request, since it's a change we discussed, and it's been sitting here for 3 weeks :) 	2019-05-23 09:03:48	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694077	\N	Good point, @sgoggins. In GrimoireLab we're using [SortingHat](https://github.com/chaoss/grimoirelab-sortinghat) for that purpose. It provides a Python API to an SQL database where you can store and curate information related to identities (not only email addresses) of developers, affiliations, and that sort of stuff. Then, it can be queried by other tools to retrieve, eg, all identities for a developer, or the affiliation of a certain developer.\r\n\r\nI agree that GDPR may apply, depending on the context. When you're talking about "a Mozilla project", is that some project in particular, or maybe something that they may do? 	2018-06-04 07:19:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277192
1694078	\N	Organizational Affiliation List:\n- Something like ORCID.org for developers?\n- Or a Keybase.io account?\n- Or an enhanced GitHub account with additional links to other identities?\n\nOn Mon, Jun 4, 2018 at 2:19 AM, Jesus M. Gonzalez-Barahona <\nnotifications@github.com> wrote:\n\n> Good point, @sgoggins <https://github.com/sgoggins>. In GrimoireLab we're\n> using SortingHat <https://github.com/chaoss/grimoirelab-sortinghat> for\n> that purpose. It provides a Python API to an SQL database where you can\n> store and curate information related to identities (not only email\n> addresses) of developers, affiliations, and that sort of stuff. Then, it\n> can be queried by other tools to retrieve, eg, all identities for a\n> developer, or the affiliation of a certain developer.\n>\n> I agree that GDPR may apply, depending on the context. When you're talking\n> about "a Mozilla project", is that some project in particular, or maybe\n> something that they may do?\n>\n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/chaoss/metrics/issues/99#issuecomment-394257675>, or mute\n> the thread\n> <https://github.com/notifications/unsubscribe-auth/AIc5RWI0HoF9SYw6_vF8NmZyx007Q0Uyks5t5N-AgaJpZM4UXUAT>\n> .\n>\n	2018-06-04 12:07:21	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694079	\N	What is the status of this? Not being implemented? Can this issue be closed? 	2019-03-25 19:56:58	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694080	\N	@germonprez : The prevalence of tools cannot be confused with this being a solved problem at this time. There remains a high need and limited trust for shared maintenance of something like this right now. 	2019-03-25 22:29:04	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1694081	\N	Not suggesting it's solved, just wondering the status. No problem if it stays open 	2019-03-25 23:54:27	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
1694082	\N	There are two dimensions to this issue: \r\n1. Providing individual implementations of software a mechanism or set of metrics that can be used to curate the individuals contributing to their projects, whom they know. The assumption is that identity lists will be maintained privately in this case. \r\n2. Providing a shared, anonymized, and centralized infrastructure for managing developer identity across the open source ecosystem.  In this case, something like Hyperledger's Indy project is optimal. 	2019-06-06 15:11:34	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277110
1694083	\N	@germonprez What is wrong with the pip install from github? Also, would you like me to move the install script in the separate repo to this repo?	2017-01-23 20:06:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:08:56	277111
1694084	\N	Nothing wrong with it. Happy to change. \r\n\r\nYea, I think that the install script should be in this repo. 	2017-01-23 20:48:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:08:56	277118
1694085	\N	@germonprez Sounds good!	2017-01-23 20:49:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:08:56	277111
1694086	\N	Thank you!	2017-02-02 16:52:16	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:08:58	277111
1694087	\N	@srobins259 I can't merge this into master because it's based on exploratory and we're not ready to roll that out yet.	2017-02-02 16:50:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:08:59	277111
1694088	\N	Looks great, thanks!	2017-02-02 16:50:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:00	277111
1694089	\N	Thanks!	2017-02-02 16:53:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:01	277111
1694090	\N	Here is a screenshot of what it looks like if you don't have `msr14` and want to know before it's live online:\r\n\r\n<img width="1248" alt="screenshot 2017-02-10 20 06 12" src="https://cloud.githubusercontent.com/assets/835856/22850486/8d1da076-efcf-11e6-8f7c-ace90410b1a9.png">\r\n	2017-02-11 02:29:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:02	277111
1694091	\N	Nice! Thanks for pushing this forward @howderek 	2017-02-11 13:04:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:02	277118
1694092	\N	@GeorgLink Looks good and feel free to push commits directly to dev!	2017-02-15 16:01:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:03	277111
1694093	\N	Thanks!	2017-03-13 20:50:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:04	277111
1694094	\N	All checks passed. Merging. 	2017-09-07 17:30:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:09	277110
1694095	\N	Great! I like it!	2017-10-13 21:34:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:10	277126
1694096	\N	Great to see a CoC added. One minor comment - it isn't clear who the "project team" is that will receive messages to outdoors@acm.org. It might be useful to explicitly state who is on that list, or point to the place in the repo/website where that information is updated.	2017-10-16 08:48:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:10	277199
1694097	\N	Closing pull request to make specific changes suggested by npch. 	2017-10-19 15:35:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:10	277110
1694098	\N	maintainers - this PR just edits the `README.md` file. The test failures here probably aren't related to the patch. Or if they are, I'd appreciate some help understanding how exactly :-)	2018-01-26 15:13:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:14	277129
1694099	\N	@mureinik  I agree with your assessment that your edits should not fail the CI build test	2018-01-26 16:11:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:14	277126
1694100	\N	@mureinik thanks!	2018-01-27 01:38:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:14	277111
1694101	\N	Thank you!	2018-02-27 03:38:24	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:15	277111
1694102	\N	The public directory is updated by Brunch and is only tracked by Git for an easier time for our Docker deployment. Both the Brunch server and Docker NGINX configuration will serve the file correctly. Please use `brunch watch -s` for local testing (this will also proxy your API requests so it will work, it won't work if you just open the HTML file regardless of if the paths are correct).	2018-02-27 03:45:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:16	277111
1694103	\N	Thanks so much!	2018-03-01 22:17:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:17	277111
1694104	\N	Thanks!	2018-03-28 04:54:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:18	277111
1694105	\N	Thanks!	2018-05-01 21:04:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:19	277111
1694106	\N	Thank you so much :)	2018-05-03 02:45:51	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:20	277111
1694107	\N	Thank you!	2018-05-03 02:47:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:21	277111
1694108	\N	Looks great, thank you!	2018-05-03 02:48:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:22	277111
1694109	\N	@howderek : It looks like the failing issue is probably a rate limit on the GitHub API. Could you look into this so we know what's up with the failing dev build. I don't think its just this pull request. 	2018-05-17 23:08:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:24	277110
1694110	\N	Hi @kmn5409, I cannot accept these changes because it references changes in dev but is being pushed to master	2018-05-18 14:15:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:24	277111
1694111	\N	Looks good, thanks!	2018-05-18 17:18:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:25	277111
1694112	\N	Hi @kmn5409 thank you for bring this to our attention, this was fixed in bd4d683	2018-06-06 15:34:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:27	277111
1694113	\N	Hello @OrkoHunter, thank you so much for your pull request! We have been working on updating docs right now and we noticed this bug in 8467d94e71228286062e057690fadafa5d1dee09 which was merged to master today. If you would like to keep up with our latest development efforts, please checkout the `dev` branch. 	2018-06-18 23:48:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:30	277111
1694114	\N	Thanks @howderek! I just learned about the `dev` branch and would love to contribute :)	2018-06-18 23:51:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:30	277177
1694115	\N	I did not mean to bring your commits with me for PR. Not sure how that happened.	2018-09-18 19:25:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:38	277117
1694116	\N	Thank you @Nebrethar !	2018-10-12 17:35:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:39	277111
1694117	\N	@Nebrethar if you're comfortable making the proposed changes, then I feel comfortable merging.	2018-12-23 20:53:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:41	277112
1694118	\N	@Nebrethar: as part of this effort to make everything clearer, I can write up a small section covering the configuration file in the developer docs as well. I think this is a sensible default, thanks for doing this!	2019-01-03 20:44:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:41	277112
1694119	\N	This creates some licensing issues, of which I was unaware when making the change.	2018-11-21 00:49:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:42	277112
1694120	\N	Hey @t9m! We appreciate your eagerness to help us deploy, but our `testing` branch is not currently ready for deployment to `master`. If you'd like to help out, I suggest setting up a local installation of Augur (documentation available [here](http://twitter.augurlabs.io/static/docs/dev-guide-toc.html)) and running the current build on the `testing` branch to help us find any bugs. \r\n\r\nThanks again and happy holidays!	2018-12-27 20:09:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:44	277112
1694121	\N	Are you ready to merge yet @gabe-heim?	2018-12-29 19:49:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:45	277112
1694122	\N	I'm unable to reproduce these errors in `dev`. If you check out the latest version of `dev`, does Augur work for you @Nebrethar? 	2019-01-03 19:12:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:46	277112
1694123	\N	The steps I take to reproduce this issue are:\r\n\r\n-Install fresh for Ubuntu (including necessary conda environment repair and changing pip->pip3 in makefile to avoid installing to py2.7)\r\n-gir checkout dev\r\n-`Make dev` or `augur` command both produce issues\r\n-Apply these fixes to resolve runtime issues\r\n\r\nThis is performed on Ubuntu 16.04 / 18.04 ( I have performed the fix on both). I've done this mostly with my area's local augur server.	2019-01-04 03:58:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:46	277117
1694124	\N	I also just recently started to run into this issue. The first time I saw it was probably late November.\r\n\r\nEDIT: I am pretty sure it was actually closer to [this commit from about half a month ago.](https://github.com/chaoss/augur/commit/2bfb3be655dea81bc395d69791cc74cec2256a3c)\r\nFor some reason the installations I have been using cannot recognize the `f` and I have to work around it.	2019-01-04 04:00:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:46	277117
1694125	\N	Okay, maybe the issue is related to Ubuntu then? I haven't run into this (I'm running macOS Mojave). That seems weird to me that these Python issues are only occurring for you. I've not had to change `pip` to `pip3` in the Makefile or apply any of the other changes, and everything works for me.\r\n\r\nHowever, our hosting server runs Ubuntu 16.04 and has no problems with the latest version of `dev` which doesn't help my suspicions. I'll continue to look into this.\r\n\r\nIn the meantime, any ideas @howderek?	2019-01-04 04:32:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:46	277112
1694126	\N	@ccarterlandis : if it all looks good to you go ahead and merge. 	2019-01-10 02:02:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:48	277110
1694127	\N	Hey @ccarterlandis, the Travis CI builds of my PRs keep on failing. On checking the build logs seems like there is some issue connecting to the database in the builds resulting in various errors.\r\n\r\nAm I doing something wrong?	2019-01-23 12:49:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277113
1694128	\N	Sorry to hear that you're having trouble, @parthsharma2. Has it been working up to this point? Because I have a hunch as to what the problem might be, but just for sanity's sake, could you tell me what happens when you run `make dev`? Feel free to just post a screenshot or c/p the logs, whatever you prefer!	2019-01-23 14:49:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277112
1694129	\N	On running `make dev` i get the following `make: conda: Command not found` since i'm not using anconda and have set up my own python virtual environment :sweat_smile:\r\n\r\nOn the other hand on further examining the Travis CI build logs the following line caught my eye `Encrypted environment variables have been removed for security reasons` and lead me to https://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions. I think the following quote from the documentation might be the reason \r\n\r\n> Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.\r\n\r\n> Pull requests sent from forked repositories do not have access to encrypted variables or data.	2019-01-23 16:02:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277113
1694130	\N	I didn't know about that, but that makes perfect sense! All of our builds are passing, and if I remove all the configured environment variables and run the tests I get similar errors. I say we chalk it up to this and not worry too much about it. üòâ \r\n\r\nHave you run into any problems not using Anaconda? We have been considering ditching it since it's kinda annoying to work with, I'm curious to hear about your mileage.	2019-01-23 16:24:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277112
1694131	\N	Currently, I've only been playing around with `datasources.githubapi` and it seems to be working well till now. I'll experiment a bit more and let you know. And also a +1 for ditching Anaconda.	2019-01-23 16:50:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277113
1694132	\N	Everything seems to be working fine in the virtual environment. The server's working, the routes are being made, the endpoints are working and the metrics statuses are being displayed. \r\n\r\nOnly parts dependent upon Anaconda such as the make file need to be changed.	2019-01-24 16:47:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277113
1694133	\N	@ccarterlandis : I took a look at what this pull request is doing and its using the GitHub API.  I have not configured Travis at all, so my question may be naive ... but do we have a GitHub API Key in the travis build? 	2019-01-25 11:02:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277110
1694134	\N	@ccarterlandis and @parthsharma2 : I do think its a GitHub API Key configuration in TRAVIS issue. (i.e., the issue is NOT the code that @parthsharma2 submitted, but our Travis config.)\r\n\r\nHere's the bottom of the log: \r\n\r\n[1m[31mE           KeyError: 'data'[0m\r\n\r\n[1m[31maugur/datasources/githubapi/githubapi.py[0m:265: KeyError\r\n---------------------------- Captured stderr setup -----------------------------\r\n2019-01-25 10:57:43 travis-job-3cafaeb8-c86b-423c-9509-397bfd357318 augur[3669] ERROR /home/travis/build/chaoss/augur/augur.config.json could not be parsed, using defaults. Fix that file, or delete it and run this again to regenerate it. Error: Expecting value: line 1 column 1 (char 0)\r\napplication.py              67 ERROR    /home/travis/build/chaoss/augur/augur.config.json could not be parsed, using defaults. Fix that file, or delete it and run this again to regenerate it. Error: Expecting value: line 1 column 1 (char 0)\r\n------------------------------ Captured log setup ------------------------------\r\napplication.py              67 ERROR    /home/travis/build/chaoss/augur/augur.config.json could not be parsed, using defaults. Fix that file, or delete it and run this again to regenerate it. Error: Expecting value: line 1 column 1 (char 0)\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\napplication.py             119 DEBUG    {plugin_name} plugin loaded\r\n__init__.py                 18 DEBUG    Initializing GitHub API\r\n------------------------------ Captured log call -------------------------------\r\nconnectionpool.py          813 DEBUG    Starting new HTTPS connection (1): api.github.com:443\r\nconnectionpool.py          393 DEBUG    https://api.github.com:443 "POST /graphql HTTP/1.1" 403 None\r\n[31m[1m===================== 34 failed, 1 passed in 22.35 seconds =====================[0m\r\ntravis_time:end:0274a67c:start=1548413841738971342,finish=1548413864612720153,duration=22873748811\r\n[0K[31;1mThe command "python -m pytest augur/datasources/**/test_**.py" exited with 1.[0m\r\n\r\n\r\n\r\nDone. Your build exited with 1.\r\n	2019-01-25 11:11:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277110
1694135	\N	.. hmmm ... top of the file says "KEY ERROR" .. however, the details of the bottom of the log fail suggest something amiss in the augur.config.json ... I could be wrong about it being the GitHub API key, or that error could be indicating that the augur.config.json does not include a GitHub API key in our test environment. 	2019-01-25 11:13:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277110
1694136	\N	@sgoggins: @parthsharma2 and I chalked the issue up to this, from the Travis docs as pointed out by @parthsharma2: \r\n\r\n> Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.\r\nPull requests sent from forked repositories do not have access to encrypted variables or data.\r\n\r\nSince @parthsharma2 is making the commits from his repository and not ours, he doesn't have access to those encrypted variables (including the GitHub API key), meaning that **no matter what he does**, the tests won't pass on his branch. As a result, I'm going to go ahead and merge these changes and then run the build again and see if it'll pass. If it doesn't, we'll fix it!\r\n	2019-01-25 17:21:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:51	277112
1694137	\N	@ccarterlandis : Let me know about the failed travis check. 	2019-01-24 21:56:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:53	277110
1694138	\N	@ccarterlandis : Is this one also planetary in nature? 	2019-01-25 10:42:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:53	277110
1694139	\N	![image](https://user-images.githubusercontent.com/34951354/51704907-d4363080-1fdf-11e9-8472-5e759b15a56c.png)\r\n	2019-01-24 19:56:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:54	277117
1694140	\N	@ccarterlandis : Thoughts on the build failure? 	2019-01-24 21:58:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:54	277110
1694141	\N	@sgoggins: The build failed because the alignment of the planets was off. You think I'm kidding, but I only wish I were...some tests are **very** finicky and sometimes, they just won't pass. Re-triggering the build usually makes it work (as it did this time), but we'll have to address this the inconsistency at another date.	2019-01-24 22:19:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:54	277112
1694142	\N	Rodger that.  \n\nOnce again the physicists and astronomers prove useful.\n\nSean \n\n> On Jan 24, 2019, at 4:19 PM, Carter Landis <notifications@github.com <mailto:notifications@github.com>> wrote:\n> \n> @sgoggins <https://github.com/sgoggins>: The build failed because the alignment of the planets was off. You think I'm kidding, but I only wish I were...some tests are very finicky and sometimes, they just won't pass. Re-triggering the build usually makes it work (as it did this time), but we'll have to address this the inconsistency at another date.\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub <https://github.com/chaoss/augur/pull/224#issuecomment-457379766>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AAXLxy890PCP4kXX00rCE_MEWSC-p0uAks5vGjFfgaJpZM4aRmXm>.\n> \n\n	2019-01-25 10:41:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:54	277110
1694143	\N	(I think the documentation updates are in master but not dev.)	2019-01-25 11:08:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:56	277110
1694144	\N	@gabe-heim before we merge, I'd like your review as well since this contains some new stuff in the Risk card.	2019-01-25 20:12:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:56	277112
1694145	\N	I'm not quite sure I understand the idea behind the `preinstall` concept (that's probably just a me thing). We don't explicitly depend on Anaconda to make everything work; that is, one can get the project running just fine without it, but it makes the Python version management easier. Additionally, I think that just attempting to install things and observing what fails and what doesn't is just fine. If I'm missing something, by all means please correct me!	2019-02-21 17:14:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:09:59	277112
1694146	\N	The CI build has immediately failed. I just wanted to mention this.	2019-02-20 18:04:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:01	277117
1694147	\N	@Nebrethar: these changes look good to me. We're about to release the Vagrant stuff, so if it's okay with you, I'd like to pull these changes into `hotfix`, and then merge them into `master` at the same time as the Vagrant stuff for a coordinated release.	2019-02-21 16:33:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:01	277112
1694148	\N	@Nebrethar : I think we will wait as @ccarterlandis suggests, but I am also keen to get this online and I think I am the last task person holding @ccarterlandis back right now ... so I will finish my work shortly. (ghtorrent baby copy)	2019-02-21 16:38:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:01	277110
1694149	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Merge vagrant work into dev](https://trello.com/c/djZ1ed2C/8-merge-vagrant-work-into-dev)	2019-03-06 18:39:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:03	277112
1694150	\N	Merged and pushed via CLI in [this](https://github.com/chaoss/augur/commit/943f52534dacedec3b6599dad17a82fa1520b1e0) commit. While attempting to resolve the merge conflicts, I accidentally merged `vagrant` into `dev` first instead of the other way around.	2019-03-08 16:40:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:03	277112
1694151	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Release v0.9.1](https://trello.com/c/5qvyPIaY/22-release-v091)	2019-03-07 21:32:43	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:06	277112
1694152	\N	![](https://github.trello.services/images/mini-trello-icon.png) [Review PR for release v0.9.1](https://trello.com/c/DW8Lmgbw/35-review-pr-for-release-v091)	2019-03-11 23:30:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:06	277112
1694153	\N	@gabe-heim not to be that guy, but to be that guy, but would you be able to reword your commit messages for consistency? \r\n\r\nIn their current form, I don't know what 'new use case metrics vizs' means- did you fully implement them, just plan them out, are they half done, or what? Similarly, what are the "tweaks" you made to the use case metrics and the "improvements" to MainControls.vue? I'm sure you know what they are in your head, but I don't know what they are, and I can't read the source code well enough to figure that out at a glance.\r\n\r\nI hope I'm not overstepping my bounds here, it just helps me and the rest of the team have clearer visibility of what you're doing (and we very much appreciate what you're doing). [This](https://chris.beams.io/posts/git-commit/) a good read about how to write a good commit message and why it's important.	2019-03-10 14:45:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:07	277112
1694154	\N	Note: you might not be able to edit the second last one, `bef3b6e`. You can edit the last one with `git commit --amend "<your commit message>"` and then `git push --force`.	2019-03-10 14:47:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:07	277112
1694155	\N	Merged on the command line as of [this](https://github.com/chaoss/augur/commit/71652ff8d9540d3a8fdc97eddc9ded31be974815) commit.	2019-04-05 23:01:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:07	277112
1694156	\N	@ccarterlandis made the requested changes.	2019-03-11 14:56:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:08	277113
1694157	\N	What is this? @sgoggins 	2019-04-01 23:55:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:09	277112
1694158	\N	See [this](https://github.com/chaoss/augur/pull/249) PR.	2019-04-05 23:02:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:09	277112
1694159	\N	Merging this into `hotfix` to be released with other bug fixes in v0.9.3. Thanks for catching this and finding the fix @alexcourouble, much appreciated!	2019-03-15 03:39:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:11	277112
1694160	\N	@sgoggins am I good to merge this?	2019-03-26 15:27:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:13	277112
1694161	\N	@ccarterlandis : DO we expect all checks to fail on travis for this branch, or is something awry? 	2019-03-26 14:16:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277110
1694162	\N	@sgoggins @tretrue the Vagrantfile should not have been deleted, I'm assuming that's erroneous but it needs to be restored before this can be merged. Additionally, the Travis CI builds are failing because `setup.py` got renamed as per my review above.\r\n\r\n@tretrue any idea what that `.css.css` file is? I don't think that's supposed to be there either.	2019-03-26 14:28:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277112
1694163	\N	@ccarterlandis i renamed setup and deleted the css.css, must have been a duplicate file. where was the Vagrantfile supposed to be located? i can get it back in there real quick.\r\n	2019-03-26 15:56:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277119
1694164	\N	@tretrue thanks for making those changes. Have you tested the endpoints?	2019-03-26 16:08:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277112
1694165	\N	@ccarterlandis : @howderek said he would look them over because of how much I had to change up the 'facade_cli' file (to get rid of the cursor and what not). I was planning on testing after getting his okay because thats what he suggested i do.	2019-03-26 16:14:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277119
1694166	\N	@tretrue okay. I think it would be a good idea for you to test them yourself too and try to diagnose any errors that come up. Start by running `make test-ds SOURCE=facade` and trying to fix the errors you can, I've already found some that aren't related to the implementation changes in `facade_cli.py`.	2019-03-26 16:29:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277112
1694167	\N	@ccarterlandis okay sounds good thank you. I have some things going on today, but i should be able to knock out a good chunk of it!	2019-03-26 16:41:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277119
1694168	\N	@tretrue : Can you update the status on this? \r\nHave  you tried it yourself? \r\nWould you like to chat about this? 	2019-03-29 16:59:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277110
1694169	\N	@tretrue : can you provide a summary of what's in this pull request in terms of functionality that's added and what remains to be done? 	2019-03-29 17:05:16	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277110
1694170	\N	@sgoggins : the status is that it is still needed to be reviewed by Derek. I have fixed all the bugs that should be associated with the files, the big thing is that i had to restructure all the cli functions to get rid of the `cursor` parameter (Derek's idea). Derek suggested that when i am done restructuring to just make a pull request so he can look it over. I haven't really had time over break after implementing to fully try them out, and I was mainly waiting on Derek to check it out, because it probably has some (very minor but crucial) mistakes that he'd be able to very quickly point out for me to fix. I will be back home this Sunday to test them regardless of whether or not Derek reached this, but he told me not really to worry and that there wasn't a huge rush on his end.\r\n\r\nThe functionality of this request is enabling the utilization of the facade cli functions, and provides routes for said functions.	2019-03-29 18:02:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:15	277119
1694171	\N	How is the `facade_cli` package installed?	2019-03-31 15:30:24	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:16	277111
1694172	\N	@howderek : Right now I think @tretrue is including it as a file in one of the augur directories. In the long run I think we can pip install facade. I have the ok in principle from @brianwarner to license facade under MIT (though I think our worker architecture will make this immaterial). Right now we are doing POC work. I have a substantially optimized version of facade's worker that I have been developing, so I think Tre and I can circle back together next week. 	2019-03-31 15:52:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:16	277110
1694173	\N	In that case, the `facade_cli.py` file should be included in one of these commits\r\n\r\nEdit: ope I see it now, lemme test	2019-03-31 16:43:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:16	277111
1694174	\N	@tretrue rather than modify facade_cli.py, we should move the functions into facade.py	2019-03-31 16:48:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:16	277111
1694175	\N	@howderek : Okay, ill get started on getting them over to `facade.py` as soon as I can! 	2019-03-31 17:25:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:16	277119
1694176	\N	@ccarterlandis : It seems like there is an issue with database connectivity when I look at the Travis build. I just reran it. Can you assess wha'ts going on? I think its probably one thing in all cases. 	2019-04-02 14:44:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:17	277110
1694177	\N	@sgoggins AFAIK currently the Travis Build is configured to use Environment Variables rather than the values from the config files. This results in the following\r\n\r\n> Travis CI makes encrypted variables and data available only to pull requests coming from the same repository. These are considered trustworthy, as only members with write access to the repository can send them.\r\n> Pull requests sent from forked repositories do not have access to encrypted variables or data.\r\nhttps://docs.travis-ci.com/user/pull-requests/#pull-requests-and-security-restrictions	2019-04-02 15:28:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:17	277113
1694234	\N	@bing0n3 / @ccarterlandis  / @gabe-heim : I am not sure what to do here. 	2019-08-19 00:57:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:23	277110
1694235	\N	@ccarterlandis @gabe-heim ; I have resolved all the merge conflicts on my computer at home .... I need a review to push the changes. 	2019-08-16 10:54:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:26	277110
1694178	\N	I think the main issues why the Travis CI build fails is environment variables. Since the database configuration is stored as environment variables and my pull request is external (i.e. not from the same repository or from someone who has write access to the repo), Augur isn't able to read the environment variables and connect to the database. @ccarterlandis @sgoggins could you try running the Travis Build using the `augur.config.json` to load the database config instead of environment variables? 	2019-04-03 11:15:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:17	277113
1694179	\N	@parthsharma2 regarding the Travis build problems: the `augur.config.json` is not checked into Git, meaning that Travis will not be able to use it. We also can't unencrypt the variables, as we don't want to expose our credentials to the public! As such, I don't see a way around this issue for now, but I do very much want to investigate this further and find a solution.	2019-04-03 14:40:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:17	277112
1694180	\N	@parthsharma2 : congrats on having your GSOC pull request merged! I will be looking for your completed app in my augur project inbox! @ccarterlandis : Thanks for the assist!! :) 	2019-04-05 21:27:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:17	277110
1694181	\N	Thank you @sgoggins @ccarterlandis. I look forward to working with you all :smile:	2019-04-06 13:27:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:17	277113
1694182	\N	Hey @bing0n3, thanks for catching this typo. I switched the base to point to `hotfix`, as that's where we do all our releases from. I'll take a look at your other PR soon!	2019-04-01 14:04:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:18	277112
1694183	\N	Thanks @bing0n3 !	2019-04-08 12:02:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:21	277126
1694184	\N	@GeorgLink my pleasure	2019-04-09 13:43:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:21	277114
1694185	\N	I think I am not going to mess with the conflicts. :) Merge when ready. 	2019-04-25 02:42:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:24	277110
1694186	\N	I've tested this out pretty thoroughly at this point.  I think its good to go. 	2019-05-03 18:15:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:26	277110
1694187	\N	I broke the API tests and the Python tests ... will change those. 	2019-05-03 18:20:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:27	277110
1694188	\N	Can we merge this into `hotfix` and then into `master`? I'd like to keep the flow of features we've been using (`hotfix` -> `master`) in place, as it'll help make sure that we keep parity among our branches.	2019-05-06 18:56:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:28	277112
1694189	\N	I could do that, yes. :) 	2019-05-07 16:12:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:28	277110
1694190	\N	@ccarterlandis : We need update the tests to have this Jupyter version: \r\n\r\n ipykernel==5.5.1	2019-05-31 18:30:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:31	277110
1694191	\N	Looks good! Thank you Parth	2019-05-28 19:09:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:32	277109
1694192	\N	Looks great, thanks Parth!	2019-05-31 16:39:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:33	277109
1694193	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-05-29 18:49:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:34	277138
1694194	\N	Congrats on merging your first pull request! üéâ \nWe here at Augur are proud of you and we can't wait see what you'll do next!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-05-29 18:55:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:34	277138
1694195	\N	Thank you Bingwen!	2019-05-31 17:27:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:35	277109
1694196	\N	@bing0n3 and @parthsharma2 : Can you help us figure out which parts of the conflicts to keep. I think the augur_db.py looks pretty straightforward, but the differences in routes.py are more difficult for me to figure out. 	2019-06-06 13:48:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:40	277110
1694197	\N	@sgoggins Done. Check it. 	2019-06-06 14:44:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:40	277114
1694198	\N	@bing0n3 [this commit](https://github.com/chaoss/augur/pull/292/commits/445ff606882b30b047251877d98cc05a0d2a26cf) seems to have changed some of the formatting of docstrings in the routes file [i.e. a newline after `@apiDesciption` to separate the `@apiParam`]. I'm not sure if it affects the automated creation of docs :sweat_smile:. Otherwise it all seems fine to me @sgoggins 	2019-06-08 16:00:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:40	277113
1694199	\N	@parthsharma2 : I generated an apidoc json, it looks good. 	2019-06-09 14:45:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:40	277114
1694200	\N	@sgoggins the `routes.py` file seems all good	2019-06-09 15:59:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:40	277113
1694201	\N	Amazing! Thank you Bingwen	2019-06-18 20:06:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:42	277109
1694202	\N	Thank you Parth!	2019-06-18 20:18:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:43	277109
1694203	\N	This is very helpful, thank you Bingwen	2019-06-19 17:29:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:43	277109
1694204	\N	Looks good to me, thank you!	2019-06-20 15:42:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:45	277109
1694205	\N	@parthsharma2 : I think we should pull the primary github declared language.  The badging app does not have very good coverage. Can you make that change? 	2019-06-20 13:04:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:46	277110
1694260	\N	LGTM! Thanks again Parth!	2019-09-03 18:15:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:43	277112
1694206	\N	I guess to do that, we would need to add something to pull that data placed into the GitHub worker. Since @gabe-heim is actively debugging that worker right now, we should get his input.  Do you know what API gets called to pull the primary language? \r\n\r\nAlternately, I have a version of the database for which I've done a full language analysis using the SCC project ... Lets see what @gabe-heim says about getting that data from the GitHub endpoint. Here's the current augur_github_worker: https://github.com/chaoss/augur/blob/dev/workers/augur_worker_github/augur_worker_github/worker.py ... Take a look and see what you think.  \r\n\r\nI do not recall if we intend to add additional endpoints from GitHub to the same worker, or have separate workers. My *guess* is that all the "data anomaly handling" logic Gabe's written around issues is a lot more complex than the logic required for pulling the GitHub primary language, since I don't think it requires corresponding API calls for x_events, x_comments or contributors. \r\n\r\n	2019-06-20 13:05:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:46	277110
1694207	\N	@sgoggins `api.github.com/repos/:owner/:repo` endpoint can be used to get the primary language, it can also be used to get data (such as forks, stars, license, etc.) for the repo_info table. If you want to get all the languages you can use `api.github.com/repos/:owner/:repo/languages`	2019-06-20 13:23:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:47	277113
1694208	\N	@sgoggins I've made the changes to the 'languages' metric implementation. I used git rebase to edit the particular commit to make changes. I've somehow become a co-author of certain commits although locally none of those commits mention me as an author. Any way to solve this :confused: @gabe-heim @sgoggins ?\r\n\r\n**EDIT**: fixed it	2019-06-20 14:09:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:47	277113
1694209	\N	Btw this can definitely be added to the github worker, it would just be in a separate method of the worker and probably be viewed as a different "model" that the worker can fulfill	2019-06-20 15:46:16	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:47	277109
1694210	\N	@sgoggins @gabe-heim maybe I can give it a try?	2019-06-20 16:24:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:47	277113
1694211	\N	@parthsharma2 Definitely! Go for it	2019-06-20 16:43:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:47	277109
1694212	\N	Depending on what @sgoggins wants	2019-06-20 16:44:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:47	277109
1694213	\N	@gabe-heim : does the batch API implementation you did cover any of this? \r\nAlso, I notice that the "total lines of code" on the line chart never changes no matter where you hover. : http://mudcats.augurlabs.io:3333/single/github.com%2Fropensci%2Fplotly/git# 	2019-06-23 06:52:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:48	277110
1694214	\N	@ccarterlandis and @gabe-heim : THis looks like reasonable VUE and .jS optimizations. We don't have tests for the front end (that's hard, and most web apps have little) .. but the travis build fails on a missing library `zmq` ... ? @bing0n3 : Is this something added somewhere else in a different pull request that you know of that needss to be added to requirements.txt ? 	2019-06-25 05:07:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:48	277110
1694215	\N	@sgoggins This [commit](https://github.com/chaoss/augur/commit/95d3f1fd36a802f6fad6a4559cd27db6b8cdff02) by Gabe imported the library  `zmq`.  I guess we need to add the library into `requirements.txt`	2019-06-25 05:14:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:48	277114
1694216	\N	This looks like it will reduce API calls and not change how we are getting data from the API. 	2019-06-25 06:00:54	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:48	277110
1694217	\N	I want to merge this one first, before Parth's. Changes should be fewer then. 	2019-06-28 20:05:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:50	277110
1694218	\N	Wanting to Merge Parth's edits, which are merged into dev into dev-demo. 	2019-06-28 20:04:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:52	277110
1694219	\N	@sgoggins , this looks good to me, just wondering if we want to merge it into stable-dev for demos instead? Not sure how many of these commits were in @bing0n3 's PR after this one (#311 ), which was merged into stable-dev.	2019-07-02 14:48:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:53	277109
1694220	\N	@sgoggins : It seems like that `dev-demo` and `dev` both have new-ui. Should I close this one?	2019-06-29 15:59:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:54	277114
1694221	\N	looks good to me. 	2019-06-30 10:39:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:10:55	277110
1694222	\N	Oops, I forgot to mark it as a draft pull request üòÖ	2019-07-03 14:36:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:00	277113
1694223	\N	The API additions and test fine tuning all look good to me.  I want @gabe-heim to take a look at the worker before I merge this, must because he has a much deeper understanding of that archticture.  ILGTM. ... but lets double check. 	2019-07-04 19:43:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:03	277110
1694224	\N	I'm adding a few metrics to this PR:\r\n- Stargazers\r\n- Watchers	2019-07-05 10:10:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:03	277113
1694225	\N	All looks good to me	2019-07-06 17:07:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:03	277109
1694226	\N	@sgoggins updated the readme	2019-07-15 09:53:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:06	277113
1694227	\N	@sgoggins : I will finish the integrated work tomorrow and write an instructor. I took a day to learn how housekeeper and broker work. 	2019-07-15 14:42:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:07	277114
1694228	\N	@sgoggins : I have added a readme.	2019-07-16 11:01:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:07	277114
1694229	\N	@gabe-heim : Could you review the typescript part of the pull request? I want to make sure what you are doing right now is coordinated with this PR. 	2019-07-16 13:05:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:07	277110
1694230	\N	Looks great and very well thought out thank you Bingwen	2019-07-16 16:26:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:07	277109
1694231	\N	Merging my own PR so that Dev does not get out of sync during development. 	2019-08-03 17:41:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:18	277110
1694232	\N	> YOu need to remove the dist directory and package-lock.json\r\n\r\n@sgoggins \r\nRemoving these created conflicts when staging for merge. Is there a certain way I should do this?	2019-08-16 18:18:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:23	277117
1694233	\N	@bing0n3 Thank you for pointing those out. I followed the guidance of augur's runtime linter for these changes. None of the changes affected functionality on my runtime.	2019-08-16 18:20:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:23	277117
1694236	\N	@germonprez @klumb @ccarterlandis @gabe-heim : I need an approval so I can push the merge conflicts I resolved locally. Which seems like a bass-ackwards process ... but that's what we have setup. 	2019-08-16 12:43:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:26	277110
1694237	\N	@sgoggins does this need a DCO from you? 	2019-08-16 14:13:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:26	277118
1694238	\N	@germonprez : Hmmm ... I DCO's it earlier ... but now its DCO'd either "again" or "actually, because ma brain broke!"	2019-08-16 14:16:06	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:26	277110
1694239	\N	conflicts now. can't merge	2019-08-16 14:18:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:26	277118
1694240	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-08-16 14:08:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:27	277138
1694241	\N	Superseded by #355.	2019-08-16 14:31:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:27	277125
1694242	\N	Looks like fstream is no longer a dependency, so this is no longer needed.	2019-08-16 14:30:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:29	277125
1694243	\N	Looks like jquery is up-to-date now, so this is no longer needed.	2019-08-16 14:30:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:29	277125
1694244	\N	A newer version of tar exists, but since this PR has been edited by someone other than Dependabot I haven't updated it. You'll get a PR for the updated version as normal once this PR is merged.	2019-09-09 17:40:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:30	277125
1694245	\N	OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`.\n\nIf you change your mind, just re-open this PR and I'll resolve any conflicts on it.	2019-10-13 15:08:06	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:30	277125
1694246	\N	Looks like extend is up-to-date now, so this is no longer needed.	2019-08-16 14:30:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:31	277125
1694247	\N	So it took me entirely too long to remember this, but it's failing because we've configured the Travis build to remove our encrypted environment variables from **any** build that doesn't come from within the main augur repository, as we don't want untrusted builds to have access to our credentials. That's not to say we don't trust you @parthsharma2 - in fact, we very much trust you! It's just a matter of precaution. @sgoggins You also might recall that [we ran into this issue](https://github.com/chaoss/augur/pull/222) back in January for the same reason...my vote is we just adopt the same solution we did last time üòÑ 	2019-08-17 18:41:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:33	277112
1694248	\N	@sgoggins added tests	2019-08-22 13:27:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:36	277113
1694249	\N	Thank you Parth! Looks great. We will eventually want to add a 'day' group by option for the issue_comments_mean metric, but we can worry about that later.	2019-08-25 21:14:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:36	277109
1694250	\N	@ccarterlandis : Can you look into why the Travis-CI build is failing on this. @Nebrethar : Probably helpful if you look at the build log as well. I think this might be an issue where PR's always fail but I am not sure. 	2019-08-31 02:10:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277110
1694251	\N	@ccarterlandis : Its the API tests that are failing .. I remember you mentioning an issue there earlier this week. I want @gabe-heim  to look at this, but its important for the Risk group so if there's stuff we need to ask @Nebrethar to change I would like to get that info to him ASAP. 	2019-08-31 02:13:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277110
1694252	\N	Closing this because it needs to include more augur repositories to prevent stalling issues.	2019-08-31 15:01:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277117
1694253	\N	Will reopen at a more mature stage of development	2019-08-31 15:02:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277117
1694254	\N	@Nebrethar What do you mean "needs to include more augur repositories"? What does? Regardless of that, the current changes proposed in this PR are beneficial and I'd be happy to merge if you are wanting to reopen, but if not just reopen when you are happy with the changes	2019-08-31 16:35:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277109
1694255	\N	My apologies, I was going to add context here but I forgot.\r\n\r\n@gabe-heim I am currently working on some fixes to bugs this update would introduce. The one I haven't fixed yet is that CII metrics present on the page will prevent the page from loading if there is no CII data returned. I didn't want to put that on dev until it's fixed..	2019-09-01 03:03:43	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277117
1694256	\N	I reopened this because the loading issues have been fixed. The page will not fail to load; Instead, it will load everything but the CII panel.\r\n\r\nI can also make it so that the CII panel loads, but states that it has no data. Let me know if you have a preference.\r\n\r\nA great repo to try CII badging out on is `zephyrproject-rtos/zephyr`	2019-09-02 15:05:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277117
1694257	\N	@Nebrethar Stating that the CII panel did not not return any data for this repo is a preferable solution rather than just not rendering the panel at all. I will work on #370 if you want to update this in the meantime, if you are having trouble figuring out how to do that let me know.	2019-09-03 18:11:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277109
1694258	\N	This branch has a default CII panel now that mentions that there is no CII data available.	2019-09-03 18:36:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:39	277117
1694259	\N	Super helpful for the NDE, thanks Parth!	2019-09-03 17:44:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:41	277109
1694261	\N	Closing because I realized this is no longer a necessary development. It looks like this problem has already been taken care of	2019-09-11 16:18:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:45	277117
1694262	\N	Closing because this PR is obsolete now	2019-09-30 14:16:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:48	277117
1694263	\N	@sgoggins Just tested this PR and I don't see any errors or issues. Works as expected.	2019-10-02 14:58:03	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:50	277117
1694264	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-03 17:30:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:51	277138
1694265	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-09 09:24:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:52	277138
1694266	\N	Congrats on merging your first pull request! üéâ \nWe here at Augur are proud of you and we can't wait see what you'll do next!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-09 18:35:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:52	277138
1694267	\N	Is Issue #406 fixed yet? The issues says the problem is on dev, and looks pretty critical.	2019-10-10 23:53:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:55	277117
1694268	\N	This PR now includes the Grace Hopper contributions. 	2019-10-11 13:08:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:55	277110
1694269	\N	@gabe-heim : does this fail travis because of the pull request travis issue? @ccarterlandis ? 	2019-10-13 15:02:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:57	277110
1694270	\N	Thanks for opening this pull request! üöÄ\nWe're grateful for your contribution and are excited to work with you to make our project even better!\n\nIf you've added any new metrics, please make sure that you've added sufficient documentation and tests. Guides for these things can be found [here](http://augur.augurlabs.io/static/docs/dev-guide/3-backend.html#defining-a-plugin-s-functionality).\n\nPlease make sure that all of your commits contain a DCO sign-off. If you'd like more info about DCO, you can find it [here](https://developercertificate.org/).\n\nWe also ask that your commit messages follow a few guidelines for enhanced readability. We ask that commit messages:\n - Separate subject from body with a blank line\n - Limit the subject line to 50 characters\n - Capitalize the subject line\n - Do not end the subject line with a period\n - Use the imperative mood in the subject line\n - Wrap the body at 72 characters\n - Use the body to explain what and why vs. how\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-15 23:34:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:59	277138
1694271	\N	Congrats on merging your first pull request! üéâ \nWe here at Augur are proud of you and we can't wait see what you'll do next!\n\nIf you have any questions, please don't hesitate contact @ccarterlandis, @sgoggins, or @gabe-heim!\n	2019-10-16 15:39:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:11:59	277138
1694272	\N	That was quick.	2019-10-18 18:53:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:06	277117
1694273	\N	Could any of you please review this change? I can merge it later.	2017-09-28 12:39:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:14	277192
1694274	\N	Thanks, @sduenas , merging...	2017-10-04 08:02:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:14	277192
1694275	\N	@acs, please, let me know if the last commit fixes everything, and if you find my proposal of leaving those two dictionaries for now as acceptable. If not, just let me know and I will make that change too.	2017-10-09 21:53:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:17	277192
1694276	\N	Done in 9b1483f	2017-10-20 16:46:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:18	277192
1694277	\N	Superseded by #8.	2017-10-14 10:27:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:19	277192
1694278	\N	Thanks!	2017-10-16 06:56:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:20	277192
1694279	\N	@acs please note I'm not @jgbarah	2017-10-20 21:53:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:21	277283
1694280	\N	@jgb sorry about that. I have fixed the comment so it refers now to @jgbarah . Thank you!	2017-10-21 09:59:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:21	277236
1694305	\N	Then, I merge it myself. Thanks for the approval!	2018-01-10 21:49:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:41	277192
1694306	\N	Sorry, @jsmanrique but I miss the rationale. Why should we remove that?	2018-01-30 17:41:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:44	277192
1694307	\N	Because, I expect that next CHAOSSCon won't be managed from GrimoireLab website. So I expect the GrimoireLab docs website to be based on GrimoireLab related topics.\r\nIMHO current page (with this PR) is a temporary solution while we move to a more docs oriented website, but I might be wrong on this strategy/thought	2018-01-30 18:17:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:44	277238
1694281	\N	## Mordred test environment\r\n\r\n* we should move everything to tests, instead of releases/tests\r\n\r\n* setup.cfg: includes passwds, and absolute directories\r\n\r\n* projects.json:\r\n - why "*jenkins" and "jenkins" as entries?\r\n - Why "*jira" (two of them) and "jira"?\r\n - What is "C7LSGB0AU" in "slack"?\r\n\r\n* cache-test.tgz\r\n - it unpacks to perceval-cache: it would be better if the basename of\r\n     the file, and the directory name would be the same\r\n - contains data for testing: are we sure all of it is public?\r\n - in particular, it seems we have a spreadsheet, I'm not sure it is public...\r\n - I'm not sure the data for the telegram channel can be consdiered public\r\n\r\n* docker-compose.yml:\r\n - shouldn't mariadb export some port?\r\n - or maybe not, and we could do the same for elasticsearch and kibitter?\r\n - as such, you need some ports available, which maybe are not in a certain host\r\n\r\n* stage:\r\n - should run in any properly configured machine (now includes wired paths,\r\n     see below)\r\n - should be a python directory\r\n - should not include absolute paths\r\n - installation of Python packages should be with "pip install ."\r\n     (instead of python3 setup.py install)\r\n - why Python installation modules need sudo?\r\n - arthur seems to be a part of the test\r\n     shouldn't it a least be optional?\r\n - shouldn't http://172.17.0.1:5601 be a relative address, or something?\r\n\r\n* init-raw.sh\r\n - uploads data to 172.17.0.1. Should do that to any address,\r\n     or maybe to localhost since it will run in the machine with the elasticsearch port\r\n - I see it can be configured with an environment variable, it would be more explicit\r\n     with a command line argument.\r\n - It should be in python\r\n\r\nI suggest that we start with a Python file equivalent to "stage",\r\nthat runs with proper options in a host environment correctly\r\nset up. Then, we can include it in a docker environment.\r\n\r\n## Panel testing\r\n\r\nI suggest that we deal with this one in a separate pull request, once\r\nthe former is complete (or even in parallel). As I understand it,\r\ngiven an ElasticSearch with the needed indexes, it should work...\r\n	2017-10-26 21:58:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:22	277192
1694282	\N	@jgb it is pretty hard to respond you to all the comments above. As we have talked this morning, we can approve the PR and start working with new PRs to work in above issues.\r\n\r\nWhat do you think? You can then open new issues using the ticketing system in GitHub and we can fix them.	2017-10-27 16:53:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:22	277236
1694283	\N	OK, let's do it that way. But please, try to keep the above modifications in mind to have them implemented as soon as possible.	2017-10-30 08:00:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:22	277192
1694284	\N	Opened issues: #16, #17, #18, #19, #20, #21; and pull requests: #15.	2017-10-30 08:38:24	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:22	277192
1694285	\N	Again @acs  please try to use @jgbarah instead of my handle here for notifications.	2017-10-30 08:47:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:22	277283
1694286	\N	LGTM!	2017-10-27 16:35:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:23	277236
1694287	\N	The main point here is that one part (most of it) can be completely public, while the other can be private. In fact, since the "other one" will overdrive whichever is in the general one, we could even have default values in the main one, just in case people don't need the other one.\r\n\r\nThe main advantage is avoiding conflicts when committing and merging: since the file is under version control, you end up having trouble if you edit it, keeping it in the repo.	2017-11-02 18:30:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:27	277192
1694288	\N	???	2017-11-07 23:41:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:27	277192
1694289	\N	After our sync today, I have understood better the approach of not creating two complete config files, but just redefine the ports section in the second file. So I like the approach and I am approving the PR. Thanks @jgbarah!	2017-11-08 09:18:54	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:27	277236
1694290	\N	All done from my point of view, @acs.	2017-11-03 10:13:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:28	277192
1694291	\N	Ok just pending:\r\n\r\n* Rights to add the docker image to grimoirelab (blocker)\r\n* Add the arthur pip package (not blocker)	2017-11-04 08:45:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:28	277236
1694292	\N	Hmm. I don't think that we need to wait until we have the image in dockerhub. You can run all the process in your computer. In fact, the README.md file explains how to produce first the docker image (using `Dockerfile`) and the `docker-compose` to complete the deployment.	2017-11-04 20:42:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:28	277192
1694293	\N	@acs, what do you think about my last comment, could we close this by merging?	2017-11-07 23:40:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:28	277192
1694294	\N	Fixed conflicts that prevented rebasing.	2017-11-08 09:46:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:28	277192
1694295	\N	For now, we should update it manually every time there is a new release file...	2017-11-05 22:39:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:29	277192
1694296	\N	I've been learning a bit how DockerHub works, and maybe there are other solutions wrt the name of the docker image. To begin with, maybe we could use regular images (without using "Automated Builds"). That means you have to push the image manually, but that also means you can control when to push it.\r\n\r\nIn any case, if we want to push automatically, I'm almost sure we could do that with post commit hooks. But we can comment about that.\r\n\r\nWhy  Dockerfile is better in its own directory (sorry for my ignorance).	2017-11-08 23:15:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:31	277192
1694297	\N	@jgbarah you have done/continued this work in other PR already merged so let's close this one also.\r\n\r\nhttps://github.com/grimoirelab/grimoirelab/pull/32	2017-11-13 18:24:51	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:31	277236
1694298	\N	Changes hopefully addressed. Please let me know if you need something else. Thanks for the review.	2017-11-09 11:03:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:34	277192
1694299	\N	I hope this new commit addresses your concerns. In fact, `--build` should be the default action, but only if no other action was defined (so that for example you can `--install` already produced pkgs)	2017-11-14 11:55:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:35	277192
1694300	\N	My main concern with the current state of this PR, already merged, is the addition of scrips living in other repositories like menu.yaml and build_grimoirelab. This is going to cause headaches for sure because the tracking should be done manually for this files. Also, there are several config files that should also be collected from other place during the image creation.\r\n\r\nBut as a first try it is a good initial step to start iterating.	2017-11-16 06:53:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:36	277236
1694301	\N	Yes, you're completely right. We need to find a way of keeping that in sync automatically. I'm exploring some ways, I'll let you know, likely with new PRs, about any progress.\r\n\r\nThanks for merging!	2017-11-16 11:15:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:36	277192
1694302	\N	Thanks for the review, @acs. New commit pushed, hopefully fixing that typo.	2018-01-03 09:38:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:39	277192
1694303	\N	????	2018-01-10 19:21:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:41	277192
1694304	\N	@jgbarah sorry about the delay. I let you to merge the PR 	2018-01-10 21:07:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:41	277236
1694308	\N	OK, I undestand. Merging.	2018-02-13 23:43:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:44	277192
1694309	\N	@jgb I am checking it right now in the release process .... this is my automatic spec for the release generated from the GitHub repository names in CHAOSS.\r\n\r\n```\r\nGRIMOIRELAB_SORTINGHAT='5044a4248fa68eab9c5881d91c27a6d1bbd04793'\r\nGRIMOIRELAB_ELK='5b709b0abce909d294b1359e91e11c7d450a5d9a'\r\nGRIMOIRELAB_PERCEVAL='8229e787ef9e2e2562eb25a5401091af602968d1'\r\nGRIMOIRELAB_KIBITER='f7bf173cb1d79418b9909d877adfb998ce7b52da'\r\nGRIMOIRELAB_KINGARTHUR='6ad120760abe543c7fcc002589a3da9e74eb6acc'\r\nGRIMOIRELAB_CERESLIB='3c1556fc4a8ede996cc8d797feda29293a3b74c6'\r\nGRIMOIRELAB_SIGILS='25c36ab3e58f4e24c69cd614290fd6b81d8b0c62'\r\nGRIMOIRELAB_MORDRED='c3cb86baefa05e83b0ded98fc23fd21f1361c900'\r\nGRIMOIRELAB_TUTORIAL='43cdd673750774e45ef363d1760218907373980a'\r\nGRIMOIRELAB_PERCEVAL_MOZILLA='0a562b988f3208b893c9289f82c2f1bedc2dbe89'\r\nGRIMOIRELAB_PERCEVAL_PUPPET='26dd0a8ea42f8cfef7f271128ef87c12a782a1dc'\r\nGRIMOIRELAB_MANUSCRIPTS='c51202f88974a826096b3574dd84cf95708b4f2f'\r\nGRIMOIRELAB_BESTIARY='e33976089fcb099d8054b686f61d1f39e9038aa1'\r\nGRIMOIRELAB_TOOLKIT='ce0e845e5e72457b20a28ed5cf68446aa861764b'\r\nGRIMOIRELAB_PERCEVAL_OPNFV='681f61c4f9ee5b9e0e158a9bae8b65915081c3f2'\r\nGRIMOIRELAB='ed03068b4abad265cc3929f9486c68511371357c'\r\nGRIMOIRELAB_HATSTALL='f61a0ec344abd6fd3a915f5d574a84b53dcb38cc'\r\nGRIMOIRELAB_KIDASH='2d7a4be80e0313b49eb395d283276a2e3e5358e4'\r\n```\r\n\r\nand I am using\r\n\r\n```\r\n./build_grimoirelab --build --install --check --install_system --relfile requirements.cfg -l debug\r\n\r\nKeyError: 'sigils'\r\n\r\n```\r\nAfter some testing, the requirements file needed is:\r\n\r\n```\r\nSORTINGHAT='5044a4248fa68eab9c5881d91c27a6d1bbd04793'\r\nGRIMOIREELK='5b709b0abce909d294b1359e91e11c7d450a5d9a'\r\nPERCEVAL='8229e787ef9e2e2562eb25a5401091af602968d1'\r\nGRIMOIRELAB_KIBITER='f7bf173cb1d79418b9909d877adfb998ce7b52da'\r\nKINGARTHUR='6ad120760abe543c7fcc002589a3da9e74eb6acc'\r\nCERESLIB='3c1556fc4a8ede996cc8d797feda29293a3b74c6'\r\nSIGILS='25c36ab3e58f4e24c69cd614290fd6b81d8b0c62'\r\nMORDRED='c3cb86baefa05e83b0ded98fc23fd21f1361c900'\r\nGRIMOIRELAB_TUTORIAL='43cdd673750774e45ef363d1760218907373980a'\r\nPERCEVAL_MOZILLA='0a562b988f3208b893c9289f82c2f1bedc2dbe89'\r\nPERCEVAL_PUPPET='26dd0a8ea42f8cfef7f271128ef87c12a782a1dc'\r\nMANUSCRIPTS='c51202f88974a826096b3574dd84cf95708b4f2f'\r\nGRIMOIRELAB_BESTIARY='e33976089fcb099d8054b686f61d1f39e9038aa1'\r\nGRIMOIRELAB_TOOLKIT='ce0e845e5e72457b20a28ed5cf68446aa861764b'\r\nPERCEVAL_OPNFV='681f61c4f9ee5b9e0e158a9bae8b65915081c3f2'\r\nGRIMOIRELAB='ed03068b4abad265cc3929f9486c68511371357c'\r\nGRIMOIRELAB_HATSTALL='f61a0ec344abd6fd3a915f5d574a84b53dcb38cc'\r\nKIDASH='2d7a4be80e0313b49eb395d283276a2e3e5358e4'\r\n```\r\n\r\nwhich is removing `GRIMOIRELAB_` for all except `GRIMOIRELAB_TOOLKIT` (I have not changed it for the repositories not used yet by the script) and renaming to `GRIMOIRELAB_ELK` to  `GRIMOIREELK`.\r\n\r\nIs this the final version? To implement it in the script generating this file.\r\n\r\n	2018-03-20 03:51:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:55	277236
1694310	\N	I just followed the previous convention we had, updating the names of the repos and (some) of the packages that were missing. If you don't mind, let's go on with this convenition (I mean, the one in my pr), and if you want, we decide to change it later for the next release. In the end, the idea was skipping "GRIMOIRELAB" from the variable name, since all are "GRIMOIRELAB". But I don't mind including it if you prefer, for the next release.	2018-03-20 07:44:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:55	277192
1694311	\N	No, it is just ok for me. I just need a convention and then I will adjust the script to generate the requirements to it. Thanks! So the only exception is GRIMOIRELAB_TOOLKIT. For the rest, we just need to remove GRIMOIRELAB_ and that's all!	2018-03-20 08:32:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:12:55	277236
1694312	\N	Superseed by chaoss/grimoirelab#141	2018-08-24 11:03:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:21	277192
1694313	\N	@jsmanrique do you need any help? If you want, I can try to split the pr and make the edits myself on your behalf.	2018-09-24 12:26:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:25	277192
1694314	\N	I don't know how to make the changes you mention. Sorry, I am not used to this machinery	2018-11-13 11:47:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:25	277238
1694315	\N	OK. Merging...	2018-10-04 11:32:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:26	277192
1694316	\N	Any comment about this, @valeriocos @sduenas?	2018-10-25 21:11:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:28	277192
1694317	\N	Any comment about this, @valeriocos @sduenas?	2018-11-09 09:15:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:28	277192
1694318	\N	sorry @jgbarah for the late reply. LGTM\r\nWhat  do you think @sduenas?	2018-11-09 11:47:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:28	277242
1694319	\N	Ping @sduenas (or I will just merge, based on the review by @valeriocos).	2018-11-14 22:04:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:28	277192
1694320	\N	Any problem with this patch? I would need to work properly with 0.2.2...	2018-12-14 12:35:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:34	277192
1694321	\N	Thanks, @valeriocos. I pushed a new patch, hopefully addressing your concerns.	2019-01-08 19:17:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:34	277192
1694322	\N	Thank you @jgbarah , the PR LGTM, if @sduenas agrees it can be merged.	2019-01-08 21:51:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:34	277242
1694323	\N	Thanks a lot for your proposal and heads-up about this topic, but I think it is the other way around: usually we refer to it as "GrimoireELK" (or Gelk, for short), to avoid confusion with the ELK stack (Elasticsearch-Logstash-Kibana). In fact, GrimoireELK could be defined, to some etxtent, as "the modure of GrimoireLab working with the ELK stack).\r\n\r\nTherefore, I'm addressing this in reverse in #176, and that's why I'm closing thiis pull request.	2019-01-08 19:07:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:36	277192
1694324	\N	It seems all changes in this pr are already in master, so closing this one. Thanks!	2019-06-03 17:05:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:45	277192
1694325	\N	Let's keep it that way only for this one. I'd like to review those files and to improve them.	2019-06-06 15:39:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:47	277237
1694326	\N	Not sure who to ping on this but @sduenas you or @jgbarah seem to be the most recent active people üôè \r\n\r\nlet me know if there's anything else i need to do or add to get this link fixed =)	2019-06-17 20:35:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:48	277243
1694327	\N	@jgbarah thanks! and yeah im totally happy for this to be overwritten later if there's a smarter better way to do it.	2019-06-26 12:39:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:48	277243
1694328	\N	I removed myself as a reviewer, since I don't know what criteria to review this for. 	2018-05-24 22:01:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:59	277126
1694329	\N	Working on bringing myself up to speed on a few different matters here, but I think for the good of our overall efforts: \r\n\r\nThere are two things I am looking into : \r\n1. Making sure I understand the pattern laid out by this pull request.  Its the first of its kind, and will set a pattern we should all follow (or follow with tweaks maybe?)\r\n2. I am thinking about how and to what extent we might want to explicitly or implicitly make the assessment of pull requests in this repository digestable by non-technologists.  \r\n\r\nPractically, I also confess I don't know how to easily clone the notebook and run it inside of local instance of the repository systematically. On this count, I acknowledge feeling dumb.  	2018-05-25 05:40:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:59	277110
1694330	\N	@GeorgLink said:\r\n> I removed myself as a reviewer, since I don't know what criteria to review this for.\r\n\r\nI think none of us have clear criteria yet, so any comment would be appreciated. But if you feel you're too much out of the loop to comment, don't worry ;-)	2018-05-25 08:01:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:59	277192
1694359	\N	Lgtm	2018-10-09 17:35:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:08	277126
1694331	\N	@sgoggins said:\r\n> Making sure I understand the pattern laid out by this pull request. Its the first of its kind, and will set a pattern we should all follow (or follow with tweaks maybe?)\r\n\r\nThis is the first intention to implement one of our metrics, as much precisely as possible, while showing at the same time the different choices that can be made (eg, counting merge commits or not).\r\n\r\n> I am thinking about how and to what extent we might want to explicitly or implicitly make the assessment of pull requests in this repository digestable by non-technologists.\r\n\r\nI think we could have like two kinds of prs: one more "general", for description of metrics, for example; and another one more specific, for their implementation. If we want to have detailed decriptions of the metrics, and reference implementations, I guess we need the latter. If we want "human readable" text for defining everything, I guess we need the former. This pr would be an example of the latter. \r\n\r\n> Practically, I also confess I don't know how to easily clone the notebook and run it inside of local instance of the repository systematically. \r\n\r\nDon't worry, I'm including some text in the notebook itself about how to run it. If you feel you need more guidance, just let me know.\r\n\r\nYou can also see the notebook, already executed (with results) [in the branch in my original repo](https://github.com/jgbarah-chaoss/wg-gmd/blob/count-commits/examples/Code_Commits.ipynb).	2018-05-25 08:09:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:13:59	277192
1694332	\N	Do you have the latest and greatest GMD from the Metrics repo? 	2018-05-24 19:19:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:00	277118
1694333	\N	> Do you have the latest and greatest GMD from the Metrics repo?\r\n\r\nI think I have it... now ;-) Thanks for the heads up.	2018-05-25 09:25:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:00	277192
1694334	\N	Once we agree on this, we can explore a similar metric for code reviews.	2018-06-12 22:56:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:01	277192
1694335	\N	Per GMD meeting:\r\n\r\n- Adjust naming convention - remove measure and time\r\n- Remove metrics that aren't being used\r\n- Add file and folder structures for UseCases\r\n\r\nWould like to merge this and then make further edits to finalize.	2018-09-12 16:49:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:03	277148
1694336	\N	It seemed ok with us during the last GMD Call and we were going to make a final review, and if no comments merge.  Seems like this is ok, so I am going to merge the pull request. 	2018-09-21 12:46:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:03	277110
1694337	\N	@GeorgLink : I think some conflicts were introduced during the last pull request approval. Can you see if those can be resolved with some minor edits and resubmit? 	2018-09-21 12:48:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:04	277110
1694338	\N	We have moved this work to the wg-gmd branch of the metrics repository.  Please resubmit this pull request there. 	2018-09-21 13:17:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:04	277110
1694339	\N	Sure, I should be able to resolve merge conflicts within the same pull request.	2018-09-21 14:13:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:04	277126
1694340	\N	I see what happened. Because the files moved, resolving this was more difficult than it was worth. New pull request: #21 	2018-09-21 14:16:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:04	277126
1694341	\N	We moved the workgroup's efforts over to the wg-gmd branch of the metrics repository. Please resubmit this pull request there. \r\n\r\nThanks!\r\n\r\nSean 	2018-09-21 13:18:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277110
1694342	\N	Oooops, moving this to the other repo, thanks @sgoggins 	2018-09-21 15:31:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277253
1694343	\N	Reopening, since we're still working in this repository (see message to the mailing list).	2018-10-02 17:46:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277192
1694344	\N	Any review or comment? Since I was involved in the change, I prefer that somebody else reviews it...	2018-10-03 16:22:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277192
1694345	\N	There's a conflict we will resolve and then merge. @klumb : can you look into this. 	2018-10-24 16:17:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277110
1694346	\N	This just a naming convention issue. File was renamed to issues-open.md	2018-10-24 16:37:24	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277148
1694347	\N	Once we're done with the comments in revisions, I can change the name of the file, which seems to be the reason for the conflict, when merging.	2018-10-25 21:19:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:05	277192
1694348	\N	@sgoggins are you happy with my comments, and we can merge this pull request, or you still feel I need to do some change before merging?	2018-10-31 10:53:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:06	277192
1694349	\N	We are no longer using this repository. Can you issue the pull request against the "wg-gmd" branch of the metrics repo? 	2018-09-21 14:43:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:06	277110
1694350	\N	Will do.\r\n\r\nAn issue template would be great, that informs someone trying to open an issue or pull request that this is not the place.	2018-09-21 14:47:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:06	277126
1694351	\N	I'm reopening this pr, since I think we agreed to follow up work here.	2018-10-02 17:47:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:06	277192
1694352	\N	looks good to me. Just fix the directory. 	2018-10-24 16:38:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:06	277110
1694353	\N	@GeorgLink maybe you can amend the commit to avoid the current conflict? I guess it is a matter of changing the file name to the new one for this metric.	2018-10-24 16:39:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:06	277192
1694354	\N	I guess so. I'll have a look next week.	2018-10-26 16:04:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:07	277126
1694355	\N	I updated the branch to include the latest master version... \r\n\r\nWhen I `git diff` compare locally, it shows correctly that I only made a minor change.... this pull request shows way more.	2018-10-31 16:29:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:07	277126
1694356	\N	Looks like this is a simple change, but the commits look more significant because things moved. 	2018-10-31 16:37:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:07	277110
1694357	\N	I think this is a good idea. Further, we can create a meeting notes folder to archive them. Notes should include agenda, the notes, and a link to the youtube video. But that may be a new issue.	2018-10-06 00:54:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:08	277148
1694358	\N	Thanks, @klumb \r\n\r\nAnybody else can comment / review?	2018-10-09 16:45:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:08	277192
1694360	\N	Since nobody objected, and there is a positive comment, I'm merging this one.	2018-10-17 22:38:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:08	277192
1694361	\N	I am not sure what .DS_Store was it showed up 5 or 6 months ago. I deleted it.	2018-10-09 17:51:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:09	277148
1694362	\N	Sorry, slipped and hit wrong button\r\n	2018-10-09 17:51:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:10	277148
1694363	\N	@klumb, anything about this?:\r\n\r\n> Why are we using numbers for starting folder names? (I mean, such as 1_template_folder instead of template_folder	2018-10-09 20:35:16	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:10	277192
1694364	\N	@jgbarah, also not needed.  	2018-10-09 20:59:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:10	277148
1694365	\N	Isn't this what we would put into the "Focus Areas" Folders if we are following the D&I Structure? \r\n\r\n	2018-10-18 15:35:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:11	277110
1694366	\N	Following up on my comment just now, Underneath "Focus Areas" I see the specific metrics defined. I know we have discussed using Use Cases, but I do not see them in the D&I Structure. @GeorgLink : Can you advise regarding how D&I is handling use case definitions and if any are committed to the repository yet? Or, if the use cases are embedded in your metrics definitions? 	2018-10-18 15:38:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:11	277110
1694367	\N	As far as I know, D&I are not using use cases in this way. The idea here came from several people in CHAOSS having interesting experiences on using (or willing to use) metrics, which could be useful for defining the questions and framing the metrics.\r\n\r\nThe idea of these use case is to be orthogonal to the "focus area | goal | question | metric" structure (therefore the different directory).	2018-10-18 16:47:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:11	277192
1694368	\N	In D&I, we do not use the term 'use case'. What we include on our resource pages are 'objectives', which are not full fledged use cases but provide rationale for why to use metrics. [Example][1]\r\n\r\nHow does the use case compare to our idea of the blog posts series [Metrics in Use][2] (which we still need to launch)?\r\n\r\n[1]: https://github.com/chaoss/wg-diversity-inclusion/blob/master/focus_areas/project_and_community/documentation.md\r\n[2]: https://docs.google.com/document/d/1p9FZM6rixjiEsxXQ7Ij-mbGCJKm_OrOQ6nd3oIBRnto/edit	2018-10-18 17:42:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:11	277126
1694369	\N	> How does the use case compare to our idea of the blog posts series Metrics in Use (which we still need to launch)?\r\n\r\nI think most use cases could be the basis for a blog post.	2018-10-18 18:12:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:11	277192
1694370	\N	> One suggestion: Point to our blog post series as a possibility for disseminating the use case. https://docs.google.com/document/d/1p9FZM6rixjiEsxXQ7Ij-mbGCJKm_OrOQ6nd3oIBRnto/edit#heading=h.i08ikslakwjv\r\n\r\nGood idea. I'm going to do it.	2018-10-18 18:13:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:11	277192
1694371	\N	We could remove the reference links at the bottom. Looks good otherwise.	2018-10-18 17:59:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277148
1694372	\N	> We could remove the reference links at the bottom. Looks good otherwise.\r\n\r\nI thought they could be interesting as a reference, but if you prefer, I will delete them.	2018-10-18 18:21:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277192
1694373	\N	Why remove the reference links?\r\n\r\nI think they are good for building a shared language and understanding.	2018-10-18 18:51:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277126
1694374	\N	The reference links aren't specific to the meeting. The text comes from the email I sent with the notes in it. They are part of a template I am creating for the recurring agenda and notes emails so all future versions of my notes/agendas will also include it. \r\n\r\nQuestion - Are we appending notes to this document or are we replacing them? If we are replacing them then I see no issue in leaving them. If we are appending multiple meeting dates here, then the links will be redundant.   	2018-10-18 20:56:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277148
1694375	\N	Maybe I missed something.\n\nWill notes be for the entire document or only live within a section of a\nspecific meeting?\n\nI favor the latter and do not mind repetitions if it i accurately reflects\nwhat is on the mind of members or was mentioned during the meeting.\n	2018-10-19 06:09:54	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277126
1694376	\N	My idea is to capture in the meetings minutes all that seems worth to mention. That will usually include all notes, and/or a merging of notes if more than one person takes notes. The idea is to have a single place for checking what happened in past meetings.\r\n\r\nWith time, we can have a separate file for meetings, to avoid overbloating README.md	2018-10-19 07:24:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277192
1694377	\N	> Question - Are we appending notes to this document or are we replacing them? If we are replacing them then I see no issue in leaving them. If we are appending multiple meeting dates here, then the links will be redundant.\r\n\r\nReplacing, I think. If I'm missing something that was in the notes but is not in the minutes, please add it.	2018-10-19 07:25:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277192
1694378	\N	I think we should fast track these notes pull requests\r\n	2018-10-24 16:38:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:12	277148
1694379	\N	Thanks for putting this together Jesus. The template looks good.\r\n\r\nWhat about a section that discusses the value of a metric for decision making? E.g. if value is above 80th percentile, then this indicates an amazing investment opportunity.	2018-10-26 16:02:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:15	277126
1694380	\N	Thanks, @GeorgLink.\r\n\r\nFor the value of the metric, maybe we could use for now the comments section? For now, I was intending to focus on the description of the goals and questions, so that anyone can write their use cases, even if the use of specific metrics is not completely clear. I'm going to include it as a possible comment for now, while I wait for your feedback.	2018-10-28 18:45:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:15	277192
1694381	\N	Thanks for your comments, @GeorgLink @sgoggins \r\nMerging...	2018-10-30 16:49:51	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:15	277192
1694382	\N	I think this is a low impact "housekeeping" pull request. 	2018-10-30 16:27:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:16	277110
1694383	\N	This is some house keeping. Everything code related had a "pull requests" preface, which made no sense in a number of cases. Also got rid of some metrics that obviously duplicated each other. 	2018-10-30 20:12:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:18	277110
1694384	\N	I have nothing against the changes, but I don't understand its rationale. Some of the files I don't find them in the goals files. For example, I cannot find `pull-requests-review.md` in the [Code Development goal](https://github.com/chaoss/wg-gmd/blob/master/focus_areas/code_development/goal_code_development.md). Maybe I'm missing something?	2018-10-30 23:13:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:18	277192
1694385	\N	I saw some of those too, but I wasn't sure if they were a metrics that still needed a home, or if someone else was perhaps working on them, so I elected to leave them alone and tried to mostly clean up cruft and rename metrics that I thought could benefit from a renaming. Sorry for the confusion @jgbarah! Please let me know if there's anything else!	2018-10-30 23:18:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:18	277112
1694386	\N	I think this reads well and describes the process clearly. There are some minor typos but other wise good. I am not sure how to share those here. I would be happy to edit the document.\r\n\r\nI like the issue requirement. Due to the nature of the work, I think it is important to explicitly link pull requests to issues. 	2018-10-31 15:12:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:19	277148
1694387	\N	Long folder and file names are one of my foibles.  This change is good, I vote to merge.	2018-10-31 15:19:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:20	277148
1694388	\N	This is good, I vote to merge it.	2018-10-31 15:16:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:21	277148
1694389	\N	For "core contributors", maybe we should follow the example we have at https://github.com/chaoss/grimoirelab-sigils/blob/master/doc/community-structure.md?  I think we need to add a timeline/time period of contribution.  Something like 6 months or 1 year makes sense to me....\r\n	2018-10-31 23:31:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:23	277307
1694390	\N	Merging,since there is no comment against and I already approved.	2018-11-05 13:50:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:24	277192
1694391	\N	@sgoggins, @rpaik, and @GeorgLink can you review this this PR from @jgbarah 	2018-12-05 17:45:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:27	277118
1694392	\N	This pull request now fixes #35 as well; Explaining the working group in the README.md file. I also created a "contributing.md" file. 	2018-11-14 15:45:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:28	277110
1694393	\N	Well, I'll rather use a merge commit. Don't mind about rebasing. Sorry for the noise.	2018-11-26 18:58:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:30	277192
1694394	\N	Sorry, I could have sworn I rebased that.	2018-11-26 19:31:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:30	277148
1694395	\N	Hi @foundjem Thank you for creating a pull request.\r\n\r\nUnfortunately, this is not what I expected. Can I ask you to follow the following **three** step to create a new pull request?\r\n\r\n1. Fork the repository by clicking the "Fork" button at the top right. This will create a copy of the `wg-gmd` repository under your profile.\r\n![image](https://user-images.githubusercontent.com/8862021/49687232-fcb4aa80-fac5-11e8-96f6-3daf2d81dc6f.png)\r\n  - You should see something like this:\r\n  ![image](https://user-images.githubusercontent.com/8862021/49687294-8bc1c280-fac6-11e8-8a4f-93798aa4b881.png)\r\n\r\n\r\n2. In your copy of the repository, edit the `README.md`. You can click on it and edit with your new text OR you can upload your changed README.md file that you included with your zip file on this pull request. Here is where you find these two options:\r\n![image](https://user-images.githubusercontent.com/8862021/49687317-db07f300-fac6-11e8-9eac-f8057ab0fb7f.png)\r\n\r\n3. Once you made the change, you can create the pull request from within your copy of the repository. The pull request then alerts us of the change:\r\n![image](https://user-images.githubusercontent.com/8862021/49687334-1c000780-fac7-11e8-8beb-9f98e23ed17a.png)\r\n\r\nI think the rest of the steps are self explanatory but I'm happy to help. Shoot me an email (linkgeorg@gmail.com) with any questions you have.\r\n\r\n	2018-12-08 14:58:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:31	277126
1694396	\N	In summary, the change to the README.md should be done in the repository and you do not need to attach any files when creating the pull request.	2018-12-08 14:59:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:31	277126
1694397	\N	Thanks @GeorgLink for the clarifications. I'm closing this pull request (I see a new one, anyway).	2018-12-09 22:31:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:32	277192
1694398	\N	I think this is an implementation of #55. Just noting it here so that we have the crosslink.	2018-12-09 22:32:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:33	277192
1694399	\N	Here are the thoughts from the meeting and my head: \r\n1. Remove D&I and re-input "GMD" as the specific working group. \r\n2. Remove "security" as a heading \r\n3. Add a new commit pull request, ensuring some alignment with the heading's that Ben notes in issue 55. \r\n4. Then we will merge this PR and expect the cross group iteration to continue. \r\n	2018-12-12 17:18:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:33	277110
1694400	\N	@foundjem thx a lot for the new changes. Would you mind summarizing how you addressed our comments? (I'm going through the changes anyway, I think I can figure out it myself ;-) ).	2018-12-19 16:09:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:33	277192
1694401	\N	Hello, \nSorry this was the initial changes I met before the previous commit, but the file was not in my right repo. The aim of the commit was for Matt and you guys to look into content of what we are to write, if the structure is correct thus far. I explained in the general meeting yesterday that I need help on certain areas, since I don‚Äôt have all the inside of the working group.\nHope we could discuss more today during the meeting.\n\nThanks,\nArmstrong\n\n\n> On Dec 19, 2018, at 11:09, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> @foundjem thx a lot for the new changes. Would you mind summarizing how you addressed our comments? (I'm going through the changes anyway, I think I can figure out it myself ;-) ).\n> \n> ‚Äî\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n	2018-12-19 16:35:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:33	277313
1694402	\N	\n\n> On Dec 9, 2018, at 5:41 PM, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> @jgbarah requested changes on this pull request.\n> \n> I think this needs major work... Please, address the comments with a new version, and let me know if I can help. Thanks for your effort!\n> \nOk, I am addressing the comments, also, I need help on the content of Introductions and Background. However, I have fixed the structure of the README.md file.\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056817>:\n> \n> >  _Growth, Maturity and Decline_ is a working group focused on the lifecycle of open source projects. We do not valence the stages, but seek to build awareness of those stages among consumers of these metrics. Decline can be ok when a project's utility is waning; or terrible if 20% of the entire internet relies on that project. Context matters, and we are not the arbiters of your context. The "valence" of "good/bad" emerges from use cases and YOUR context.\n>  \n> -This is a [CHAOSS](https://chaoss.community) working group, focused on the [Growth-Maturity-Decline][gmd] metrics category. Its aim is to coordinate the definition of the metrics, and the production of software for implementing them, in this area.\n> +This is a [wg-diversity-inclusion](https://chaoss.community) working group, focused on the [Growth-Maturity-Decline][gmd] metrics category. Its aim is to coordinate the definition of the metrics, and the production of software for implementing them, in this area.\n> I think this is not right. This is still a CHAOSS working group, and certainly it is not the D&I working group ;-)\n> \nI have deleted the D&I entry, now its only GMD  wg\n\n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056851>:\n> \n> >  \n> -Usually, we try to make decissions mainly during the last meeting of each month,\n> -so that decisions can be brought when convenient to the monthtly main CHAOSS meeting,\n> -which is the first meeting of each month. In all the meetings we may have an agenda,\n> -but random issues can be raised if time allows, after we're done with the agenda.\n> -Whenever possible, and specially if a decission needs to be made,\n> -ensure that issues / pull requests about the subject matter were opened some time before the meeting,\n> -so that anyone had the opportunity of commenting on them, and make up their mind about that subject matter.\n> +TODO: Fill out a short section that links to D&I metrics repo and explains how this repo fits into overall CHAOSS metrics effort.\n> Again, this is about D&I, it should be about the GMD wg.\n> \nAddressed. Only GMD -wg now\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056899>:\n> \n> > @@ -39,37 +45,54 @@ You can contribute by proposing new goals for a focus area, or new questions for\n>  or new metrics for answering those questions. Or by helping to refine goals, and questions.\n>  \n>  \n> -## Meetings\n> I think we need info about meetings somewhere, since this is one of the main activities of the wg.\n> \nDone!\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056926>:\n> \n> > +TODO: Fill out a short section that links to D&I metrics repo and explains how this repo fits into overall CHAOSS metrics effort.\n> +[D&I](https://github.com/chaoss/wg-diversity-inclusion)\n> +\n> +\n> +## Table of Contents\n> +\n> +- [Security](#security)\n> +- [Background](#background)\n> +- [Install](#install)\n> +- [Usage](#usage)\n> +- [API](#api)\n> +- [Maintainers](#maintainers)\n> +- [Contributing](#contributing)\n> +- [License](#license)\n> +\n> +## Security\n> What do we intend to comment about Security? Maybe this is not applicable in our case.\n> \nThis isn old, I addressed this in the first commit. See the new structure in the  ``readme-file‚Äô' branch\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056953>:\n> \n> >  \n> -**Exceptions** (these days there will be no meeting): none for now\n> +## Background\n> +* Background - A lot of the current content at the top of the repo will be moved here and expanded on.\n> Instead of this, we should have that content here...\n> \n> \nI need help here!\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056960>:\n> \n> >  \n> -## Mailing list\n> +## Install\n> I think we're not having installation instructions‚Ä¶\n> \nAddressed. \n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056976>:\n> \n> >  \n> -# Relationship with the chaoss/metrics repository\n> +## Usage\n> +* Usage - Should contain the repository structure information with additional detail about the concepts behind focus areas, use cases, implementations and all other important elements of the repo with appropriate links.\n> We need the actual content here...\n> \nI need help here with the content\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240056993>:\n> \n> >  \n> -# Maintainers\n> +## API\n> I think this is not relevant...\n> \nAddressed.\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240057019>:\n> \n> >  \n>  - [Jesus M. Gonzales-Barahona](https://github.com/jgbarah)\n>  - [Sean P. Goggins](https://github.com/sgoggins)\n> +\n> +## Contributing\n> This should be completed. In particular, the content about meetings, above, could have a place here.\n> \nI added some content here, pointing to how members can contribute to the GMD working. \n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240057060>:\n> \n> >  \n>  - [Jesus M. Gonzales-Barahona](https://github.com/jgbarah)\n>  - [Sean P. Goggins](https://github.com/sgoggins)\n> +\n> +## Contributing\n> +* Contribute - All of the content that references participation will be moved here and standardized with D&I repo\n> +See [the contributing file](contributing.md)!\n> +\n> +PRs accepted.\n> +\n> +Small note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n> +\n> +## License\n> +* License - A simple statement of the license that will be standardized with D&I repo\n> We should clarify what the license refers to. I think that should be at least the metrics definition, and the examples and reference implementations.\n> \nAddressed but needs reviewer‚Äôs attention.\n\n> \n> In README.md <https://github.com/chaoss/wg-gmd/pull/58#discussion_r240057081>:\n> \n> >  \n>  - [Jesus M. Gonzales-Barahona](https://github.com/jgbarah)\n>  - [Sean P. Goggins](https://github.com/sgoggins)\n> +\n> +## Contributing\n> +* Contribute - All of the content that references participation will be moved here and standardized with D&I repo\n> +See [the contributing file](contributing.md)!\n> +\n> +PRs accepted.\n> +\n> +Small note: If editing the README, please conform to the [standard-readme](https://github.com/RichardLitt/standard-readme) specification.\n> +\n> +## License\n> +* License - A simple statement of the license that will be standardized with D&I repo\n> +\n> +MIT ¬© 2018 \n> Should be the right copyright holder, I assume CHAOSS...\n> \n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://github.com/chaoss/wg-gmd/pull/58#pullrequestreview-182998459>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AFfeWWhFWOAndIonTC1RicI6DJ4Ee1u-ks5u3ZGGgaJpZM4ZJ4uU>.\n> \n\n	2018-12-19 17:27:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:33	277313
1694403	\N	@foundjem : Checking on the status of the requested changes. 	2019-01-08 14:50:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:33	277110
1694404	\N	Thx!	2018-12-12 19:40:16	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:34	277192
1694405	\N	@sgoggins @rpaik (or any other one): any comment?	2019-01-08 18:12:51	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:36	277192
1694406	\N	Looks good!	2019-01-16 15:37:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:40	277110
1694407	\N	Any comment?\r\n	2019-01-23 13:16:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:42	277192
1694408	\N	I saw your comments, @sgoggins. So, I wait until you move stuff around. Please, ping me and I have a look when you're done!	2019-01-29 13:27:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:45	277192
1694409	\N	This is ready for another review. 	2019-03-06 11:44:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:45	277110
1694410	\N	Thx for the review. I'm merging.	2019-01-29 21:57:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:46	277192
1694411	\N	Thanks for the positive reviews. I'm merging after addressing your comments.	2019-01-29 21:52:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:47	277192
1694412	\N	Thx! Merging...	2019-01-29 22:53:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:48	277192
1694413	\N	@jgbarah please have a look	2019-02-16 16:39:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:54	277268
1694414	\N	Thanks! It would be worth exploring if `sort=False` (which is less time-consuming) is also ok (I think it is, but I'm not completely sure). I would appreciate if you can have a look and find out.\r\n\r\nBut for now, I'm merging this, since it is better than the current situation ;-)	2019-02-20 12:25:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:54	277192
1694415	\N	Thanks for the reply. I'll find out	2019-02-20 12:28:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:54	277268
1694416	\N	So first I tested the append method directly by timing the creation of a Code_Changes object for different counts as shown below:\r\n\r\n```python\r\nsort_true_times = list()\r\nsort_false_times = list()\r\n\r\ndef time_test(sort):\r\n    changes = Code_Changes('git-commits.json', sort)\r\n\r\nfor i in range(100):\r\n    sort_true_times.append(timeit.timeit("time_test(True)", setup="from __main__ import time_test", number=i))\r\n    sort_false_times.append(timeit.timeit("time_test(False)", setup="from __main__ import time_test", number=i))\r\n    print(i, end=" >> ")\r\n    \r\nplt.plot(sort_true_times, 'r')\r\nplt.plot(sort_false_times, 'b')\r\nplt.show()\r\n```\r\n\r\n\r\n**red -> sort=True\r\nblue -> sort=False**\r\n\r\nThe output:\r\n![image](https://user-images.githubusercontent.com/31214064/53288916-ba416680-37b4-11e9-9d10-fe7dae8d628c.png)\r\n\r\nNext, I checked for each class method, which were making use of self.df:\r\n```python\r\nsort_true_times = list()\r\nsort_false_times = list()\r\n\r\nchanges_true = Code_Changes('git-commits.json', True)\r\nchanges_false = Code_Changes('git-commits.json', False)\r\n\r\nfunctions1 = [\r\n                "changes_true.total_count()", \r\n                "changes_true.count(since='2018-01-01', until='2018-07-01')",\r\n                "changes_true.by_month()"\r\n             ]\r\n\r\nfunctions2 = [ \r\n                "changes_false.total_count()", \r\n                "changes_false.count(since='2018-01-01', until='2018-07-01')",\r\n                "changes_false.by_month()"\r\n             ]\r\n\r\nfor i in range(3):\r\n    sort_true_times.append(timeit.timeit(functions1[i], globals=globals(), number=500))\r\n    sort_false_times.append(timeit.timeit(functions2[i], globals=globals(), number=500))\r\n    print(i, end=" >> ")\r\n    \r\nplt.plot(sort_true_times, 'r')\r\nplt.plot(sort_false_times, 'b')\r\nplt.show()\r\n```\r\n\r\nThe output:\r\n0 -> total_count()\r\n1 -> count(since='2018-01-01', until='2018-07-01')\r\n2 -> by_month()\r\n\r\n\r\n**red -> sort=True\r\nblue -> sort=False**\r\n\r\n\r\n![image](https://user-images.githubusercontent.com/31214064/53288969-ad714280-37b5-11e9-8226-c0786e866609.png)\r\n\r\n	2019-02-23 16:27:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:54	277268
1694417	\N	Thanks for the detailed analysis!	2019-02-24 22:19:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:54	277192
1694418	\N	New version, hopefully addressing @alpgarcia comments.	2019-02-25 14:50:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:55	277192
1694419	\N	I merged the pull request. I do not see any of my comments as obstacles to progress, though we might open an issue for addressing them in the future. 	2019-03-06 11:57:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:55	277110
1694420	\N	@kfogel any feedback?\r\n	2019-03-06 17:10:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:56	277192
1694421	\N	Since we're having no feedback, I'm proposing to merge this anyway, and if needed, work later on the resulting files. Do you agree?	2019-04-22 19:07:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:56	277192
1694422	\N	I agree.\n\n> On Apr 22, 2019, at 15:07, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> Since we're having no feedback, I'm proposing to merge this anyway, and if needed, work later on the resulting files. Do you agree?\n> \n> ‚Äî\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub, or mute the thread.\n	2019-04-22 22:29:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:56	277313
1694423	\N	Merged as a first version of the use case. continue discussion in #48	2019-04-24 15:12:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:56	277126
1694424	\N	Thanks a lot, @sgoggins. Please have a look at my comments.	2019-03-06 13:24:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:14:59	277192
1694425	\N	This looks good. 	2019-03-05 19:40:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:01	277148
1694426	\N	Thanks, @klumb. Merging...	2019-03-06 13:01:03	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:01	277192
1694427	\N	Merging, since nobody opposed.	2019-03-12 17:04:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:03	277192
1694428	\N	Merging, since nobody opposed.	2019-03-27 13:25:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:07	277192
1694429	\N	Merging, since nobody opposed.	2019-03-27 13:26:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:08	277192
1694430	\N	Good catch, but I have an opened a PR this morning which has that change. :)\r\nhttps://github.com/chaoss/wg-gmd/pull/112/files#diff-a1da987b25a7d8953456d7e19057feeaL19	2019-03-24 11:00:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:09	277311
1694431	\N	As @vchrombie said, already fixed in @112. Thanks anyway!	2019-03-24 22:56:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:10	277192
1694432	\N	Sorry, didn't notice this was included in a previous pull request, sent only a few hours before mine!. 	2019-03-25 05:48:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:10	277268
1694433	\N	No problem. Thanks anyway!	2019-03-25 08:50:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:10	277192
1694434	\N	Risk and value are new working groups and we agreed to merge this yesterday. 	2019-03-27 14:44:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:13	277110
1694435	\N	I think this is potentially confusing. See comments on the related issue. 	2019-03-27 14:45:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:14	277110
1694436	\N	After the discussion we had during our last weekly meeting, we decided to accept the change for now. The recently uploaded new version of the patch solves conflicts, and adds a file for tracking changes in metrics names.	2019-04-23 22:11:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:14	277192
1694437	\N	closes #110	2019-04-24 15:05:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:14	277126
1694438	\N	closes #101	2019-04-24 15:06:06	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:14	277126
1694439	\N	Please sign your commit by typing the following in the commit description: \r\nSigned-off-by: Your Name \\<YourName@example.org\\>	2019-04-01 17:02:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:17	277268
1694440	\N	Please have a look @GeorgLink 	2019-04-02 15:42:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:19	277268
1694463	\N	@jgbarah Can you review? I don't have the ability to assign or request reviewers.	2019-04-12 16:26:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:30	277148
1694441	\N	> I'll leave this pr for a repo maintainer to merge.\r\n\r\nAny comment on my suggestion of having the details about the browser plugin in a separate file, maybe in the governance repo, linked from all the `CONTRIBUTING.md` files in repos? Just to make it more clear how to contribute (which is the spirit of the file) instead of how to use the browser plugin for signing (which is, in this patch, most of the file now).\r\n\r\nIf you want, I could accept this, and then propose this change (moving the browser content to another file) so that other repos can use the link.\r\n\r\nWhat do you think?	2019-04-03 15:37:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:20	277192
1694442	\N	> Any comment on my suggestion of having the details about the browser plugin in a separate file, maybe in the governance repo, linked from all the CONTRIBUTING.md files in repos? Just to make it more clear how to contribute (which is the spirit of the file) instead of how to use the browser plugin for signing (which is, in this patch, most of the file now).\r\n\r\nThe DCO sign-off is an important part of how to contribute. Using the browser plugin makes it easier to contribute and linking to it in a different file might make it harder to find this helpful information. I suggest including it in the CONTRIBUTING.md as proposed by this pr.	2019-04-03 15:53:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:20	277126
1694443	\N	> The DCO sign-off is an important part of how to contribute. Using the browser plugin makes it easier to contribute and linking to it in a different file might make it harder to find this helpful information. I suggest including it in the CONTRIBUTING.md as proposed by this pr.\r\n\r\nOK. Let's try.	2019-04-03 22:28:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:20	277192
1694444	\N	I'm merging this, since nobody opposed, and I think it would be better to have this merged before our next meeting.	2019-04-09 17:28:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:22	277192
1694445	\N	OK, I think we are keeping minutes in google docs now. 	2019-04-09 17:40:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:22	277110
1694446	\N	@sgoggins, some days ago, we [closed an issue with this text](https://github.com/chaoss/wg-gmd/issues/100#issuecomment-474826374):\r\n\r\n> So, if I understood it well, during our last meeting we proposed that we will use Google Docs during the meeting for collaboratively writing the minutes, and then use the content of that document to produce a pull request, adding the text to meeting_notes.md.\r\n>\r\n> Am I right? Can we close this issue, if we have consensus on this?\r\n\r\nMaybe we closed the issue too quickly? If you don't agree, let's reopen the issue...	2019-04-09 21:19:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:22	277192
1694447	\N	@jgbarah  @sgoggins @GeorgLink,\r\nPlease review for the required changes if any.	2019-04-04 05:39:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:25	277312
1694448	\N	@jgbarah, @valeriocos please see for changes.	2019-04-05 09:31:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277312
1694449	\N	@jgbarah I had a look at the PR and LGTM, however your feedback is needed to be sure that everything is OK.	2019-04-05 10:27:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277242
1694450	\N	fixes #83 	2019-04-08 13:47:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277126
1694451	\N	Hey @GeorgLink, @valeriocos, please review, if this looks good now.	2019-04-08 16:47:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277312
1694452	\N	Thanks for fixing the LICENSE file change.\r\n\r\nIn the README, how about filling in or removing empty sections? The information `To be updated.` is not valuable by itself. A better way might be to create an issue for each of these sections and add them to the readme only after content was developed.	2019-04-08 17:05:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277126
1694453	\N	Hey @GeorgLink, I think it is better to comment out the empty sections instead of removing them, to keep track of adding them in the same order once the content is developed. Is this fine or shall I modify the PR to remove the comments.	2019-04-08 19:07:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277312
1694454	\N	> Hey @GeorgLink, I think it is better to comment out the empty sections instead of removing them, to keep track of adding them in the same order once the content is developed. Is this fine or shall I modify the PR to remove the comments.\r\n\r\nI'd be okay with it. I defer this decision to the maintainers of the repository. \r\n\r\nThank you for continuing to work on this.	2019-04-08 20:59:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277126
1694455	\N	@valeriocos, @jgbarah, review required as you get time :smile: 	2019-04-09 07:32:24	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277312
1694456	\N	lgtm! thank you @harshalmittal4 	2019-04-09 07:44:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277242
1694457	\N	To be honest, I'm no longer sure what we're trying with this pull request. Comparing with the D&I README, I see sections that are the same, and sections that are in one of them, but not in the other. In the end, maybe there is a tension between the [Standard Readme](https://github.com/RichardLitt/standard-readme) and the one in D&I, which only partially resembles it.\r\n\r\nTo avoid further discussion, and have a useful README, i suggest accepting this pr (because I think we're starting to get lost in the details), and then, in a separate pr, make it closer to the D&I README, to have some more uniform READMEs in CHAOSS.\r\n\r\nPlease, comment on this, or just merge this pr and we start working in the new one.	2019-04-09 17:24:54	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277192
1694458	\N	Hey @jgbarah, this PR tries to follow the structure proposed in #83, omitting the sections for which content is not present for now (I have commented out those headings in Readme's markdown). I checked the D&I Working Group's Readme, it also tries to the adhere to the same structure except the fact that some sections are missing there too. I think thats why they appear non-uniform to us.	2019-04-09 17:36:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277312
1694459	\N	Thanks for the clarification, @harshalmittal4. Yes, I know about the proposal in #83, and I'm happy with it. But I have the feeling that maybe we're now in the middle between that proposal, the D&I Readme, and the original proposal on following some standard for Readme files...\r\n\r\nBut in any case, as I commented, I think we can just accept this pr, and follow on from here...\r\n\r\nThanks a lot for moving this forward, @harshalmittal4 	2019-04-09 21:25:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277192
1694460	\N	Yes sure @jgbarah whatever you feel good :)	2019-04-10 04:16:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:26	277312
1694461	\N	@GeorgLink Please see.	2019-04-08 14:33:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:27	277312
1694462	\N	@jgbarah ^	2019-04-10 15:32:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:28	277312
1694464	\N	> Concerning proposals, is there a time frame to consider? For example, we mention ... during a certain time period, which is?\r\n\r\nSorry @foundjem, I don't understand your question. Are you thinking a focus area needs to be described differently? Maybe a different issue or pull request would be good for that.\r\n\r\nThis pull request is not about framing focus areas but about how they are presented in the README. 	2019-04-24 15:14:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:31	277126
1694465	\N	Fixed merge conflict.\r\n\r\nOdd. I don't mean to edit the code_development.md file, only the README.md.	2019-04-24 17:30:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:31	277126
1694466	\N	@kevin, I see a new push, but my comments were not addressed. If that's your preference, please comment, and I will accept the change, and later propose the change as I suggest in a separate pr.	2019-05-09 15:36:56	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:33	277192
1694467	\N	Sorry, I hadn‚Äôt seen your comments until after the push. I am looking at them now.\n\nCheers, \n\n\nKevin Lumbard (he/him/his)\nUniversity of Nebraska at Omaha\nPKI 367\n\n> On May 9, 2019, at 10:36 AM, Jesus M. Gonzalez-Barahona <notifications@github.com> wrote:\n> \n> @kevin <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_kevin&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=CJJIq-8cDBwNq8GgmnfFvF817XADyNTV2iLgXbb0oJ4&s=90jwOJgDFttoCv16URz3sd9zMehZAnnl1soEX83o7ss&e=>, I see a new push, but my comments were not addressed. If that's your preference, please comment, and I will accept the change, and later propose the change as I suggest in a separate pr.\n> \n> ‚Äî\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_chaoss_wg-2Devolution_pull_146-23issuecomment-2D490955258&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=CJJIq-8cDBwNq8GgmnfFvF817XADyNTV2iLgXbb0oJ4&s=3jv0d5XTSEsZoFX_-PRi9NNXGIf1U2Vt9QSgeM696IQ&e=>, or mute the thread <https://urldefense.proofpoint.com/v2/url?u=https-3A__github.com_notifications_unsubscribe-2Dauth_ACQNBNPY4CZUMIHIBY3RHK3PURAJTANCNFSM4HLSNT5A&d=DwMCaQ&c=Cu5g146wZdoqVuKpTNsYHeFX_rg6kWhlkLF8Eft-wwo&r=Issqq6yO-ovFOx6PfTtqTsYMu1wiJPFnXztcE7Cv-Bs&m=CJJIq-8cDBwNq8GgmnfFvF817XADyNTV2iLgXbb0oJ4&s=EFbZI1ytMyVrRcM4tTadvs6RfLT_lJJqgGsiId1sNMg&e=>.\n> \n\n	2019-05-09 15:38:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:33	277148
1694468	\N	I agree, the meeting notes link on readme should point to the meeting_notes.md. I made the change. I also changed the wording on the google doc link and hid the URL. I think this addresses your comments. I didn't include a link to the google doc on the readme as I think it may be redundant. If you want to include it I will submit another patch.	2019-05-09 15:52:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:33	277148
1694469	\N	After switching links from the google doc to the GitHub archive, where will people find the link to the google doc when they join a call?	2019-05-09 19:39:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:34	277126
1694470	\N	@GeorgLink I think that's in the file:\r\n\r\n> We use [Google Notes](https://docs.google.com/document/d/1fgMT5onwvNQE6b4gPWE7oSPHRvb9q1z6XEbD51EtCFg/edit#) to take the meeting minutes. Notes are captured by the entire group and a volunteer acting as the primary scribe.	2019-05-21 22:36:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:34	277192
1694471	\N	Re-reading the [CONTRIBUTING file](https://github.com/chaoss/wg-evolution/blob/master/CONTRIBUTING.md), maybe it already describes the process of how to propose metrics, and how to accept, with enough detail. If any, I would suggest to modify it, instead of creating a new file.\r\n\r\nThat do you think?	2019-05-08 15:27:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277192
1694472	\N	I think there should be a single file for all WGs that describes this process. What is here is really about an external person wishing to bring something forward. I think that the process by which a metric is released will be slightly different. I'll put such a document in the Metrics repo. 	2019-05-08 17:43:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277118
1694473	\N	@germonprez, sorry, I didn't understand. Do you mean that the `CONTRIBUTING.md` file in this repo should remain as such, and that we should have a description of the release process in the metrics repo? Or something else?	2019-05-08 22:18:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277192
1694474	\N	@GeorgLink : This is trying to solve the problem of people in working groups having to go to 2-5 different places in order to contribute. I think a little redundancy is helpful because we want people who are not on the calls to contribute. Even though I am on many calls, I still find it sometimes unclear how the different groups will decide metrics are ready to release. We actually left that to the working groups explicitly, I believe. I am fine with this document going away at some point, but right now I think we have too many places to look for important information. 	2019-05-09 04:12:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277110
1694475	\N	@jgbarah : I think as long as we distinguish between the contributing process and the releasing process for metrics into "these are metrics we actually worked out" view, and how we make the transition from metrics approved in the repository to metrics that we release clear, it works for me ... I would like to make a push for developing metrics, and some basic standard for saying, these are "ready to release" and "these are not". \r\n\r\nSome aspect of the CHAOSS community has been reticent to "release" the metrics we approved thus far, so it "feels" like there is some standard or check beyond contributing that is expected. Perhaps not, and if not, then the contributing doc with a few more words might do the trick. 	2019-05-09 04:23:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277110
1694476	\N	Here is a draft for articulating the criteria for the release of metrics from a WG. \r\n\r\nAs WGs prepare metrics for release they should meet the following criteria: \r\n\r\n1) The WG has a defined focus area with goal within which the metric resides\r\n2) The metric answers a specific question associated with respect to the focus area \r\n3) The metric has a detailed metrics page associated with it. For example, a page that provides: \r\n\r\n1. Description\r\n2. Use Cases\r\n3. Formula\r\n4. Sample Filter and Visualization\r\n5. Sample Implementation\r\n6. Known Implementations\r\n7. Test Cases (Examples)\r\n8. External References (Literature)	2019-05-09 11:09:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277118
1694508	\N	Please have a look @jgbarah. 	2019-06-21 15:26:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277268
1694528	\N	A few suggestions: \r\n- We could also implement classes for Empty/Merge commits, just like MasterInclude and remove those parameters from `compute()`\r\n- We can have a data directory which has three files: git_commit data, issue data and pull request data.\r\nLet me know what you all think about these points. Thanks!\r\n	2019-06-23 18:26:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277268
1694477	\N	> Here is a draft for articulating the criteria for the release of metrics from a WG.\r\n> ...\r\n\r\nThanks for the summary, @germonprez. Maybe I was too quick: I was not thinking on metrics that didn't have all of this. I was mostly thinking of metrics that had all of this, but maybe didn't have the consensus of the wg, which is something that up to now didn't happen, because of the discussion in issues, and the peer review process.\r\n\r\nI'm ok with your proposal, and I agree with you that it should be in the metrics repository, likely linked from somewhere (I suggest the `CONTRIBUTING.md` file) in each working group repository.\r\n\r\nWRT the template for the metric, if we want to specify one, i suggest that we follow the one in the "ready to release" metrics in this wg, just because we had the opportunity to flesh out and complete a bit previous templates.\r\n\r\n	2019-05-09 11:19:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277192
1694478	\N	> @jgbarah : I think as long as we distinguish between the contributing process and the releasing process for metrics into "these are metrics we actually worked out" view, and how we make the transition from metrics approved in the repository to metrics that we release clear, it works for me ... I would like to make a push for developing metrics, and some basic standard for saying, these are "ready to release" and "these are not".\r\n\r\nOK, I see. Then, maybe what @germonprez suggests is good enough in this direction?\r\n\r\n> Some aspect of the CHAOSS community has been reticent to "release" the metrics we approved thus far, so it "feels" like there is some standard or check beyond contributing that is expected. Perhaps not, and if not, then the contributing doc with a few more words might do the trick.\r\n\r\nYeah, I think i see the general feeling.\r\n\r\nSo, i suggest that we have two texts:\r\n\r\n* One would be project-wide, along the lines @germonprez comments, likely in the `metrics` repo. It would mention the minimum criteria for a metric to be "releaseable" (if that is a word ;-) ).\r\n* Another one would be specific for each working group, in the `CONTRIBUTING.md` or in  a spearate file (in this case, i suggest the name `RELEASING.md`, just because I guess that's a standard practice), defining the specific process the working group uses to decide that a metric is considered as released.\r\n\r\nIf you all agree with this, maybe we should widen the discussion about the first item to the whole CHAOSS community (I suggest preparing a pull request to the metrics repo, and then proposing the discussion, to focus the matter), and we just merge this pr (maybe renaming the file to `RELEASING.md`) as a first iteration of a wg defining "formally" the process for approval.\r\n\r\nWhat do you think?	2019-05-09 11:26:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277192
1694479	\N	Hi @jgbarah and thanks for this. I'll get together a releasing.md file for the metrics repo and issue the pull request today, spelling out the points above. You can then circulate to the wider community. Sounds like a plan. 	2019-05-10 11:10:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277118
1694480	\N	I saw the releasing.md file during the CHAOSS weekly meeting today. Can we close this pull request, and if needed continue refining that file?	2019-05-21 22:32:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277192
1694481	\N	We agree in closing during our biweekly meeting.	2019-06-05 14:41:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:35	277192
1694482	\N	This request looks good to me, I approve it.	2019-06-05 14:44:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:36	277313
1694483	\N	Sounds good to me.	2019-06-04 16:50:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:40	277313
1694484	\N	Please have a look at @jgbarah!	2019-06-10 14:18:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:41	277268
1694485	\N	@jgbarah Thanks for the prompt review! I had a look and left a few comments where I was a little unsure. I'll combine the pull requests and create a new one. I thought they would be easier to review if separated. 	2019-06-11 13:12:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:41	277268
1694486	\N	I have added combined #160 and #161 into #162 and added commits there. Please have a look . Before that, please have a look at my comment here (just above this one). Thanks :)	2019-06-11 18:22:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:41	277268
1694487	\N	Please have a look at @jgbarah!	2019-06-10 14:18:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:42	277268
1694488	\N	Please have a look at @jgbarah and @aswanipranjal!	2019-06-10 14:19:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277268
1694489	\N	After following the last few comments in #160, please have a look at this PR. Thanks!	2019-06-11 18:24:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277268
1694490	\N	@jgbarah, please have a look at the new commits as well my comments in the review you performed yesterday. Once, this is resolved, I'll squash the commits / add a proper discription. \r\nThanks!	2019-06-13 10:37:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277268
1694491	\N	@jgbarah, unfortunately I am running into some bugs after the recent changes. As it is getting late here (IST), I'll only be able to send the next patch tomorrow at the earliest. I am really sorry. \r\n\r\nI had a few queries (after latest meet). Though they are minor, I'll ask them here so we won't have to review them later in the next iteration:\r\n1. IsSourceCode:\r\nSo my current structure (the last changes I pushed to this branch and you reviewed) involves all algorithm classes inheriting from a `Algorithm` class. Since we are planning on only using classes (and not having to create objects), the `__init__` method is not of any use. \r\nThis is purely in regard to better readability but should I just not define __init__ in any class?\r\nOr I could do something like this: \r\n```python\r\nclass Naive(Algorithm):\r\n    """\r\n    Instatiates an object of Naive. It is one of several\r\n    "algorithms" used to define source code. \r\n    """\r\n    def __init__(self):\r\n        super().__init__()\r\n   \r\n     @staticmethod\r\n     def check().....\r\n\r\n```\r\nwhere Algorithm is:\r\n```python\r\nclass Algorithm:\r\n    """\r\n    Parent class to all Algorithms.\r\n    """\r\n    def __init__(self):\r\n        pass\r\n    \r\n    @staticmethod\r\n    def check ... \r\n```\r\nWhich one do you prefer?	2019-06-14 18:33:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277268
1694509	\N	Please have a look @jgbarah, @aswanipranjal	2019-06-26 19:13:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277268
1694529	\N	> A few suggestions:\r\n> \r\n>     * We could also implement classes for Empty/Merge commits, just like MasterInclude and remove those parameters from `compute()`\r\n\r\nYes, that was my idea. Those would be like a family of filters to the data, to be applied to "select" the items we're interested in.\r\n\r\n>     * We can have a data directory which has three files: git_commit data, issue data and pull request data.\r\n\r\nGood idea.\r\n	2019-06-24 07:36:22	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277192
1694531	\N	Thanks @aswanipranjal. Please have a look at #177 . @jgbarah has made some significant changes. A couple of the changes you suggest are there in #175 as well.	2019-06-19 08:49:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:02	277268
1694492	\N	> @jgbarah, unfortunately I am running into some bugs after the recent changes. As it is getting late here (IST), I'll only be able to send the next patch tomorrow at the earliest. I am really sorry.\r\n\r\nDon't worry. Do it at your earliest convenience.\r\n\r\n> I had a few queries (after latest meet). Though they are minor, I'll ask them here so we won't have to review them later in the next iteration:\r\n> \r\n>     1. IsSourceCode:\r\n>        So my current structure (the last changes I pushed to this branch and you reviewed) involves all algorithm classes inheriting from a `Algorithm` class. Since we are planning on only using classes (and not having to create objects), the `__init__` method is not of any use.\r\n>        This is purely in regard to better readability but should I just not define **init** in any class?\r\n>        Or I could do something like this:\r\n\r\nI'm still not sure we really don't need objects, but for now, we can work with classes and class methods. In this case, you can define __init__, but make it raise an exception.\r\n\r\nMy main concern is that if we don't need to instantiate the class, having just functions (without being embedded in classes) could be enough, and is simpler.\r\n\r\nBut for now, let's go with classes. Just a minor comment: don't name the root class `Algorithm`, which is too generic. Something like `IsSourceCode` or `CodeCriteria` would be clearer.\r\n   \r\n> \r\n> ```python\r\n> class Naive(Algorithm):\r\n>     """\r\n>     Instatiates an object of Naive. It is one of several\r\n>     "algorithms" used to define source code. \r\n>     """\r\n>     def __init__(self):\r\n>         super().__init__()\r\n\r\nIn any case, you don't need to redefine '__init__', if it does nothing new. It will just inherit the `__init__` in the parent.\r\n    \r\n>      @staticmethod\r\n>      def check().....\r\n> ```\r\n> \r\n> where Algorithm is:\r\n> \r\n> ```python\r\n> class Algorithm:\r\n>     """\r\n>     Parent class to all Algorithms.\r\n>     """\r\n>     def __init__(self):\r\n>         pass\r\n>     \r\n>     @staticmethod\r\n>     def check ... \r\n> ```\r\n> \r\n> Which one do you prefer?\r\n\r\nIs it more clear now?	2019-06-16 20:36:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277192
1694493	\N	Thanks @jgbarah. I had left a few comments on your last review. Please have a look whenever convenient. Regarding your response for my query above:\r\n- `Algorithm` is different from `IsSourceCode`. `IsSourceCode` is like a factory class, which calls the `check()` method for the class passed to it while instantiating its object\r\n`Algorithm` is the base class for all algorithms (`Naive`, `FolderExclude`, ...)...  I'll send the patch and you can have a look at the naming. \r\n\r\n- > In any case, you don't need to redefine 'init', if it does nothing new. It will just inherit the __init__ in the parent.\r\n\r\n    Since, in Python, the __init__ of super classes are not automatically called, I would have to a use \r\n    `super().__init__` to inherit `__init__` of the super class.	2019-06-17 09:09:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277268
1694494	\N	@jgbarah, please have look at this patch whenever convenient. I have mentioned a few points in **my** review above for this patch.	2019-06-17 11:13:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:44	277268
1694495	\N	Thanks @jgbarah: I fixed the DCO sign-off.\r\n\r\nWhat do other WG members think about this approach of more closely linking metrics with software.	2019-06-12 09:42:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:45	277126
1694496	\N	> What do other WG members think about this approach of more closely linking metrics with software.\r\n\r\nI'm requesting review by some other people, and would merge this if no negative feedback is received.	2019-06-12 09:58:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:45	277192
1694497	\N	This came up in the June 11 CHAOSS community call. I hope that all metrics can have something like this. So I approve. 	2019-06-12 10:47:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:45	277118
1694498	\N	Great! Merging then. Thanks to everyone!	2019-06-12 11:05:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:45	277192
1694499	\N	Any comment on this one?	2019-06-18 10:12:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:46	277192
1694500	\N	Thanks @GeorgLink, this LGTM. From the point of view of GrimoireLab your PR contents are correct and useful :)	2019-06-17 09:54:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:48	277245
1694501	\N	@alpgarcia I need to ask clarification on how the data works here.\r\n\r\nAssume the following scenario.\r\nIssue A was updated in week 1 and week 2.\r\nMy understanding of the graph is that issue A will only be counted in week 2 because that is the most recent update. Therefore, week 1 will show not # of active issues during that week because it is missing Issue A.\r\n\r\nIf my understanding is correct, then we can resolve the misunderstanding in one of two ways:\r\n1. Don't show over time, but only show a single number.\r\n2. Don't call it `# Issues Active` but `# Issues Last Active` to indicate that the graph only shows when issues were last active, not all weeks they were active in. 	2019-06-18 07:53:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:53	277126
1694502	\N	@GeorgLink you are correct, that's a limitation of GrimoireLab data. Thanks a lot for the clear explanation!\r\n\r\nProbably 1 is the best option. If we try to find an intersection between a general definition of activity like: `having any update within a given time period` and the data we have, i.e.: `last update`, we could end with something like: `Issues last updated from a given date to now`. Adding `now` is key because that makes last update valid as an indicator of activity. Using any previous end date will end with the problem you pointed out.\r\n\r\nDoes that make sense to you?\r\n\r\n	2019-06-18 08:52:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:53	277245
1694503	\N	@jgbarah I agree that GrimoireLab does not fully support this metric yet. However, in the dashboard, you can specify a time frame and have a single number returned with issues that were last active during that timeframe. That is a very closely related metric, assuming that the timeframe ends on the current date.\r\n\r\nI support @alpgarcia's suggestion to acknowledge the limitation but still including a Single Metric visualization for "issues active from x to now"!	2019-06-18 11:21:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:53	277126
1694504	\N	LGTM\r\n\r\n> > I agree that GrimoireLab does not fully support this metric yet. However, in the dashboard, you can specify a time frame and have a single number returned with issues that were last active during that timeframe. That is a very closely related metric, assuming that the timeframe ends on the current date.\r\n> \r\n> OK, i understand. in that case, please the text that explain that the metric is close, but not exactly the one defined, so that there is no confusion. I agree that the visualization is still useful.\r\n> \r\n> So, from my side, once that clarification is included, I'm good with the patch.\r\n\r\nLGTM, however, instead of only acknowledging GrimoireLab‚Äôs limitation, we can add the missing features since it has already been tested/used in the field.	2019-06-19 15:23:51	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:53	277313
1694505	\N	> instead of only acknowledging GrimoireLab‚Äôs limitation, we can add the missing features since it has already been tested/used in the field.\r\n\r\nWhat do you mean? Adding the missing features to GrimoireLab?	2019-06-19 15:34:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:53	277192
1694506	\N	> > instead of only acknowledging GrimoireLab‚Äôs limitation, we can add the missing features since it has already been tested/used in the field.\r\n> \r\n> What do you mean? Adding the missing features to GrimoireLab?\r\n\r\nYes, if that is possible it will be better. Since GrimoireLab has wide usage thus far.	2019-06-19 15:53:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:53	277313
1694507	\N	Please, check [my comment](https://github.com/chaoss/wg-evolution/issues/157#issuecomment-503335939) about the new structure in #177.	2019-06-18 22:31:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277192
1694510	\N	@jgbarah,I think it has been updated. \r\n- The `NewContributorsOfCommits` now has an overridden `_agg` method, defined (but raising`NotImplementedError`) in the Metric (root) class. \r\n- The `compute_timeseries` method has been renamed to `time_series` and is now defined in the Metric(root) class.\r\n- Different parameters to the `compute` method( which allow excluding empty, merge commits, etc.) have been removed as well.\r\n\r\nThe thing that may seem different is the nested class. The problem here is that to find new committers in a given period (a week or a month), committers in that period must be checked with all committers from the start of the data to before the start of the current period to find out how many are first time committers.\r\n\r\nTo make this computation easier, I implemented a custom aggregation method which I have nested inside `_agg` so that the overall structure remains the same when compared to metrics which do not need a custom aggregation method. \r\n\r\nHence, in the review **I** performed above, I asked whether you liked the nested aggregation method or did you want it outside as part of the `NewContributorsOfCommits` class, or even anywhere else.\r\n	2019-07-03 02:47:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277268
1694511	\N	Thanks for the clarification on the nested class. Now I think I understand your code. However, two comments:\r\n\r\nI think you have another, more simple, approach for the implementation: in `__init__`, in addition to the current df, you can build another one by grouping by author, and getting for each group the first date (which is when the author started to contribute). You can use the approach described at [this answer in SOF](https://stackoverflow.com/a/41525937), something like:\r\n\r\n```\r\nself.df = self.df.loc[df.groupby('author').date.idxmax()]\r\n```\r\n\r\nIn other words, you change the dataframe for one which has a row per author, with the first time that person contributed as time field.\r\n\r\nThen, in `_agg` you just count persons (rows)...\r\n\r\nWhat do you think?\r\n\r\nIn any case, now I realize that we should also work on the definition of this metric, because it is not one of those that we're about to release. But that's not a big issue, so go ahead anyway.	2019-07-03 21:35:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277192
1694512	\N	@jgbarah, I modified the code.\r\nPlease have a look. \r\n\r\nThough the code is now a lot cleaner, it strays from the other metrics, in that we completely modifying the dataframe. I am not sure how this becomes easier to someone trying to understand this code when compared to my implementation (adding a new column or a nested aggregation method), especially when the implementation you suggest changes the dataframe for the sake of easier calculation.\r\n\r\nCould you please give me some pointers on this?	2019-07-04 20:02:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277268
1694513	\N	> Though the code is now a lot cleaner, it strays from the other metrics, in that we completely modifying the dataframe. I am not sure how this becomes easier to someone trying to understand this code when compared to my implementation (adding a new column or a nested aggregation method), especially when the implementation you suggest changes the dataframe for the sake of easier calculation.\r\n> \r\n> Could you please give me some pointers on this?\r\n\r\nMy idea is that every metric may need a different dataframe. For example, I think not all the fields in the current dataframe are needed, at least not for all metrics we're computing, But we can come back to that late.\r\n\r\nWith this implementation, you do have the "standard" dataframe, although you change it (by reducing it) in a further step...\r\n\r\nOf course, we have to document all of this in detail, so that it doesn't confuse somebody ready the code.	2019-07-05 10:33:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:55	277192
1694514	\N	Any comment???	2019-06-19 16:22:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:57	277192
1694515	\N	@germonprez I see you found the same typos :D I had started my review during the call and never submitted it :-o	2019-06-19 21:08:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:57	277126
1694516	\N	Thanks a lot for your comments. Please, check the current version, with the problems hopefully fixed.	2019-06-26 22:08:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:57	277192
1694517	\N	@germonprez @GeorgLink could you please check if my changes are good enough to accept the pull request?	2019-07-15 21:46:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:57	277192
1694518	\N	Thanks @jgbarah 	2019-07-16 01:57:54	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:57	277118
1694519	\N	Maybe you could rebase this (if you feel it is still convenient) after #177 was merged? Or maybe re-start from scratch, I m not sure what would be better...	2019-06-19 16:21:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:59	277192
1694520	\N	@jgbarah, following the patch you merged, in `conditions.py`, the class `Code` and its children all have a `pass` statement in their `__init__` methods ([here](https://github.com/chaoss/wg-evolution/blob/1a275d0c4688935309c9c88fd6e9c78bcc1dc2cc/implementations/code_df/conditions.py#L19)). But I think you wanted them to raise a `NotImplementedError` exception as you mentioned in previous reviews. Which one do you prefer?\r\n\r\nI'll have a look as to what can be done with this pull request. 	2019-06-19 16:50:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:59	277268
1694521	\N	Please have a look @jgbarah. This is a temporary solution to the problem of having `since` and `until` being populated in the `__init__` method of commit.py.	2019-06-20 18:03:55	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:59	277268
1694522	\N	Please have a look @jgbarah, @aswanipranjal.	2019-06-25 19:41:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:59	277268
1694523	\N	Please have a look @jgbarah.	2019-06-28 10:01:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:15:59	277268
1694524	\N	@jgbarah, is the goal of this pull request to let me know what changes should be made or will this pull request get merged? There are a few very minor problems in the doc strings of some methods. 	2019-06-19 08:27:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277268
1694525	\N	>  the goal of this pull request to let me know what changes should be made or will this pull request get merged? There are a few very minor problems in the doc strings of some methods.\r\n\r\nI was intending to merge it, so that we have a more solid starting point. I think we can deal with docstrings and other details in further pull requests, if you all agree.	2019-06-19 16:00:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277192
1694526	\N	LGTM @jgbarah you can merge it, and minor changes will happen later.	2019-06-19 16:07:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277313
1694527	\N	OK, I'm merging it for now. Thanks a lot for all the comments. Let's continue from here. @Polaris000 (and everybody), in any case, please feel free to follow on the discussion in the items that were opened above.	2019-06-19 16:17:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277192
1694530	\N	Ok! Will implement that!	2019-06-24 07:39:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:01	277268
1694532	\N	@Polaris000, [#174](https://github.com/chaoss/wg-evolution/pull/174) changes the README.md file. Did you mean to point me towards [#177](https://github.com/chaoss/wg-evolution/pull/177) instead?\r\n\r\nI actually didn't see it before, my bad.	2019-06-19 09:10:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:02	277273
1694533	\N	Oops, sorry. Yeah I meant to point you to #177. 	2019-06-19 09:14:09	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:03	277268
1694534	\N	@aswanipranjal thanks a lot for this pr. After merging #177 I'm not sure if is better to rebase this one, to open a new one, or what... What do you think?	2019-06-19 16:19:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:03	277192
1694535	\N	@jgbarah, I'll rebase with master and open a new PR with the remaining changes (if any).\r\n\r\nClosing this for now. Thanks!	2019-06-19 17:44:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:03	277273
1694536	\N	Please have a look @aswanipranjal @jgbarah 	2019-06-30 19:36:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:05	277268
1694537	\N	Please have a look @jgbarah. Once this is merged, I'll change the naming for all files in a single pull request, hopefully tomorrow.	2019-07-07 20:06:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:05	277268
1694538	\N	Please, have a look at the comments, mainly at the one on assuming all items are pull requests.	2019-07-10 15:14:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:05	277192
1694539	\N	@jgbarah. I have responded to your comments above. Please have a look whenever possible. Thanks for the review!	2019-07-10 16:07:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:05	277268
1694540	\N	Done. Please proceed as commented, and we can merge this one. Thanks!	2019-07-15 19:03:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:05	277192
1694541	\N	Have a look @jgbarah.	2019-07-16 10:46:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:05	277268
1694542	\N	Please have a look @jgbarah.	2019-06-28 10:36:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:06	277268
1694543	\N	@jgbarah, I have updated the implementation according to the correct definition of Code_Changes_Lines. If you do not prefer adding another column for modifications in the `__init__` method, we could have a function to compute the total line changes given a DataFrame and use it as the `compute` method, while for the `_agg` method, we could define a custom aggregation method like I did for `New_Contributors_to_Commits` in #172.\r\n\r\nIt seems to me that we have a choice between the following:\r\n- Adding a column to the DataFrame and then using a standard aggregation method (sum, count, etc..)\r\n- Not adding a column but then using a custom aggregation method (like New_Contributors_to_Commits).\r\n\r\nIf it is a bit confusing, the `__init__` method has been overridden in the metric class here so that I could do the first option mentioned above, which is to add a column.\r\n\r\nWhat do you think?	2019-07-03 17:01:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:06	277268
1694544	\N	Thanks for your suggestions. Please, consider implementing an specific `_agg` method, as I commented above.	2019-07-03 21:21:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:06	277192
1694545	\N	Please have a look @jgbarah .	2019-07-04 10:17:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:06	277268
1694546	\N	Please have a look @jgbarah @aswanipranjal	2019-06-30 19:36:36	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:08	277268
1694547	\N	@GeorgLink @germonprez I think the conflict is solved, please have a look.	2019-07-10 15:43:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:10	277192
1694548	\N	Agreed. Shall merged. Thanks @jgbarah 	2019-07-10 20:37:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:10	277118
1694549	\N	Thanks a lot for noticing this problem. However, the patch didn't see to solve it, so i created #197. Please, @foundjem feel free to review or comment it. Meanwhile, I'm closing this one.	2019-07-03 12:04:59	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:11	277192
1694550	\N	issue links are from #187 and #188	2019-07-03 14:48:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:13	277148
1694551	\N	@jgbarah, I am not completely done with these and hence, am opening a draft request. \r\nSome doubts I had:\r\n1. Since the Metric (root) class will never be instantiated, should I even test it? Any methods it has will either be inherited or overridden in child classes, so these methods can be tested in the child classes.\r\nWhat do you think?  \r\n\r\n2. Where should I test the `time_series` method?   \r\nIt is defined in the Metric (root) class but is used (following instantiation) in individual metric classes.   \r\n\r\n3. Following 1., I am testing the method by using a temporary child class of Metric (root). In this class the `_agg` method will be trivially implemented.   \r\n\r\n4. Following 2., since the `_flatten` method in Metric(root) class is not implemented, I would have to define it in the temporary class I create in point 2. Is there a better way to do this or should I just copy the `_flatten` method we have in `Commit` class?  \r\n\r\n5. While testing the `_filterout` method in `Commit` class, I have again made use of a temporary class, since this method is called while instantiating the `Commit` class. Let me know if this is OK.\r\n\r\n6. You will find several tests not implemented (just have a pass statement). I have not done those for now. Most of them have a similar test which I have implemented. For example, `test__filterout()` has been implemented while `test__filteroutMasterInclude()` has not. \r\n\r\n7. Tests not yet implemented:\r\n- testing conditions.py\r\n- testing the commit heirarchy (metric tests)\r\n\r\nPlease have a look and let me know if anything has to be changed / any other tips and suggestions.\r\n	2019-07-03 19:51:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:14	277268
1694552	\N	>     1. Since the Metric (root) class will never be instantiated, should I even test it? Any methods it has will either be inherited or overridden in child classes, so these methods can be tested in the child classes.\r\n>        What do you think?\r\n\r\nI think we don't need to test them, at least for now.\r\n \r\n>     2. Where should I test the `time_series` method?\r\n>        It is defined in the Metric (root) class but is used (following instantiation) in individual metric classes.\r\n\r\nFor now, in the specific metrics when you are testing it with real dfs, but it woudl be nice if you can fidn a way of testing the root implementation by itself (maybe setting a fake self.df to do the testing).\r\n\r\n>     3. Following 1., I am testing the method by using a temporary child class of Metric (root). In this class the `_agg` method will be trivially implemented.\r\n\r\nWe can leave it as such for now, and decide later if to change it.\r\n\r\n>     4. Following 2., since the `_flatten` method in Metric(root) class is not implemented, I would have to define it in the temporary class I create in point 2. Is there a better way to do this or should I just copy the `_flatten` method we have in `Commit` class?\r\n\r\nYou can provide an specific _flatten method. If needed, subclass for that.\r\n \r\n>     5. While testing the `_filterout` method in `Commit` class, I have again made use of a temporary class, since this method is called while instantiating the `Commit` class. Let me know if this is OK.\r\n\r\nOK, as above.\r\n \r\n>     6. You will find several tests not implemented (just have a pass statement). I have not done those for now. Most of them have a similar test which I have implemented. For example, `test__filterout()` has been implemented while `test__filteroutMasterInclude()` has not.\r\n\r\nAs i said int he review, let's finish this, and you can work on those in a separate pr.\r\n \r\n>     7. Tests not yet implemented:\r\n\r\nSame as above. \r\n\r\n	2019-07-05 11:17:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:14	277192
1694553	\N	Please have a look @jgbarah \r\nIf you merge this (if you think this is alright), I'll send an updation of names in a following pull request tomorrow.\r\nThanks!	2019-07-07 19:37:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:14	277268
1694554	\N	@jgbarah, I have added docstrings. Please have a look at them and let me know if further changes have to be made. Thanks.	2019-07-10 19:29:16	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:14	277268
1694555	\N	@jgbarah, please have a look at the implementation. I'll add the tests today. Let me know if you think it is ok.\r\nPlease have a look at my comments below. Thanks!	2019-07-08 19:25:23	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:16	277268
1694556	\N	Before entering into details, I think we should focus on metrics that already done, at least done enough to be relases. Those are the ones [listed here](https://github.com/chaoss/wg-evolution/blob/master/focus_areas/code_development.md#summary-of-metrics).\r\n\r\nUntil we're done with those, let's keep this one in the fridge. I'll try to work on its definition meanwhile.	2019-07-10 15:16:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:16	277192
1694557	\N	@Polaris000 : Could you look at this and resolve the questions? 	2019-08-28 14:56:03	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:16	277110
1694558	\N	Hi @sgoggins. Thank you for your interest.\r\n I'll try my best to do this over the weekend.  If not, I'll work on it in the first week(s) of October, since I'm a little busy, right now. Sorry :(	2019-08-28 16:17:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:16	277268
1694559	\N	@Polaris000, if you don't find the time, don't worry. This metric is not fully defined anyway, so we could just reopen a pr later, when that's done.	2019-08-29 10:11:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:16	277192
1694560	\N	Since I see no movement, I¬¥m closing this for now. @Polaris000, please feel free to open a new pr when you have time.	2019-09-12 07:32:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:16	277192
1694561	\N	Please have a look @jgbarah.	2019-07-16 11:00:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:17	277268
1694562	\N	@jgbarah, the tests and notebook have not been added yet. But, if possible, please review the python script. Thanks!	2019-07-14 18:39:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:18	277268
1694563	\N	@jgbarah , though I have not added the test, if possible, please review the python script.\r\nThanks!	2019-07-14 18:42:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277268
1694564	\N	I think we're only missing tests now, right?	2019-08-06 09:57:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277192
1694565	\N	Yes, @jgbarah. WIll add those according to the latest changes to support travis.	2019-08-06 10:00:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277268
1694566	\N	@jgbarah, added tests. Please have a look. This pull request should successfully pass travis, once #222 is merged. I have rebased/updated all pull requests except the issue metric implementations. Though all pull requests are independent of each other (hopefully no merge conflicts!), only after merging #222 will the others pass travis.	2019-08-10 09:25:31	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277268
1694567	\N	This will pass only if #222 is approved.	2019-08-12 10:01:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277268
1694568	\N	> This will pass only if #222 is approved.\r\n\r\nYou're right. But i just merged that one...	2019-08-12 10:06:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277192
1694569	\N	@jgbarah , sorry for the merge conflict. I fixed it. Please have a look. Travis passed.	2019-08-12 10:29:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277268
1694570	\N	> @jgbarah , sorry for the merge conflict. I fixed it. Please have a look. Travis passed.\r\n\r\nGreat! Merging...	2019-08-12 11:40:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:19	277192
1694571	\N	@valeriocos, I tried to implement  your suggestions. Though this is in no way completely finished (have to add proper doc strings / refactor code a little / add proper defaults and help to argparse arguments), if possible, could you have a look at the script?\r\nThe script generates a pdf, which can be downloaded from the link below (the output pdf can be formatted later via the FPDF library)\r\n[xyz.pdf](https://github.com/chaoss/wg-evolution/files/3452943/xyz.pdf)\r\n\r\nA few queries:\r\n- would it be a good idea to add a `__str__` method to each of the metric classes? It becomes easier to display metric names (especially when using generalized code).\r\n- I think it would be good to add a `plot_chart` method to each metric class. Since each metric has different axes names to plot, it is difficult to generalize this. What do you think?\r\n- > This method looks really similar to test_git_metrics. Probably, it could be generalized. For instance, instead of having a list of metrics for each data source (see lines 19-20), we could have a dict that relates data sources to metrics like this one:\r\n```python\r\n{\r\n  'git': [code_changes_git, code_changes_lines],\r\n  'github': [reviews]\r\n}\r\n```\r\nI have structured to metrics like this:\r\n```python\r\n{\r\n    `commit`: [<commit metric class 1>, ...],\r\n    `issue`:[<issue metric class 1>, ...],\r\n    `pull_request`:...\r\n}\r\n```\r\nAnd the final result like this:\r\n```python\r\n{\r\n    `commit`: [\r\n        {\r\n             'metric': metric_obj,\r\n             'val': value of compute() method for that metric,\r\n             'df': dataframe returned from timeseries method for that metric\r\n         }, \r\n       {<metric 2>},\r\n       {<metric 3>}...\r\n    ],\r\n    `issue`:[<same as above, but for issue classes>],\r\n    `pull_request`:...\r\n}\r\n```	2019-07-31 16:43:40	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694572	\N	I have added support for images and json and pdf support was already there. I could n't find a good way to add markdown support, but am still looking. I also made it executable from the command line, so you can do :\r\n```bash\r\n$ analyze -r chaoss/wg-evolution -o pdf images ....\r\n```\r\nPlease have a look.	2019-08-12 11:32:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694573	\N	Please @Polaris000 ping me when the PR is ready to review, thanks	2019-08-15 12:38:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694574	\N	@valeriocos, I'll submit changes as soon as possible. I was working on another patch, but will switch to this now. Sorry to keep you waiting :(	2019-08-15 13:14:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694575	\N	no worries @Polaris000 :) take your time, thanks	2019-08-15 13:16:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694576	\N	If it is possible, you could have a look at my response to your review for #237 	2019-08-15 13:23:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694595	\N	Travis passed. Please have a look @jgbarah 	2019-08-12 11:14:24	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:28	277268
1694577	\N	@valeriocos , I have pushed new changes. The `pdf` and `images` output won't work directly in this patch since the required `push_time_series` method is added in #242 (still a draft). Anyhow, I copied a few of those changes on my local copy of this branch and they work. Please have a look at some of my responses to your review above	2019-08-15 18:26:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694578	\N	Thanks @Polaris000 , I'll try to check it tonight or tomorrow morning at most.	2019-08-15 18:27:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694579	\N	Thanks for the review!\r\n> It could be nice to have a docstring in the main() method to explain what the script does and a couple of examples to execute the script.\r\n\r\ndone\r\n> It could be useful to add some log information to make the user understand what the script is doing. Currently, no info is given until the results are generated.\r\n\r\ndone\r\n> A minor comment is about some functions having default mutable arguments (def run_metrics(items, categories=[COMMIT_CATEGORY] ...). If these default arguments are set by the argparser, it's probably better to remove as default function args. WDYT?\r\n\r\nYou are right, @valeriocos. I had kept them since they improved reabability since they tell you default args. Of course, the default values of parameters can be adding in the function docstring. but I thought this serves the purpose. WDYT?\r\n\r\nI am facing this issue sometimes regarding the git backend. I am unable to reproduce it:\r\n```\r\n(wg_imp) Polaris000@thinkpad:~/Documents/GSOC/wg-gmd$ analyze -r Polaris000/practise -o pdf -s 2018-01-01\r\n[2019-08-17 00:01:21,479] - Fetching data\r\nhttp://github.com/Polaris000/practise.git\r\nTraceback (most recent call last):\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/bin/analyze", line 7, in <module>\r\n    exec(compile(f.read(), __file__, 'exec'))\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/bin/analyze", line 349, in <module>\r\n    main()\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/bin/analyze", line 332, in main\r\n    items = fetch_data(owner, repo, args.api_token, args.categories)\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/bin/analyze", line 256, in fetch_data\r\n    items = list(git.fetch(category=category))\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backend.py", line 162, in fetch\r\n    for item in self.fetch_items(category, **kwargs):\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 155, in fetch_items\r\n    latest_items, no_update)\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 268, in __fetch_from_repo\r\n    repo = self.__create_git_repository()\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 319, in __create_git_repository\r\n    repo = GitRepository.clone(self.uri, self.gitpath)\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 827, in clone\r\n    cls._exec(cmd, env=env)\r\n  File "/home/icameisaticoded/.virtualenvs/wg_imp/lib/python3.6/site-packages/perceval/backends/core/git.py", line 1332, in _exec\r\n    raise RepositoryError(cause=cause)\r\nperceval.errors.RepositoryError: git command - Cloning into bare repository 'tmp'...\r\nfatal: http://github.com/Polaris000/practise.git/info/refs not valid: is this a git repository?\r\n```\r\nJust to make sure, I reran the same command right after this error, and the output was alright.\r\nWhy do you think this may have happened?\r\n\r\nWhenever convenient, please have a look at my latest iteration. I have moved all the generate_* functions to a separate module `generate_output.py`.\r\n\r\n	2019-08-16 03:26:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694580	\N	Thanks @Polaris000 for addressing my comments. The script looks really good.\r\n\r\n> You are right, @valeriocos. I had kept them since they improved reabability since they tell you default args. Of course, the default values of parameters can be adding in the function docstring. but I thought this serves the purpose. WDYT?\r\n\r\nyes, they improve reabability, however having mutable objects as default parameters can be risky (https://docs.python-guide.org/writing/gotchas/). Furthermore, in this specific case, the entrypoint is the bin/analyze and the argparser takes care of settings default params.\r\n\r\nI would suggest either to:\r\n- (i) remove the default params (this requires less work)\r\n```\r\nrun_metrics(items, categories, date_range, is_code, conds, period='M')\r\n```\r\n- (ii) reshape them\r\n```\r\ndef run_metrics(items, categories=None, date_range=None,\r\n                is_code=None, conds=None, period='M'):\r\n\r\ncategories = [COMMIT_CATEGORY] if categories is None else categories\r\nis_code = [Naive()] if is_code is None else is_code\r\ndate_range = (None, None) if date_range is None else date_range\r\nconds = [] if conds is None else conds\r\n# period can be left as it is since it's not mutable\r\n```\r\n	2019-08-17 08:01:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694581	\N	Thanks for the review @valeriocos .\r\nI have fixed the logging bug.\r\n\r\nYes, `ISSUE_METRICS` is supposed to remain empty, since they have not been defined yet. I plan to do that over the weekend. \r\nAnyways, I have imported issue metrics as they would be once defined. Of course, the script won't run unless that part is commented out.\r\nThe script will work once the issue metrics are defined.\r\n\r\nRegarding your point on the default arguments, I'm removing them.\r\nPlease have a look at my latest iteration if convenient.	2019-08-17 09:01:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694582	\N	Thanks @valeriocos for the review! Regarding the issue metrics, maybe I can remove the issue metric imports and once I am done with implementing them, I can add them. This way, the pull request can be merged without waiting for the metrics to arrive. WDYT?	2019-08-17 12:41:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694583	\N	Good idea @Polaris000! please update the PR and we will make a last pass	2019-08-17 12:45:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694584	\N	please @Polaris000 ping me when I can review it, thanks	2019-08-17 13:11:41	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694585	\N	@valeriocos, You can have a look. The last travis test is running.	2019-08-17 13:12:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694586	\N	Is it this error:\r\n```\r\n    result['metric'].plot_time_series(self.period)\r\n  File "/home/icameisaticoded/Documents/GSOC/wg-gmd/implementations/code_df/metric.py", line 86, in plot_time_series\r\n    params = self._get_params()\r\nAttributeError: 'CodeChangesLinesGit' object has no attribute '_get_params'\r\n```\r\nIf it is, that is because #242 has not been merged yet.	2019-08-17 13:31:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694587	\N	> For the next PR, we should probably include some doc in the README or have a separated README . Maybe it's a topic to be discussed with @jgbarah and @aswanipranjal.\r\n\r\nAre you referring to general documentation or anything in particular?\r\nIf its the former, #241, once complete, should solve that issue do what you want. That part has been mentioned by Jesus.	2019-08-17 13:34:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694588	\N	Thanks for the reviews @valeriocos .	2019-08-17 13:34:26	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277268
1694589	\N	> If it is, that is because #242 has not been merged yet. \r\n\r\nYes, it is that error. Thank you for the pointer\r\n\r\n> Are you referring to general documentation or anything in particular?\r\n> If its the former, #241, once complete, should solve that issue do what you want. That part has been mentioned by Jesus.\r\n\r\ngeneral documentation, #241 looks promising :)	2019-08-17 13:37:19	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:23	277242
1694590	\N	Thanks for the idea, @sgoggins. I think it improves the template. Please, have a look at my two comments: I only have serious objections to one of the changes.	2019-07-16 22:10:02	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:24	277192
1694591	\N	LGTM	2019-07-17 14:46:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:25	277118
1694592	\N	Please have a look @jgbarah 	2019-08-11 16:54:14	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:27	277268
1694593	\N	Travis passed. Please have a look @jgbarah .	2019-08-12 11:13:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:27	277268
1694594	\N	@jgbarah. I'll have a look today at all the tests and update anything that's required.	2019-08-06 09:23:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:28	277268
1694596	\N	@jgbarah, I got travis to work, but there is a small hiccup: I keep having to add the project path to PYTHONPATH in the `before_install` part of `travis.yml` :\r\n```yaml\r\n   export PYTHONPATH=$PYTHONPATH:$(pwd)\r\n```\r\nThe tests and coverage run as expected locally, but for some reason, the `implementations` module cannot be detected while running travis, unless I add the above line.\r\n\r\nI have fixed all imports, added the `__str__` methods to the classes and renamed all modules.\r\nPlease have a look whenever convenient. I have also changed the structure of tests as we discussed.	2019-08-09 07:38:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:36	277268
1694597	\N	Closing this pull request since #226 already includes these changes.	2019-07-25 06:35:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:38	277268
1694598	\N	I don't have permission to activate Travis on this repo (so I cannot check if everything works smoothly). Btw the tests work locally (@Polaris000 checked it on his side too).	2019-07-23 16:40:49	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277242
1694599	\N	This PR tackles issue https://github.com/chaoss/wg-evolution/issues/225	2019-07-23 16:51:08	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277242
1694600	\N	This kind of makes sense, but I wonder if the reference implementations are actually going to change that much over time. My expectation is that they will *evolve* üòÇ slowly. I am not opposed in any way, but I wonder if we might go such a long time before the reference implementation changes that whoever wrote the tests won't be around to help interpret a failure. Merely a thought. 	2019-07-23 16:52:45	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277110
1694601	\N	Thank you @sgoggins for your comment	2019-07-23 17:13:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277242
1694602	\N	This also resolves issue #179.	2019-07-25 18:06:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277268
1694603	\N	> This kind of makes sense, but I wonder if the reference implementations are actually going to change that much over time. My expectation is that they will _evolve_ joy slowly. I am not opposed in any way, but I wonder if we might go such a long time before the reference implementation changes that whoever wrote the tests won't be around to help interpret a failure. Merely a thought.\r\n\r\nI understand your concerns, @sgoggins. But the idea of the tests tend to be that: if in the future they fail, somebody will have to research to know why they fail. Usually, it is better to know they are no longer working (even to decide t drop them), than to ignore that, and have a reference implementation which is not working. More details in the referenced issues.\r\n\r\nSo, if nobody opposes, I will configure the repo to run those tests.	2019-08-02 17:09:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277192
1694604	\N	I am okay with tests, but I think about implications they have on the\nworking group.\nIs there any technical debt that the WG collects by adding tests?\nDoes this raise the requirements for all metrics to include tests to be\nconsidered complete?\n	2019-08-02 17:20:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277126
1694605	\N	> I am okay with tests, but I think about implications they have on the working group. Is there any technical debt that the WG collects by adding tests? Does this raise the requirements for all metrics to include tests to be considered complete?\r\n\r\nThis is something that of course we can discuss. Tests are (I think) a part of the reference implementation, written to ensure that the code produces the expected output. Of course we can live without them, but that means that checking that changes to the reference implementations are good will require manual intervention: tests will be helpful mostly on that front.\r\n\r\nIn case this adds tech debt to the future, or just that they don't help, we could decide to drop them in the future. And I don't think this should be a requirement for metrics. Now, even having a reference implementation is not a requirement. Depending on how we evolve, maybe at some point having a reference implementation becomes a requirement, if we all decide so, and maybe later having tests for the reference implementation too. But not for now, not without a general consensus, and I think nobody is even proposing that.\r\n\r\nFrom another point of view, you can also consider this as a proof of concept, to test the idea of having tests in this repo, and later help us to evaluate if the idea of reference implementations, and tests for them, is good enough to extend to other wgs...\r\n\r\nWhat do you thnk?  	2019-08-02 17:55:20	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277192
1694606	\N	I agree. Thank you. Let's learn more about tests in reference\nimplementations.\n	2019-08-02 19:01:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277126
1694607	\N	After @GeorgLink comment, I'm merging this patch, since nobody seems to oppose, and we need it to move forward. Thanks to all of you!	2019-08-06 09:09:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:39	277192
1694608	\N	WIll update with latest changes soon!	2019-08-06 09:28:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:41	277268
1694609	\N	This issue with detail is that it creates a tight coupling between the metrics definition and a point in time tool release. 	2019-07-31 14:40:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:41	277110
1694610	\N	Looks good to me	2019-07-31 15:11:32	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:42	277118
1694611	\N	Looks good	2019-07-31 15:28:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:44	277148
1694612	\N	Would you mind forcing a new push, to make Travis run the tests?	2019-08-12 11:46:29	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:45	277192
1694613	\N	@jgbarah please have a look at this after #242. Thanks	2019-08-20 18:44:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:45	277268
1694614	\N	Notebooks and tests will be added soon.	2019-08-06 09:30:01	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:46	277268
1694615	\N	@jgbarah, please have a look. The tests require files from #232 to pass.	2019-08-21 17:22:18	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:47	277268
1694616	\N	Ran the tests again @jgbarah!	2019-08-22 17:35:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:47	277268
1694617	\N	@jgbarah : Could you validate and approve that the change you requested was made? 	2019-08-28 14:54:43	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:47	277110
1694618	\N	Please have a look @jgbarah .	2019-08-12 11:23:35	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:48	277268
1694619	\N	Thanks for the reviews!\r\n\r\n@valeriocos, I think ipython works differently from PYTHONPATH. Even if I run the jupyter command from the root of the package, my cwd would still be the notebooks folder when I run the notebook. Hence, if I have to use the `implementations.scripts....` absolute import, I think I would have to use the `../..`. WDYT?	2019-08-14 16:05:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:48	277268
1694620	\N	Sorry for the late reply. OK, let's merge it then. Thanks	2019-08-15 13:29:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:49	277242
1694621	\N	@valeriocos , the file you changed is has been renamed. Travis is working for #205.	2019-08-12 10:32:54	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:49	277268
1694622	\N	yes, just realized it. Thanks	2019-08-12 10:51:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:49	277242
1694623	\N	Please have a look @jgbarah.\r\nI can now create implementations for Issue related metrics, since @valeriocos pushed the required changes to a separate branch which can be used for the purpose of the reference implementations.\r\nMore information can be found [here.](https://github.com/chaoss/grimoirelab-perceval/issues/563)	2019-08-13 17:44:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:52	277268
1694624	\N	Do you suggest adding anything else on the main README page (for the whole repo) [here](https://github.com/chaoss/wg-evolution/pull/241/files#diff-04c6e90faac2675aa89e2176d2eec7d8)?	2019-08-20 18:48:52	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:52	277268
1694625	\N	> Do you suggest adding anything else on the main README page (for the whole repo) [here](https://github.com/chaoss/wg-evolution/pull/241/files#diff-04c6e90faac2675aa89e2176d2eec7d8)?\r\n\r\nI think we can start with this, and them improve it. But now, it is urgent that you produce your final blog post, and that you can link to this pr and the README files that explain the results of your work. So, I'm merging this for now. Feel free to pr with improvements to READMEs in the future, if you want.	2019-08-22 16:49:51	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:52	277192
1694626	\N	Thanks for the review @jgbarah. I'll upload my final post soon, so that you and the other mentors can have a look and suggest changes.	2019-08-22 17:33:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:52	277268
1694627	\N	Please have a look @jgbarah, whenever convenient.	2019-08-20 18:44:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:53	277268
1694628	\N	@GeorgLink I believe I've correctly fixed the formatting/link errors, please let me know if I missed anything. Thank you for catching them!	2019-10-18 00:43:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:55	277112
1694629	\N	@jgbarah we can merge it and maybe reiterate on the code with another pr	2019-10-14 19:31:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:57	277242
1694630	\N	Yes, i agree. Thanks.	2019-10-14 21:00:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:57	277192
1694631	\N	> Thank you @Polaris000 , the PR looks good! @jgb feel free to have a look, thanks!\r\n\r\nAgain, I am not @jgbarah ...	2019-10-14 11:45:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:58	277283
1694632	\N	sorry @jgb for the noise	2019-10-14 13:03:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:58	277242
1694633	\N	@jgbarah we can merge it and reiterate on the code if needed	2019-10-14 19:32:03	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:59	277242
1694634	\N	Yes, I agree, thanks a lot for merging.	2019-10-14 20:59:33	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:16:59	277192
1694635	\N	The DCO signoff is not updating with changes to the final commit.	2019-03-25 20:39:27	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:03	277117
1694636	\N	> The DCO signoff is not updating with changes to the final commit.\r\n\r\nWhat do you mean? Did you `git commit --amend -s` and `git push -f` to add the DCO on a commit you had forgotten it?	2019-03-26 14:50:38	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:03	277126
1694637	\N	Change is made	2019-03-27 03:52:58	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:04	277117
1694638	\N	Please add your sign-off	2019-04-15 18:21:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:05	277118
1694639	\N	@sgoggins is Augur the only known implementation? Also, should that be a link to the Augur site?\r\n	2019-06-23 22:01:44	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277148
1694640	\N	I suspect that Augur is the only known implementation for this. Particularly from a CHAOSS tools perspective. The only other that might be worth checking out (but this could be done during the open period) would be FOSSology. \r\n\r\nYes, a link to AUGUR would be good... just the repo. 	2019-06-23 22:50:34	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277118
1694641	\N	> @sgoggins is Augur the only known implementation? Also, should that be a link to the Augur site?\r\n\r\nI'm pinging @alpgarcia and @valeriocos to see whether GrimoireLab has something. I think the [CoLic backend to Graal](https://github.com/chaoss/grimoirelab-graal#backends) has license information.	2019-06-24 02:29:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277126
1694642	\N	The CoLic backend provides license info (raw data), however the implementation of specific metrics (and visualizations) is an ongoing work in the context GSoC (cc @inishchith).	2019-06-24 07:16:07	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277242
1694643	\N	@valeriocos Sorry for the delayed response.\r\nYes, We're about to start some work on it by later this week (As currently, we're getting ready with the first iteration of some visualizations with the help of CoCom backend data).\r\nPlease let me know if we're looking at something specific, we can have a discussion on it :)\r\n\r\nThanks!	2019-06-24 13:51:46	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277269
1694644	\N	I'll create a new issue to continue discussing GrimoireLab visualization for license information. This pull request may be merged and closed.	2019-06-24 13:57:11	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277126
1694645	\N	@georg, does it need its own issue or do you want to wait and add it the release comment issues?\r\n	2019-06-24 13:59:25	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277148
1694646	\N	@klumb I opened a new issue #13 to not delay this pull request. I would handle it separately from the general release comment issues because it is very specific enhancement and not a feedback.	2019-06-24 14:02:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277126
1694647	\N	@GeorgLink : I merged with approval and encourage modification during the evaluation period. 	2019-06-24 15:45:12	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:10	277110
1694648	\N	This looks good, I have two comments that we can discuss in the community meeting on June 25th. \r\nFirst, we need absolute paths for links and images in these detail pages because we are pulling them directly from the markdown file.  Second, for know implementations, I think we should include links to repositories or websites.\r\n\r\nAlso, are known implementations specifically "CHAOSS implementations"  or are we looking externally as well.\r\n	2019-06-24 15:53:57	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:11	277148
1694649	\N	Ive seen different working groups attack those details in different ways and welcome a standard!  \n\nCan you merge it? I stepped away from my computer for a spell. \n\nThanks,\n\nSean P. Goggins\n(816) 368-1364\nhttp://www.seangoggins.net\n\n\n"I force people to have coffee with me, just because I don't trust that a friendship can be maintained without any other senses besides a computer or cellphone screen.‚Äù\n‚Äî John Cusack\n\n\nOn Jun 24, 2019, at 17:53, Kevin Lumbard <notifications@github.com> wrote:\n\nThis looks good, I have two comments that we can discuss in the community meeting on June 25th.\nFirst, we need absolute paths for links and images in these detail pages because we are pulling them directly from the markdown file. Second, for know implementations, I think we should include links to repositories or websites.\n\nAlso, are known implementations specifically "CHAOSS implementations" or are we looking externally as well.\n\n‚Äî\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or mute the thread.	2019-06-24 15:58:37	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:11	277110
1694650	\N	I don't have merge rights but I would say LGTM. 	2019-06-24 16:00:13	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:11	277148
1694651	\N	tested on my repo. Markdown image links are working properly on website with absolute url paths	2019-06-24 20:49:15	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:13	277148
1694652	\N	Updated metrics release to conform to latest version of CHAOSS Standard Headings. 	2019-07-17 14:43:47	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:16	277110
1694653	\N	@klumb Requesting your OK	2019-07-29 18:45:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:24	277117
1694654	\N	This is fine	2019-07-29 19:04:39	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:24	277148
1694655	\N	@sgoggins, please review. These changes do not reflect #25 - I am waiting for comment.\r\n 	2019-07-29 19:29:50	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:25	277148
1694656	\N	the absolute path to the image should work after merging this pr	2019-07-30 02:10:17	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:25	277126
1694657	\N	the absolute path to the image should work after merging this pr	2019-07-30 02:10:00	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:26	277126
1694658	\N	Could you please include a link to "the google doc"?	2019-09-23 18:53:10	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:27	277126
1694659	\N	> Could you please include a link to "the google doc"?\r\n\r\nhttps://docs.google.com/document/d/1canGZZYi5iIYRU6qRMPDppfRIUlPSHlzjB5MCofbuf8/edit?usp=sharing\r\n\r\nThanks for reminding me!	2019-09-23 20:53:05	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:27	277117
1694660	\N	@germonprez or @klumb : Could you look this over to see how close it is to the standard structure that we currently are working with. I know we changed it in the past few weeks, and I am not sure if this is "it". :) 	2019-10-07 18:24:28	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:27	277110
1694661	\N	I think this is where we are at\r\n\r\n**Description (required)**\r\n\r\n**Objectives (required)**\r\n\r\n**Implementation (required - sub-headings optional)** \r\n\r\n- Filters (optional). \r\n- Visualizations (optional). \r\n- Tools providing metric (was: known or sample implementations) (optional). \r\n- Data Collection Strategies (optional). \r\n- Success Metrics (optional) -- maybe reword this (To be discussed in the D&I WG) \r\n\r\n**Resources (required)**\r\n	2019-10-07 18:49:30	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:27	277148
1694662	\N	Merging my own pull request, since it's a change we discussed, and it's been sitting here for 3 weeks :) 	2019-05-23 09:03:48	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:32	277132
1694663	\N	Merging my own pull request again, mostly to fix the spacing issue introduced in the last commit.	2019-05-23 09:10:53	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:33	277132
1694664	\N	Looks great - thanks @germonprez for capturing the conversation spot on!	2019-06-13 15:10:04	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:38	277330
1694665	\N	Thank you @bproffitt!\r\n\r\nI don't have time to review before the metric deadline but I think this is good.	2019-06-20 16:42:21	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:40	277126
1694666	\N	This is no longer needed. The comment period is over.	2019-07-25 15:09:42	\N	\N	25150	GitHub Pull Request Worker	0.0.1	GitHub API	2019-10-21 00:17:40	277148
1694667	\N	Thanks Tobie!\n\nI added related metrics from the README.\n	2019-02-05 21:05:37	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694668	\N	Issue #6 is related	2019-04-23 23:58:53	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694669	\N	Note, I created the pr #14 based on the table we have in the google doc. This is of course not the final version, but it helps get the work we have done already out in front of people.\r\n\r\n**Next step:** pick one of the metrics, create a metric detail page based on one of the templates	2019-05-30 16:02:07	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694670	\N	This was done in the release	2019-08-08 15:28:24	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694671	\N	done	2019-04-19 11:51:31	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277126
1694672	\N	I also can't seem to assign issues, so pinging @GeorgLink @germonprez :) 	2019-04-19 07:18:59	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277132
1694673	\N	@geekygirldawn done!!	2019-04-19 10:27:26	\N	\N	25150	GitHub API Worker	0.0.3	GitHub API	\N	277118
