<div class="container-fluid">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-4">
            <div class="card user-card">
                <div class="card-body">
                    <h1>{{ current_user.id }}</h1>
                    <a id="delete-link" href="#">Delete Account</a>
                </div>
                <div class="card-footer">
                    <small class="text-muted">User Profile</small>
                </div>
            </div>
        </div>
        <div class="col-12 col-lg-8">
            <h2>Update Password</h2>
            <form id="user-settings-form" class="form-inline user-settings-form" method="POST" action="{{ url_for('user_update_password') }}">
                <div class="form-group">
                    <label for="password">Current Password</label>
                    <input type="password" name="password" id="password" class="form-control" required>
                    <label for="new_password">New Password</label>
                    <input type="password" name="new_password" id="new_password" class="form-control" aria-describedby="passwordHelpInline" required>
                    <small id="passwordHelpInline" class="text-muted">
                        Must be 8-20 characters long.
                    </small>
                    <br>
                    <label for="new_password_confirmation">Confirm New Password</label>
                    <input type="password" name="new_password_confirmation" id="new_password_confirmation" class="form-control" required>
                </div>
                <div class="btn"
                    style="background-color: var(--color-accent); padding: 0; margin: 0; margin-top: 10px;">
                    <button class="btn btn-outline-dark" style="color: white;" type="submit"
                        name="register">Save</button>
                </div>
            </form>
        </div>
    </div>
    <div class="row justify-content-center">
        <div class="col-12 col-lg-4">
            <br>
            <h2>Your Repo Groups</h2>
            {%- set groups = current_user.get_groups()["groups"] -%}
            {% if groups %}
            {% for group in groups %}
            {%- set tableHeaders =
            [{"title" : "Group ID"},
            {"title" : "Group Name"}]
            -%}
            <div class="display-table rounded w3-animate-opacity">
                <table class="table table-striped table-bordered">
                    <!-- Table header start -->
                    <thead>
                        <tr>
                            {%- for header in tableHeaders -%}
                            <th scope="col">{{ header.title }}</th>
                            {%- endfor -%}
                        </tr>
                    </thead>
                    <!-- Table rows start -->
                    <tbody>
                        {% for repo in repos %}
                        <tr>
                            <th scope="row">{{ group.group_id }}</th>
                            <td><a href="{{ url_for('user_group_view', group = group.name) }}">{{ group.name }}</a></td>
                        </tr>
                        {% endfor %}
                    </tbody>
                </table>
            </div>
            {% endfor %}
            {% else %}
            <h3>No groups created</h3>
            {% endif %}
        </div>
        <div class="col-12 col-lg-8">
            <br>
            <h2>Add Repos</h2>
            <form id="user_repo_form" class="form-inline user-settings-form">
                <div class="form-group">
                    <label for="repo_url">New Repo or Organization URL</label>
                    <input type="text" id="repo_url" class="form-control" required>
                </div>
                <div class="btn"
                    style="background-color: var(--color-accent); padding: 0; margin: 0; margin-top: 10px;">
                    <button class="btn btn-outline-dark" style="color: white;" type="submit"
                        name="add_repo">Add</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="loading-modal" class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered spinner-container">
        <svg class="spinner" width="65px" height="65px" viewBox="0 0 66 66" xmlns="http://www.w3.org/2000/svg">
            <circle class="path" fill="none" stroke-width="6" stroke-linecap="round" cx="33" cy="33" r="30"></circle>
        </svg>
    </div>
</div>

<script type="text/javascript">
    var deleteLink = document.querySelector("#delete-link");
    var loadingModal = new bootstrap.Modal(document.getElementById('loading-modal'));
    var confimationText = "Click again to confirm deletion";

    deleteLink.addEventListener("click", function () {
        if (deleteLink.innerHTML == confimationText) {
            window.location.replace("{{ url_for('user_delete')}}");
        } else {
            deleteLink.classList.toggle("link-warning");
            deleteLink.innerHTML = confimationText;
        }
    });

    repoForm = document.getElementById("user_repo_form");
    repoForm.addEventListener("submit", (event) => {
        event.preventDefault();
        var input = document.getElementById("repo_url");
        loadingModal.show();
        window.location.replace("{{ url_for('av_add_user_repo') }}/" + input.value);
    });

    function formError(event, message) {
        event.preventDefault();
        flashToast(message);
    }

    passForm = document.getElementById("user-settings-form");
    passForm.addEventListener("submit", (event) => {
        var password = document.getElementById("password");
        var newpassw = document.getElementById("new_password");
        var passconf = document.getElementById("new_password_confirmation")

        if(newpassw.value.length < 8) {
            formError(event, "Password must be at least 8 characters");
        } else if(newpassw.value.length > 20) {
            formError(event, "Password must be at most 20 characters");
        } else if(newpassw.value != passconf.value) {
            formError(event, "Passwords do not match");
        }
    });
</script>