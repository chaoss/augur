{% with messages = get_flashed_messages() %}
<div id="toasts" class="toast-container position-absolute">
    {% if messages %}
    {% for message in messages %}
    <div class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
        <div class="d-flex">
            <div class="toast-body">
                {{message}}
            </div>
            <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
        </div>
    </div>
    {% endfor %}
    {% endif %}
</div>
<div id="toast-placeholder" class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true">
    <div class="d-flex">
        <div class="toast-body">
            Test
        </div>
        <button type="button" class="btn-close me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
</div>
{% endwith %}

<script>
// dynamically create and flash toast messages, delay in milliseconds
function flashToast(message, delay = 0) {
    toastContainer = document.getElementById("toasts");

    // The toast-placeholder element is hidden above to make constructing a new toast easy at runtime
    toastPlaceholder = document.getElementById("toast-placeholder").cloneNode(true);

    // prepare the toast to be added to the toast container element
    toastPlaceholder.removeAttribute("id");
    toastPlaceholder.children[0].children[0].textContent = message;

    toastContainer.appendChild(toastPlaceholder);

    // initialize and show the toast, with optional delay
    toast = new bootstrap.Toast(toastPlaceholder);
    setTimeout(() => toast.show(), delay);
}
</script>

<script>
// Load and display toasts created during rendering of the page template
var toastElList = [].slice.call(document.querySelectorAll('.toast'))
var toastList = toastElList.map(function(toastEl) {
    // Creates an array of toasts (it only initializes them)
    return new bootstrap.Toast(toastEl) // No need for options; use the default options
});

// We use setTimeout to delay the showing of toasts for a second after the page loads
setTimeout(function() {
    // For each toast, we create a unique timeout set for 500ms multiplied by its index in the toast array
    // After the timeout is reached, we call toast.show() and it's displayed on the page
    toastList.forEach((toast, i) => setTimeout(() => { toast.show() }, i * 500));
}, 1000);
</script>
